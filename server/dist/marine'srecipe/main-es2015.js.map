{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/service/admin-auth.service.ts","./src/app/service/auth-guard.service.ts","./src/app/service/authentification.service.ts","./src/app/service/index.ts","./src/app/service/recettes.service.ts","./src/app/views/accueil/accueil.component.ts","./src/app/views/accueil/accueil.component.html","./src/app/views/ajout-recette/ajout-recette.component.ts","./src/app/views/ajout-recette/ajout-recette.component.html","./src/app/views/apropos/apropos.component.ts","./src/app/views/apropos/apropos.component.html","./src/app/views/categories/categories.component.ts","./src/app/views/categories/categories.component.html","./src/app/views/contact/contact.component.ts","./src/app/views/contact/contact.component.html","./src/app/views/gerer-les-recettes/gerer-les-recettes.component.ts","./src/app/views/gerer-les-recettes/gerer-les-recettes.component.html","./src/app/views/ingredients/ingredients.component.ts","./src/app/views/ingredients/ingredients.component.html","./src/app/views/inscrire/inscrire.component.ts","./src/app/views/inscrire/inscrire.component.html","./src/app/views/ma-liste-de-courses/ma-liste-de-courses.component.ts","./src/app/views/ma-liste-de-courses/ma-liste-de-courses.component.html","./src/app/views/mes-commentaires/mes-commentaires.component.ts","./src/app/views/mes-commentaires/mes-commentaires.component.html","./src/app/views/mes-recettes/mes-recettes.component.ts","./src/app/views/mes-recettes/mes-recettes.component.html","./src/app/views/modifier-recette/modifier-recette.component.ts","./src/app/views/modifier-recette/modifier-recette.component.html","./src/app/views/mon-profile/mon-profile.component.ts","./src/app/views/mon-profile/mon-profile.component.html","./src/app/views/recette/recette.component.ts","./src/app/views/recette/recette.component.html","./src/app/views/recettes/recettes.component.ts","./src/app/views/recettes/recettes.component.html","./src/app/views/refresh/refresh.component.ts","./src/app/views/refresh/refresh.component.html","./src/app/views/request-reset/request-reset.component.ts","./src/app/views/request-reset/request-reset.component.html","./src/app/views/response-reset/response-reset.component.ts","./src/app/views/response-reset/response-reset.component.html","./src/app/views/se-connecter/se-connecter.component.ts","./src/app/views/se-connecter/se-connecter.component.html","./src/app/views/unite/unite.component.ts","./src/app/views/unite/unite.component.html","./src/app/views/update-password/update-password.component.ts","./src/app/views/update-password/update-password.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthentificationService } from './service/authentification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(public auth: AuthentificationService){ }\n}\n","<script>\n  //pour que la navbar responsive se referme lorsqu'on sélectionne un ongle\n  $(document).on('click', '.navbar-collapse.show', function (e) {\n    $(this).collapse('hide');\n  });\n</script>\n\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" role=\"navigation\">\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\"\n    aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toogle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n\n  </button>\n  <img src=\"../assets/img/logo.jpeg\" class=\"rounded float-left\" alt=\"logo\" id=\"logo\">\n  <div class=\"collapse navbar-collapse justify-content-md-center\" id=\"navbarNavDropdown\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/\">Accueil </a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/allRecipes\">Recettes</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/aboutMe\">A propos</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" [routerLink]=\"['/refresh']\" [queryParams]=\"{url:'contact'}\" skipLocationChange=\"true\">Contact</a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" [routerLink]=\"['/refresh']\" [queryParams]=\"{url:'login'}\" skipLocationChange=\"true\">Se connecter</a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" [routerLink]=\"['/refresh']\" [queryParams]=\"{url:'register'}\" skipLocationChange=\"true\">S'inscrire</a>\n      </li>\n\n      <li class=\"nav-item dropdown\" *ngIf=\"auth.isLoggedIn()\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link dropdown-toggle\"\n          id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          {{auth.getUserDetails()?.pseudo}}\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n          <a class=\"dropdown-item\" routerLink=\"/profile\">Mon profil</a>\n          <a class=\"dropdown-item\" routerLink=\"/favorites\">Mes recettes ♥</a>\n          <a class=\"dropdown-item\" routerLink=\"/shoppingList\">Ma liste de course</a>\n          <a class=\"dropdown-item\" routerLink=\"/comment\">Mes commentaires</a>\n          <a class=\"dropdown-item\" *ngIf=\"auth.isAdmin()\" routerLink=\"/handleRecipes\">Gerer les recettes</a>\n          <a class=\"dropdown-item\" routerLink=\"\" (click)=\"auth.logout()\">Deconnexion</a>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n\n<!--footer-->\n<!--logo insta-->\n<link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" type='text/css'>\n\n<footer>\n\n  <div class=\"dark-line\">\n  <h2> Marine's recipes |</h2>\n  <p>\"Eat good, feel good\" ||</p>\n  <div class=\"social\">\n  <a href=\"https://www.instagram.com/marineteroitin/?hl=fr\"><i class=\"fa fa-lg fa-instagram\"></i></a>\n  </div>\n  <span class=\"copyright\"><a>© Proudly created by Marine Téroitin • Tous droits réservés (textes et images) </a></span>\n  </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { RouterModule, Routes } from '@angular/router'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { InscrireComponent } from './views/inscrire/inscrire.component'\nimport { SeConnecterComponent } from './views/se-connecter/se-connecter.component'\nimport { AccueilComponent } from './views/accueil/accueil.component'\nimport { AuthentificationService, AuthGuardService, AdminAuthService, RecettesService } from './service'\nimport { ContactComponent } from './views/contact/contact.component';\nimport { GererLesRecettesComponent } from './views/gerer-les-recettes/gerer-les-recettes.component';\nimport { MaListeDeCoursesComponent } from './views/ma-liste-de-courses/ma-liste-de-courses.component';\nimport { MesCommentairesComponent } from './views/mes-commentaires/mes-commentaires.component';\nimport { MesRecettesComponent } from './views/mes-recettes/mes-recettes.component';\nimport { MonProfileComponent } from './views/mon-profile/mon-profile.component';\nimport { RecettesComponent } from './views/recettes/recettes.component';\nimport { UpdatePasswordComponent } from './views/update-password/update-password.component';\nimport { AProposComponent } from './views/apropos/apropos.component';\nimport { RecetteComponent } from './views/recette/recette.component';\nimport { IngredientsComponent } from './views/ingredients/ingredients.component';\nimport { CategoriesComponent } from './views/categories/categories.component';\nimport { UniteComponent } from './views/unite/unite.component';\nimport { AjoutRecetteComponent } from './views/ajout-recette/ajout-recette.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { ModifierRecetteComponent } from './views/modifier-recette/modifier-recette.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RequestResetComponent } from './views/request-reset/request-reset.component';\nimport { ResponseResetComponent } from './views/response-reset/response-reset.component';\nimport { RefreshComponent } from './views/refresh/refresh.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AccueilComponent },\n  { path: 'login', component: SeConnecterComponent },\n  { path: 'register', component: InscrireComponent },\n  { path: 'profile', component: MonProfileComponent, canActivate: [AuthGuardService] },\n  { path: 'update-password', component: UpdatePasswordComponent, canActivate: [AuthGuardService] },\n  { path: 'aboutMe', component: AProposComponent },\n  { path: 'allRecipes', component: RecettesComponent },\n  { path: 'recipe/:id', component: RecetteComponent },\n  { path: 'handleRecipes', component: GererLesRecettesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'category', component: CategoriesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'ingredient', component: IngredientsComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'add-recipe', component: AjoutRecetteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'unite', component: UniteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'contact', component: ContactComponent},\n  { path: 'shoppingList', component: MaListeDeCoursesComponent, canActivate: [AuthGuardService] },\n  { path: 'comment', component: MesCommentairesComponent, canActivate: [AuthGuardService] },\n  { path: 'favorites', component: MesRecettesComponent, canActivate: [AuthGuardService] },\n  { path: 'updateRecipe/:id', component: ModifierRecetteComponent, canActivate: [AdminAuthService, AuthGuardService] },\n  { path: 'request-reset-password', component: RequestResetComponent },\n  { path: 'response-reset-password/:token', component: ResponseResetComponent },\n  { path: 'refresh', component: RefreshComponent }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccueilComponent,\n    MonProfileComponent,\n    InscrireComponent,\n    SeConnecterComponent,\n    ContactComponent,\n    GererLesRecettesComponent,\n    MaListeDeCoursesComponent,\n    MesCommentairesComponent,\n    MesRecettesComponent,\n    RecettesComponent,\n    UpdatePasswordComponent,\n    RecetteComponent,\n    IngredientsComponent,\n    CategoriesComponent,\n    UniteComponent,\n    AjoutRecetteComponent,\n    ModifierRecetteComponent,\n    RequestResetComponent,\n    ResponseResetComponent,\n    RefreshComponent\n  ],\n  imports: [\n    NgbModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [AuthGuardService, AuthentificationService, RecettesService, AdminAuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core'\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthentificationService } from './authentification.service'\n\n@Injectable()\nexport class AdminAuthService implements CanActivate {\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate () {\n        if (!this.auth.isAdmin()) {\n            this.router.navigateByUrl('/')\n            return false\n        }\n        return true\n    }\n}","import { Injectable } from '@angular/core'\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthentificationService } from './authentification.service'\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    private token: string\n\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate () {\n        if (!this.auth.isLoggedIn()) {\n            this.router.navigateByUrl('/')\n            return false\n        }\n        return true\n    }\n}","import { Injectable } from '@angular/core'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Observable, of } from 'rxjs'\nimport { map, tap, catchError } from 'rxjs/operators'\nimport { Router } from '@angular/router'\nimport { ContactDetail } from '../views/contact/contact.component'\n\n//login\nexport interface UserDetails {\n    pseudo: string\n    email: string\n    mdp: string\n    admin: boolean\n    emailConfirmed?: boolean\n    abonneNews: boolean\n    exp: number\n    iat: number\n}\n\ninterface TokenResponse {\n    token: string\n    error: string\n}\n\ninterface Response {\n    error: string\n}\n\n//inscription\nexport interface TokenPayload {\n    pseudo: string\n    email: string\n    mdp: string\n    mdp2: string\n    admin: boolean\n    abonneNews: boolean\n    error: string\n}\n\n//changement mdp\nexport interface UserMdp {\n    pseudo: string\n    mdp: string\n    newmdp: string\n    mdp2: string\n    error: string\n    success: string\n}\n\n//modif profile\nexport interface UserProfile {\n    pseudo: string\n    email: string\n    abonneNews: boolean\n    success: string\n}\n\n@Injectable()\nexport class AuthentificationService {\n    private token: string\n    private error: string\n\n    constructor(private http: HttpClient, private router: Router) {\n\n    }\n\n    private saveToken(token: string): void {\n        localStorage.setItem('userToken', token)\n        this.token = token\n    }\n\n    private getToken(): string {\n        if (!this.token) {\n            this.token = localStorage.getItem('userToken')\n        }\n        return this.token\n    }\n\n    public getUserDetails(): UserDetails {\n        const token = this.getToken()\n        let payload\n        if (token) {\n            payload = token.split('.')[1]\n            payload = window.atob(payload)\n            return JSON.parse(payload)\n        } else {\n            return null\n        }\n    }\n\n    public isLoggedIn(): boolean {\n        const user = this.getUserDetails()\n        if (user) {\n            return user.exp > Date.now() / 1000\n        } else {\n            return false\n        }\n    }\n\n    public emailConfirmed(): boolean {\n        const user = this.getUserDetails()\n        if (user) {\n            return user.emailConfirmed\n        } else {\n            return false\n        }\n    }\n\n    public isAdmin(): boolean {\n        const user = this.getUserDetails()\n        if (user) {\n            return user.admin\n        } else {\n            return false\n        }\n    }\n\n    public register(user: TokenPayload): Observable<any> {\n        const base = this.http.post('/server/register', user)\n\n        const request = base.pipe(\n            map((data: TokenResponse) => {\n                if (data.token) {\n                    this.saveToken(data.token)\n                }\n                return data\n            })\n        )\n        return request\n    }\n\n    public login(user: TokenPayload): Observable<any> {\n        const base = this.http.post('/server/login', user)\n        const request = base.pipe(\n            map((data: TokenResponse) => { //map permet de récupérer des données\n                if (data.token) {\n                    this.saveToken(data.token)\n                }\n                return data\n            })\n        )\n        return request\n    }\n\n    public profile(): Observable<any> {\n        return this.http.get('/server/profile', {\n            headers: { Authorization: `${this.getToken()}` }\n        })\n    }\n\n    public logout(): void {\n        this.token = ''\n        window.localStorage.removeItem('userToken')\n        this.router.navigateByUrl('/')\n    }\n\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            // TODO: send the error to remote logging infrastructure\n            console.error(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n\n    public updatePassword(user: UserMdp): Observable<any> {\n        const base = this.http.put(`/server/update-password/${user.pseudo}`, user)\n\n        return base.pipe(\n            map((data: Response) => {\n                return data\n            })\n        );\n    }\n\n    public deleteProfile(pseudo: string): Observable<any> {\n        const url = `/server/delete-profile/${pseudo}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${pseudo}`)),\n            catchError(this.handleError<any>('deleteProfile'))\n        );\n    }\n\n    public updateProfile(user: UserProfile): Observable<any> {\n        const base = this.http.put(`/server/mon-profile/${user.pseudo}`, user)\n\n        return base.pipe(\n            tap(_ => console.log(`updated ${user.pseudo}`)),\n            catchError(this.handleError<any>('updateProfile'))\n        );\n    }\n\n    public getAbonneNews(): any {\n        return this.http.get(`/server/abonneNews`)\n    }\n\n    public sentEmailToNewRecipe(to: any, idRecette: number): any {\n        return this.http.get(`/server/newRecipe/${to.pseudo}/${idRecette}`)\n    }\n\n    public requestReset(body): Observable<any> {\n        return this.http.post(`/server/req-reset-password`, body);\n    }\n\n    public newPassword(body): Observable<any> {\n        return this.http.post(`/server/new-password`, body);\n    }\n\n    public ValidPasswordToken(body): Observable<any> {\n        return this.http.post(`/server/valid-password-token`, body);\n    }\n\n    public sendEmailContact(infos: ContactDetail): any {\n        let params = new HttpParams();\n\n        params = params.append(`name`, infos.nameUser);\n        params = params.append(`email`, infos.emailUser);\n        params = params.append(`subject`, infos.subject);\n        params = params.append(`message`, infos.message);\n\n        return this.http.get(`/server/contact/send`, { params: params})\n    }\n}\n","export * from './admin-auth.service'\nexport * from './auth-guard.service'\nexport * from './authentification.service'\nexport * from './recettes.service'\n","import { Injectable } from '@angular/core'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { map, tap } from 'rxjs/operators'\nimport { CreateRecipe } from '../views/ajout-recette/ajout-recette.component'\nimport { AuthentificationService } from './authentification.service'\nimport { element } from 'protractor'\n\n\n\nexport interface RecipeDetails {\n    idRecette: number\n    nomRecette: string\n    datePublication: Date\n    nbFavoris: number\n    nbVues: number\n    etapes: Text\n    lienImage?: any\n    idImage?: number\n    ingredients?: IngredientDetails[]\n}\n\nexport interface IngredientDetails {\n    idRecette?: number\n    idIngredient?: string\n    nomIngredient?: string\n    qte?: number\n    libelleUnite?: string\n    idUnite?: number\n    disabled?: boolean\n}\n\nexport interface UniteDetails {\n    idUnite: number\n    libelleUnite: string\n}\n\nexport interface QuantiteDetails {\n    qte: any,\n    idRecette: number\n    idIngredient: number,\n    idUnite: number\n}\n\nexport interface CategoryDetails {\n    idCategorie: number\n    libelleCategorie: string\n}\n\nexport interface FavorisDetails {\n    pseudo: string\n    idRecette: number\n}\n\nexport interface ListeCoursesDetails {\n    pseudo: string\n    listIngredients: any\n}\n\nexport interface ImageDetails {\n    idImage: number\n    lienImage: string\n}\n\n@Injectable()\nexport class RecettesService {\n\n    constructor(private http: HttpClient, private auth: AuthentificationService) { }\n\n    public getAllRecipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/allRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                })\n            });\n            return data\n        }))\n    }\n\n    public getAllRecipesAndIngredients(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/allRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                })\n                element.ingredients = []\n                this.getIngredientsByIdRecette(element.idRecette).subscribe(data => {\n                    console.log(data)\n                    element.ingredients.push(data[0])\n                })\n            });\n            return data\n        }))\n    }\n\n    public getRecipeById(id: any): Observable<any> {\n        return this.http.get<any>('/server/recipe/' + id)\n    }\n\n    public getIngredientsByIdRecette(id: any): any {\n        return this.http.get<any>('/server/recipe/' + id + '/ingredients')\n    }\n\n    public getUtiliserIngredientsByIdRecette(id: any): Observable<QuantiteDetails[]> {\n        const base = this.http.get('/server/recipe/' + id + '/utiliserIngredients')\n        const utiliserIngredients = base.pipe(map((data: QuantiteDetails[]) => {\n            return data\n        }))\n        return utiliserIngredients\n    }\n\n    public getIngredientById(idIngredient: any): Observable<IngredientDetails> {\n        const base = this.http.get('/server/ingredient/' + idIngredient)\n        return base.pipe(map((data: IngredientDetails) => {\n            return data\n        }))\n    }\n\n    public getUniteById(idUnite: any): Observable<UniteDetails> {\n        const base = this.http.get('/server/recipe/unite/' + idUnite)\n        return base.pipe(map((data: UniteDetails) => {\n            return data\n        }))\n    }\n\n    public getLatestReceipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/latestReceipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            console.log(data)\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public getMostPopularRecipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/mostPopularRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            console.log(data)\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public deleteRecipe(id: any): Observable<any> {\n        const url = `/server/delete-recipe/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public getRecipeByCategory(idCategorie: any): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/recipe/category/${idCategorie}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public getAllCategory(): any {\n        return this.http.get<any>(`/server/category`)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n    }\n\n\n\n    public updateNbView(recette: RecipeDetails): Observable<any> {\n        return this.http.put<any>(`/server/recipe/update-nbView/${recette.idRecette}`, recette)\n    }\n\n    public deleteCategory(id: any): Observable<any> {\n        const url = `/server/category/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateCategory(categorie: CategoryDetails): Observable<any> {\n        return this.http.put(`/server/category/update`, categorie)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n\n\n    }\n\n    public updateRecipeIng(recette: RecipeDetails, ingredient: IngredientDetails): Observable<any> {\n        return this.http.put(`/server/recipe/${recette.idRecette}/ingredient/update`, ingredient)\n            .pipe(map((res) => {\n                return res\n            }))\n\n\n    }\n\n    public addCategory(categorie: CategoryDetails): any {\n\n        this.http.post('/server/category/add', categorie).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public getAllIngredients(): any {\n        return this.http.get<any>(`/server/ingredient`)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public getRestIngredients(idRecette: any): any {\n        return this.http.get<any>(`/server/recipe/${idRecette}/ingredient/rest`)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public getRestCategory(idRecette: any): any {\n        return this.http.get<any>(`/server/recipe/${idRecette}/category/rest`)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n    }\n\n    public deleteIngredient(id: any): Observable<any> {\n        const url = `/server/ingredient/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateIngredient(ingredient: IngredientDetails): Observable<any> {\n        return this.http.put(`/server/ingredient/update`, ingredient)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public addIngredient(ingredient: any): any {\n        this.http.post('/server/ingredient/add', ingredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public createRecipe(recipe: CreateRecipe): Observable<any> {\n        const res = this.http.post('/server/add-recipe', recipe)\n        return res.pipe(map((res) => {\n            return res\n        }))\n    }\n\n    public addIngredientsAndCategoryToNewRecipe(recipe: CreateRecipe): Observable<any> {\n        const res = this.http.post('/server/recipe/addIngredientAndCategorie', recipe)\n        return res.pipe(map((res) => {\n            console.log(res)\n            return res\n        }))\n    }\n\n    public addRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails): Observable<any> {\n        return this.http.post(`/server/recipe/${recette.idRecette}/category/add`, categorie)\n            .pipe(map((res) => {\n                return res\n            }))\n    }\n\n    public getAllUnite(): any {\n        return this.http.get<any>('/server/unite')\n            .pipe(map((data: UniteDetails[]) => {\n                return data\n            }))\n    }\n\n    public deleteUnite(id: any): Observable<any> {\n        const url = `/server/unite/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateUnite(unite: UniteDetails): Observable<any> {\n        return this.http.put(`/server/unite/update`, unite)\n            .pipe(map((data: UniteDetails[]) => {\n                return data\n            }))\n    }\n\n    public addUnite(unite: any): any {\n        this.http.post('/server/unite/add', unite).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n\n    public addFavoris(newFavori: FavorisDetails): any {\n        return this.http.post(`/server/favorites/add`, newFavori).subscribe(res => {\n            {\n                return res\n            }\n\n        })\n    }\n\n\n    public addListeCourses(newListeCourses: ListeCoursesDetails) {\n        this.http.post(`/server/shoppingList/add`, newListeCourses).subscribe(res => {\n            {\n                return res\n            }\n\n        })\n    }\n\n\n    public getFavoris(): Observable<RecipeDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/recipe/favorites/${pseudo}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public getFavorisByCategory(idCategorie: number): Observable<RecipeDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/recipe/favorites/${pseudo}/${idCategorie}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public deleteFavoris(id: any): Observable<any> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const url = `/server/favorites/${pseudo}/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n\n    public getListeCourses(): Observable<IngredientDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/shoppingList/${pseudo}`);\n        return base.pipe(map((data: IngredientDetails[]) => {\n            return data\n        }))\n\n    }\n\n    public getRestListeCourses(): Observable<IngredientDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/shoppingList/rest/${pseudo}`);\n        return base.pipe(map((data: IngredientDetails[]) => {\n            return data\n        }))\n    }\n\n    public addIngredientShoppingList(ingredient: any): any {\n        return this.http.post(`/server/shoppingList/add/ingredient`, ingredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public deleteListeCourse(id: any): Observable<any> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const url = `/server/shoppingList/delete/${id}/${pseudo}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public getCategory(id: any): any {\n        return this.http.get<any>(`/server/recipe/${id}/category`)\n            .pipe(map((data: any) => {\n                return data\n            }))\n    }\n\n    public updateRecipeName(recette: RecipeDetails): Observable<any> {\n\n        return this.http.put(`/server/recipe/name/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public updateSteps(recette: RecipeDetails): Observable<any> {\n\n        return this.http.put(`/server/recipe/step/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public deleteIngredientRececipe(ingredient: IngredientDetails, recette: RecipeDetails): Observable<any> {\n        const url = `/server/recipe/${recette.idRecette}/ingredient/${ingredient.idIngredient}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${ingredient.idIngredient} from recipe ${recette.idRecette}`)),\n        );\n    }\n\n    public addIngredientRecette(newIngredient: IngredientDetails): any {\n        this.http.post(`/server/recipe/${newIngredient.idRecette}/add/ingredient/${newIngredient.idIngredient}`, newIngredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public deleteRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails): Observable<any> {\n        const url = `/server/recipe/${recette.idRecette}/category/${categorie.idCategorie}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${categorie.idCategorie} from recipe ${recette.idRecette}`)),\n        );\n    }\n\n    public addImage(file: any): Observable<any> {\n        console.log(file)\n        return this.http.post(`/server/uploads`, file).pipe(map((data: any) => {\n            return data\n        }))\n    }\n\n    public getImage(id: number): any {\n        return this.http.get(`/server/image/${id}`).pipe(map((data: any) => {\n            console.log(data[0])\n            return data\n        }))\n    }\n\n    public getRestOfIngredients(ingredients: number[]): any {\n        let params = new HttpParams();\n\n        ingredients.forEach((idIngredient: number) => {\n            params = params.append(`ingredients[]`, idIngredient.toString());\n        })\n        return this.http.get<any>(`/server/ingredient/rest`, { params: params })\n            .pipe(map((data: IngredientDetails[]) => {\n                console.log(data)\n                return data\n            }))\n    }\n\n}    ","import { Component, OnInit } from '@angular/core';\nimport { RecipeDetails, RecettesService } from '../../service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.css']\n})\nexport class AccueilComponent implements OnInit {\n\n  public latestRecipes: RecipeDetails[]\n  public mostPopularRecipes: RecipeDetails[]\n\n  constructor(private recetteService: RecettesService, private router: Router) { \n  }\n\n  ngOnInit(): void {\n    this.getLatestReceipes()\n    this.getMostPopularRecipes()\n  }\n\n  getLatestReceipes() {\n\n    this.recetteService.getLatestReceipes().subscribe(\n      (latestRecipes: RecipeDetails[]) => {\n        this.latestRecipes = latestRecipes\n    },err => {\n      if(err instanceof HttpErrorResponse){\n        if(err.status === 402) {\n          console.log(\"Il n'y a pas encore de recettes.\")\n        }\n      }\n    })\n  }\n\n  getMostPopularRecipes() {\n\n    this.recetteService.getMostPopularRecipes().subscribe(\n      (mostPopularRecipes: RecipeDetails[]) => {\n        this.mostPopularRecipes = mostPopularRecipes\n    },err => {\n      if(err instanceof HttpErrorResponse){\n        if(err.status === 402) {\n          console.log(\"Il n'y a pas encore de recettes.\")\n        }\n      }\n    })\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload()\n        })\n      }, err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 402) {\n          console.log(\"Cette recette n'existe pas !\")\n        }\n      }\n    })\n  }\n\n}\n","<div class=\"media\">\n    <img src=\"../../assets/img/AroundMyWorld.jpeg\" class=\"img-fluid\" alt=\"Image Around my world, eat good feel good\">\n</div>\n\n<h5>Les plus vues</h5>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of this.mostPopularRecipes\"> <!--Pour chaque recette on représente sa carte-->\n            <div class=\"card h-100\">\n                <img class=\"card-img-top img-fluid\" src=\"{{recette.lienImage}}\" alt=\"Photo de la recette\"><!--mettre image ici-->\n                <div class=\"card-body\">\n                    <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                    <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                    <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                </div>\n                <div class=\"card-footer text-center bg-white\">\n                    <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                    \n            </div>\n        </div>\n    </div>\n</div>\n\n\n<h5>Les Nouveautés</h5>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of this.latestRecipes\"> <!--Pour chaque recette on représente sa carte-->\n            <div class=\"card h-100\">\n                <img class=\"card-img-top img-fluid\" src=\"{{recette.lienImage}}\" alt=\"Photo de la recette\"><!--mettre image ici-->\n                <div class=\"card-body\">\n                    <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                    <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                    <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                </div>\n                <div class=\"card-footer text-center bg-white\">\n                    <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                    \n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CategoryDetails, IngredientDetails, UniteDetails, RecettesService, UserDetails, AuthentificationService } from '../../service';\nimport { FormGroup, FormArray, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'; //la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-ajout-recette',\n  templateUrl: './ajout-recette.component.html',\n  styleUrls: ['./ajout-recette.component.css']\n})\nexport class AjoutRecetteComponent implements OnInit {\n\n\n  images;\n\n\n  recipe: CreateRecipe = {\n    idRecette: null,\n    nomRecette: '',\n    categories: null,\n    ingredients: null,\n    idImage: null,\n    etapes: ''\n  }\n\n  public ingredients: IngredientDetails[]\n  public unites: UniteDetails[]\n  public categories: CategoryDetails[]\n\n  public recipeForm: FormGroup\n  public newIngredientForm: FormGroup\n  public ingredientForm: FormGroup\n  public ingredient: FormArray\n  public selectIngredient: number[] = []\n  private listAbonneNews$: Observable<UserDetails[]>\n\n  public newIngredient: IngredientDetails = {\n    nomIngredient: ''\n  }\n\n  //pour multiple select\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings: IDropdownSettings;\n  fileToUpload: File = null;\n\n  constructor(private recetteService: RecettesService, private formBuilder: FormBuilder, private router: Router, private modalService: NgbModal,\n    private http: HttpClient, private auth: AuthentificationService) { }\n\n  ngOnInit(): void {\n    //on récupère tous les ingrédients, unités, catégories pour les réponses possibles à notre formulaire\n    this.recetteService.getAllIngredients().subscribe(\n      ingredients => {\n        ingredients.forEach(element => {\n          element.disabled = false\n        })\n        this.ingredients = ingredients\n        console.log(this.ingredients)\n      }\n    )\n\n    this.recetteService.getAllUnite().subscribe(\n      unites => {\n        this.unites = unites\n      }\n    )\n\n    this.recetteService.getAllCategory().subscribe(\n      categories => {\n        this.categories = categories\n      }\n    )\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'idCategorie',\n      textField: 'libelleCategorie',\n      enableCheckAll: false,\n      itemsShowLimit: 3,\n      allowSearchFilter: true,\n      searchPlaceholderText: \"Rechercher\"\n    };\n\n    this.initRecipeForm()\n\n    this.createIngredientsForm()\n\n    this.onChanges()\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.images = file;\n    }\n  }\n\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('file', this.images);\n\n    this.http.post<any>('/server/uploads', formData).subscribe(\n      (res) => console.log(res),\n      (err) => console.log(err)\n    );\n  }\n\n  onFileChange(file: any) {\n\n    console.log(file)\n\n    var reader = new FileReader();\n    var dataURL;\n    reader.onload = function () {\n      dataURL = reader.result;\n      console.log(dataURL)\n    };\n\n    const fileMetaData = {\n      originalname: file[0].name,\n      type: file[0].type,\n      buffer: file[0]\n    }\n    console.log(fileMetaData)\n    this.recetteService.addImage(fileMetaData).subscribe(data => {\n      console.log(data)\n      this.recipe.idImage = data[0]\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  uploadFileToActivity() {\n    this.recetteService.addImage(this.fileToUpload).subscribe(data => {\n      // do something, if upload success\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  createRecipe() {\n\n    const formValue = this.recipeForm.value;\n    const ingredientFormValue = this.ingredientForm.value;\n    const formData = new FormData();\n    formData.append('file', this.images);\n\n    if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.etapes == '' && formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins une catégorie de la recette, au moins rajouter un ingrédient, et remplir le champ de la Préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.etapes == '' && formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins rajouter un ingrédient, et remplir le champ de la Préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.etapes == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir au moins une catégorie de la recette, au moins rajouter un ingrédient, et remplir le champ de la Préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins une catégorie de la recette, et au moins rajouter un ingrédient.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins une catégorie de la recette et le champ de la Préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && this.ingredientForm.value.ingredient[0].idIngredient == \"\") {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, et sélectionner au moins une catégorie.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ de la préparation, et sélectionner au moins une catégorie.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\") {\n      alert(\"Vous devez choisir au moins un ingrédient pour votre recette.\");\n      return;\n    }\n\n    else if (this.selectedItems.length == 0) {\n      alert(\"Vous devez choisir au moins une catégorie pour votre recette.\");\n      return;\n    }\n\n    else if (formValue.etapes == '') {\n      alert(\"Vous devez choisir le champ de la préparation.\");\n      return;\n    }\n\n    else if (formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient.forEach(element => {\n      if (element.qte <= 0) {\n        alert(\"Il faut une quantité positive pour l'ingrédient.\");\n        return;\n      }\n    }))\n\n\n      console.log(ingredientFormValue.ingredient)\n    this.recipe.ingredients = ingredientFormValue.ingredient //je récupère les info sur l'ingrédient\n    this.recipe.categories = this.selectedItems\n    this.recipe.nomRecette = formValue.nomRecette\n    this.recipe.etapes = formValue.etapes\n    this.recetteService.addImage(formData).subscribe(res => {\n      this.recipe.idImage = res[0]\n      console.log(res[0])\n      this.recetteService.createRecipe(this.recipe).subscribe(res => {\n        this.recipe.idRecette = res[0] // je récupère l'id de la recette que je viens de créer\n\n        this.recetteService.addIngredientsAndCategoryToNewRecipe(this.recipe).subscribe(res => {\n          console.log(\"succès !!!!\")\n          this.listAbonneNews$ = this.auth.getAbonneNews()\n          console.log(this.listAbonneNews$)\n          this.listAbonneNews$.subscribe(res => {\n            res.forEach(element => {\n              console.log(element)\n              this.auth.sentEmailToNewRecipe(element, this.recipe.idRecette).subscribe(res => {\n                console.log(res)\n                console.log(\"bg\")\n              })\n            });\n          });\n        })\n      })\n\n      //this.router.navigate(['/recipe/'], { queryParams: { id: this.recipe.idRecette } })\n      this.router.navigateByUrl('allRecipes')\n    })\n  }\n\n  initRecipeForm() {\n    this.recipeForm = this.formBuilder.group({\n      nomRecette: ['', Validators.required],\n      categories: ['', Validators.required],\n      ingredients: [''],\n      etapes: ['', Validators.required]\n    });\n  }\n\n  /******  création formulaire pour ajouter autant de lignes ingrédient (qté, nom, unite) qu'on veut *****/\n  //création initiale formulaire ingredients\n  createIngredientsForm(): FormGroup {\n    return this.ingredientForm = this.formBuilder.group({\n      ingredient: this.formBuilder.array([this.createIngredientForm()])\n    })\n  }\n\n  createIngredientForm(): FormGroup {\n    return this.formBuilder.group({\n      idIngredient: new FormControl({\n        value: '',\n        disabled: false\n      },\n        Validators.compose([Validators.required])),\n      qte: new FormControl({\n        value: '',\n        disabled: false\n      },\n        Validators.compose([Validators.required, Validators.min(0)])),\n      idUnite: new FormControl({\n        value: '',\n        disabled: false\n      },\n        Validators.compose([Validators.required]))\n    });\n  }\n\n  onChanges(): void {\n    this.ingredientForm.valueChanges.subscribe(val => {\n      console.log(val.ingredient)\n      //this.selectIngredient = []\n      this.ingredients.forEach(ingredient => {\n        ingredient.disabled = false\n      })\n      this.ingredients.forEach(ingredient => {\n        val.ingredient.forEach(element => {\n          if (element.idIngredient != '') {\n            console.log(ingredient)\n            console.log(element)\n            if (ingredient.idIngredient == element.idIngredient) {\n              ingredient.disabled = true\n            }\n            //this.selectIngredient.push(element.idIngredient)\n          }\n        })\n      })\n    })\n  }\n\n  get formData() { return this.ingredientForm.get('ingredient'); }\n\n  //pour ajouter un ingrédient\n  addIngredient(): void {\n    this.ingredient = this.ingredientForm.get('ingredient') as FormArray;\n    this.ingredient.push(this.createIngredientForm());\n  }\n  /*****************************/\n\n  //récupérer le nom du new ingrédient et l'enregistrer dans la bd\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.nomIngredient = result\n        this.recetteService.addIngredient(this.newIngredient)\n        setTimeout(() => {\n          this.recetteService.getAllIngredients().subscribe(\n            ingredients => {\n              this.ingredients = ingredients\n            }\n          )\n        }, 1000);\n      })\n  }\n\n}\n\nexport interface CreateRecipe {\n  idRecette?: number\n  nomRecette?: string\n  categories?: any[]\n  ingredients?: any[]\n  idImage?: File\n  etapes?: string\n}","<script>\n    $(document).ready(function () {\n        $('select').formSelect();\n        $('select.select_all').siblings('ul').prepend('<li id=sm_select_all><span>Select All</span></li>');\n        $('li#sm_select_all').on('click', function () {\n            var jq_elem = $(this),\n                jq_elem_span = jq_elem.find('span'),\n                select_all = jq_elem_span.text() == 'Select All',\n                set_text = select_all ? 'Select None' : 'Select All';\n            jq_elem_span.text(set_text);\n            jq_elem.siblings('li').filter(function () {\n                return $(this).find('input').prop('checked') != select_all;\n            }).click();\n        });\n    })\n</script>\n\n<div id=\"header\">\n    <h2>Ajout d'une nouvelle recette</h2>\n</div>\n\n\n<form [formGroup]=\"recipeForm\" (ngSubmit)=\"createRecipe()\">\n\n    <div id=\"conteneur\">\n        <div class=\"element 1 text-center col-md-6\">\n            <label for=\"validationTooltip05\">Nom de la recette</label>\n            <input type=\"text\" formControlName=\"nomRecette\" class=\"form-control\" id=\"validationTooltip05\" required>\n            <div class=\"invalid-tooltip\">\n                Rentrez un nom correcte.\n            </div>\n        </div>\n\n        <div class=\"element 2 text-center col-md-6\">\n            <div style=\"text-align: center\">\n                <form>      \n                  <div>\n                    <input type=\"file\" name=\"image\" (change)=\"selectImage($event)\" />\n                  </div>\n                  <br>\n                </form>\n            </div>\n        </div>\n\n        \n\n    <div class=\"element 3 card border-secondary col-md-6\">\n        <div class=\"card-header\">Catégorie</div>\n        <br>\n        <form>\n            <div id=\"ingrForm\" class=\"form-row\">\n                <div class=\"col-md-4 mb-4\">\n                    <ng-multiselect-dropdown [data]=\"categories\" placeholder=\"sélectionner\"\n                        [settings]=\"dropdownSettings\" [(ngModel)]=\"selectedItems\" [ngModelOptions]=\"{standalone: true}\">\n                    </ng-multiselect-dropdown>\n                    <div class=\"invalid-tooltip\">\n                        Selectionnez une catégorie.\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"element 4 card border-secondary col-md-6\">\n        <div class=\"card-header\">Ingrédients</div>\n        <form [formGroup]=\"ingredientForm\">\n            <!--formulaire ingrédients-->\n            <div formArrayName=\"ingredient\">\n                <div *ngFor=\"let ing of formData['controls']; let idx = index\" [formGroupName]=\"idx\" class=\"ingredient\">\n                    <!--idx = indexe d'une ligne ingrédient du formulaire-->\n                    <div id=\"ingrForm\" class=\"form-row\">\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"validationTooltip04\">Ingrédient</label>\n                            <select class=\"custom-select\" id=\"validationTooltip04\" formControlName=\"idIngredient\"\n                                required>\n                                <option *ngFor=\"let ingredient of ingredients\" [ngValue]=\"ingredient.idIngredient\" [disabled]=\"ingredient.disabled\">\n                                    {{ingredient.nomIngredient}}</option>\n                            </select>\n                            <div class=\"invalid-tooltip\">\n                                Selectionnez un ingrédient.\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"validationTooltip05\">Quantité</label>\n                            <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\" formControlName=\"qte\"\n                                required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"validationTooltip04\">Unité</label>\n                            <select class=\"custom-select\" id=\"validationTooltip04\" formControlName=\"idUnite\" required>\n                                <option *ngFor=\"let unite of unites\" [ngValue]=\"unite.idUnite\">\n                                    {{unite.libelleUnite}}\n                                </option>\n                            </select>\n                            <div class=\"invalid-tooltip\">\n                                Selectionnez une unité.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div id=\"buttonIngredient\" class=\"form-row\">\n                <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"addIngredient()\">Ajouter un nouvel\n                    ingrédient</button>\n                <ng-template #content let-modal>\n                    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\"></h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form>\n                            <div class=\"form-group\">\n                                <label for=\"nomIngredient\"> Nom de l'ingrédient </label>\n                                <div class=\"input-group\">\n                                    <input id=\"nomIngredient\" class=\"form-control\" placeholder=\"Cacahuète\"\n                                        #nomIngredient=\"ngModel\" [(ngModel)]=\"newIngredient.nomIngredient\"\n                                        [ngModelOptions]=\"{standalone: true}\">\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button tyoe=\"button\" class=\"btn btn-outline-dark\"\n                            (click)=\"modal.close(newIngredient.nomIngredient)\">Ajouter</button>\n                    </div>\n                </ng-template>\n\n                <button class=\"btn btn-outline-primary\" (click)=\"open(content)\">Créer un nouvel ingrédient</button>\n                <!--on appelle le modal-->\n            </div>\n\n        </form>\n        <!--fin du formulaire ingrédients-->\n\n    </div>\n    <div class=\"element 5 card border-secondary col-md-6\">\n        <div class=\"card-header\">Préparation</div>\n        <div class=\"card-body\">\n            <textarea class=\"form-control\" formControlName=\"etapes\" id=\"exampleFormControlTextarea1\" rows=\"8\"\n                required></textarea>\n        </div>\n    </div>\n    </div>\n    <div class=\"col text-center\">\n        <button id=\"validateButton\" type=\"submit\"\n            class=\"col-ld-6 btn btn-outline-success\">Valider</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-apropos',\n  templateUrl: './apropos.component.html',\n  styleUrls: ['./apropos.component.css']\n})\nexport class AProposComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"mt-5\">A propos</h1>\n<div id=\"conteneur\">\n  <div class=\"element 1 mb-3 col-lg-6 col-md-6 col-sm-6 p-3\">\n    <img src=\"../../assets/img/me.jpeg\" class=\"img-fluid\" width=\"auto\" height=\"auto\" alt=\"photo de l'auteur du site.\">\n  </div>\n  <div class=\"element 2 mb-3 col-lg-6 col-md-6 col-sm-6\">\n    <div id=\"conteneur1\">\n      <p id=\"c1\" class=\"mb-0\">\n        <ul>\n          <li> Je m'appelle Marine.</li>\n          <li> J'ai 21 printemps, et j'étudie dans une école d'ingénieur. </li>\n          <li> Depuis mon plus jeune âge, j'adore cuisiner. </li>\n          <li>J'ai créé ce site afin de partager les recettes que j'aime réaliser au quotidien.</li>\n        </ul>\n    \n      <p id=\"c2\" class=\"mb-0\">\n        <ul>\n          <li> Vous avez accès à toutes les recettes sans être connecté !</li>\n       <li>Créer un compte vous permettra de mettre des recettes en favoris et de les retrouver plus facilement.\n        Vous pourrez aussi créer une liste de course directement à partir des recettes.\n        Si vous le souhaitez, des notifications par mail peuvent vous avertir de l'arrivée d'une nouvelle recette afin\n        de ne rien rater.</li>\n      </ul>\n      \n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CategoryDetails, RecettesService} from '../../service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  public categories: CategoryDetails[] \n\n  public categorie: CategoryDetails = {\n    idCategorie: null,\n    libelleCategorie: ''\n  }\n   \n\n  constructor(private recettesService: RecettesService, private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.recettesService.getAllCategory().subscribe(\n      categories => {\n        this.categories = categories\n      }\n    )\n  }\n\n  deleteCategory(idCategorie: any) {\n    this.recettesService.deleteCategory(idCategorie)\n      .subscribe(res => {\n        this.router.navigate(['/category'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateCategory(categorie: CategoryDetails){\n    this.recettesService.updateCategory(categorie).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addCategory(){\n    this.recettesService.addCategory(this.categorie)\n    window.location.reload()\n  }\n}\n\n","\n<div id=\"header\">\n    <h1>Catégories</h1>\n</div>  \n\n\n<div class='flex-container'>\n  <div>\n    <table class=\"table col-md-12 mx-auto\" *ngFor=\"let categorie of categories\">\n    \n        <tr>\n            <td>\n              <form (submit)=\"updateCategory(categorie)\">\n                <div class=\"form-row align-items-center\">\n                  <div class=\"col-auto\">\n              <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\"  value= {{categorie.libelleCategorie}}\n                  [(ngModel)]=\"categorie.libelleCategorie\">\n            </div>\n            <div class=\"col-auto\">\n              <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n            </div>\n            <div class=\"col-auto\">\n              <button id=\"btn\" type=\"submit\" class=\"btn btn-outline-danger \" (click)=\"deleteCategory(categorie.idCategorie)\" >Supprimer</button>\n              </div>\n              </div>\n              </form>\n            </td>\n          </tr> \n    </table>\n  </div>\n  <div >\n    <h6 id=\"question\" > Ajouter une nouvelle catégorie </h6>\n    <form (submit)=\"addCategory()\">\n      <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\"  placeholder=\"nom catégorie\"\n                        [(ngModel)]=\"categorie.libelleCategorie\">\n\n      <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n      \n      </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  contactForm: FormGroup;\n\n  contactSend: ContactDetail = {\n    nameUser: '',\n    emailUser: '',\n    subject: '',\n    message: ''\n  }\n\n  constructor(private formBuilder: FormBuilder, private auth: AuthentificationService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.initContactForm()\n  }\n\n  initContactForm() : FormGroup {\n    if(this.auth.isLoggedIn()) {\n      const emailUser = this.auth.getUserDetails().email\n      return this.contactForm = this.formBuilder.group({\n        nameUser: ['', Validators.required],\n        email: [emailUser, [Validators.required, Validators.email]],\n        subject: ['', Validators.required],\n        message: ['', Validators.required]\n      });\n    } else {\n      return this.contactForm = this.formBuilder.group({\n        nameUser: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        subject: ['', Validators.required],\n        message: ['', Validators.required]\n      });\n    }\n    \n  }\n\n  sendEmail() {\n\n    const formValue = this.contactForm.value;\n\n    this.contactSend.nameUser = formValue.nameUser\n    this.contactSend.emailUser = formValue.email\n    this.contactSend.subject = formValue.subject\n    this.contactSend.message = formValue.message\n\n    this.auth.sendEmailContact(this.contactSend).subscribe(\n      this.router.navigate([''])\n    );\n\n  }\n\n}\n\nexport interface ContactDetail {\n  nameUser: string\n  emailUser: string\n  subject: string\n  message: string\n}","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form class=\"example-form\" [formGroup]=\"contactForm\" (ngSubmit)=\"sendEmail()\" data-toggle=\"validator\" role=\"form\">\n                <!-- Submitting will start this method -->\n                <div class=\"form-group\">\n                    <label>Nom *</label>\n                    <input id=\"name\" type=\"text\" class=\"form-control\" formControlName=\"nameUser\" placeholder=\"Nom\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"control-label\">Email *</label>\n                    <input id=\"to\" type=\"email\" class=\"form-control\" formControlName=\"email\"\n                        placeholder=\"nom.prenom@exemple.com\" id=\"inputEmail\"\n                        required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                        data-error=\"Bruh, that email address is invalid\">\n                    <div class=\"help-block with-errors\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <label>Objet *</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"subject\" placeholder=\"\" required>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Message *</label>\n                    <textarea type=\"textarea\" class=\"form-control\" rows=\"8\" formControlName=\"message\" placeholder=\"\" required></textarea>\n                </div>\n                <br>\n                <div class=\"text-center\">\n                    <button id=\"send_email\" class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"contactForm.invalid\">Envoyer</button>\n                    <br>\n                    <br>\n                    <p>* Champs obligatoires.</p>\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecipeDetails, RecettesService } from '../../service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-gerer-les-recettes',\n  templateUrl: './gerer-les-recettes.component.html',\n  styleUrls: ['./gerer-les-recettes.component.css']\n})\nexport class GererLesRecettesComponent implements OnInit {\n\n  public recette: RecipeDetails\n  public recettes$: Observable<RecipeDetails[]>\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recettesService: RecettesService, private router: Router) { \n    //pour la recherche dynamique\n    this.recettes$ = this.recettesService.getAllRecipes()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n    \n  }\n  \n  deleteRecipe(idRecette: any) {\n    this.recettesService.deleteRecipe(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/handleRecipes']).then(() => {\n          window.location.reload()\n        })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n  \n\n}\n\n","<div id=\"titre\">\n\t<h1>Gerer les recettes</h1>\n</div>\n\n\n<ul id=\"menu\" class=\"nav justify-content-center\">\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/ingredient']\">Gérer les ingrédients</a>\n\t</li>\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/category']\">Gérer les catégories</a>\n\t</li>\n\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/unite']\">Gérer les unités</a>\n\t</li>\n\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/add-recipe']\">Créer une nouvelle recette</a>\n\t</li>\n\n\t<li>\n\t\t<form class=\"form-inline my-2 my-lg-0\">\n\t\t\t<input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\"\n\t\t\t\t[formControl]=\"filter\">\n\t\t</form>\n\t</li>\n</ul>\n\n\n<div id=\"titre\">\n\t<h3>Recettes publiées</h3>\n</div>\n\n\n\n<div id=\"container\" class=\"container\">\n\t<div class=\"row mb-3\" *ngFor=\"let recette of filteredRecipe$ | async\">\n\t\t<div class=\"col-sm-3\"></div>\n\t\t<div class=\"col-md-6 col-sm-6\">\n\t\t\t<div class=\"d-flex flex-row border rounded\">\n\t\t\t\t<div class=\"p-0 w-25\">\n\t\t\t\t\t<img src=\"{{recette.lienImage}}\"\n\t\t\t\t\t\tclass=\"img-thumbnail border-0\" alt=\"photo de la recette\" />\n\n\t\t\t\t</div>\n\t\t\t\t<div class=\"pl-3 pt-2 pr-2 pb-2 w-75 border-left\">\n\n\t\t\t\t\t<h5 class=\"text\">{{recette.nomRecette}}</h5>\n\t\t\t\t\t<ul class=\"m-0 float-left\" style=\"list-style: none; margin:0; padding: 0\">\n\t\t\t\t\t\t<li><i class=\"badge badge-light\"></i>{{recette.nbFavoris}} ♥</li>\n\t\t\t\t\t\t<li><i class=\"badge badge-light\"></i> {{recette.nbVues}} 👁</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-outline-warning\" [routerLink]=\"['/updateRecipe', recette.idRecette]\">Modifier </button>\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-outline-danger\"\n\t\t\t\t\t\t(click)=\"deleteRecipe(recette.idRecette)\">Supprimer</button>\n\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-sm-3\"></div>\n\t</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { IngredientDetails, RecettesService} from '../../service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ingredients',\n  templateUrl: './ingredients.component.html',\n  styleUrls: ['./ingredients.component.css']\n})\nexport class IngredientsComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>\n  public ingredients: IngredientDetails[]\n\n  public ingredient: IngredientDetails = {\n    idIngredient: null,\n    nomIngredient: '',\n    qte: null,\n    libelleUnite: '',\n  }\n  \n  public filteredIngredient$: Observable<IngredientDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n  \n\n  constructor(private recettesService: RecettesService, private router: Router) { \n     //pour la recherche dynamique\n     this.ingredients$ = this.recettesService.getAllIngredients()\n     this.filter = new FormControl('')\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n     this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n       .pipe(map(([ingredients, filterString]) =>\n         ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllIngredients() {\n\n    this.ingredients$ = this.recettesService.getAllIngredients()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteIngredient(idIngredient: any) {\n    this.recettesService.deleteIngredient(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/ingredient'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateIngredient(ingredient: IngredientDetails){\n    this.recettesService.updateIngredient(ingredient).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addIngredient(){\n    this.recettesService.addIngredient(this.ingredient)\n    window.location.reload()\n  }\n\n}\n","<div id=\"titre\">\n  <h1>Ingrédients</h1>\n\n</div>\n\n\n\n\n<div class='flex-container'>\n\n  <div>\n    <form>\n      <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher un ingrédient\"\n        aria-label=\"Search\" [formControl]=\"filter\">\n    </form>\n    <table class=\"table col-md-12 mx-auto\" *ngFor=\"let ingredient of filteredIngredient$ | async\">\n\n      <tr>\n        <td>\n\n          \n            <form (submit)=\"updateIngredient(ingredient)\">\n              <div class=\"form-row align-items-center\">\n                <div class=\"col-auto\">\n          \n                  <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"nomIngredient\" value={{ingredient.nomIngredient}}\n                    [(ngModel)]=\"ingredient.nomIngredient\">\n                </div>\n                <div class=\"col-auto\">\n                  <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n          \n                </div>\n                <div class=\"col-auto\">\n                  <button id=\"btn\" class=\"btn btn-outline-danger \"\n                    (click)=\"deleteIngredient(ingredient.idIngredient)\">Supprimer</button>\n                </div>\n              </div>\n            </form>\n        \n        </td>\n      </tr>\n    </table>\n  </div>\n  <div>\n    <h6 id=\"question\"> Ajouter un nouvel ingredient </h6>\n    <form (submit)=\"addIngredient()\">\n      <input type=\"text\" class=\"form-control\" name=\"nomIngredient\" placeholder=\"nom ingredient\"\n        [(ngModel)]=\"ingredient.nomIngredient\">\n\n      <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n\n    </form>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, TokenPayload } from '../../service/';\nimport { Router } from '@angular/router';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-inscrire',\n  templateUrl: './inscrire.component.html',\n  styleUrls: ['./inscrire.component.css']\n})\nexport class InscrireComponent implements OnInit {\n\n  credentials: TokenPayload = {\n    pseudo: '',\n    email: '',\n    mdp: '',\n    mdp2: '',\n    admin: false,\n    abonneNews: false,\n    error: ''\n  }\n\n  userForm: FormGroup;\n\n  constructor(private auth: AuthentificationService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm()\n  }\n  \n  // We Init the form with the validators\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      mdp: ['', Validators.required],\n      mdp2: ['', Validators.required],\n      abonneNews: ['', Validators.required]\n\n    });\n  }\n\n  register() {\n\n    const formValue = this.userForm.value;\n\n    if (formValue.mdp != formValue.mdp2) {\n      alert(\"Les mots de passe ne sont pas identiques.\");\n      return;\n    }\n\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.email = formValue.email;\n    this.credentials.mdp = formValue.mdp;\n    this.credentials.mdp2 = formValue.mdp2;\n    this.credentials.abonneNews = formValue.abonneNews;\n\n    \n    this.auth.register(this.credentials).subscribe(\n      (res) => {\n        if (res.error == \"L'utilisateur existe déjà\") {\n          alert(\"L'utilisateur existe déjà\");\n          return;\n        } else {\n          this.auth.logout()\n          setTimeout(() => this.router.navigate(['login'])\n          , 5) \n        }\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n}\n","<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\n<script>\n$(document).ready(function(){\n\tvar from,to,subject,text;\n\t$(\"#send_email\").click(function(){\t\n        pseudo=$(\"#pseudo\").val();\t\n\t\tto=$(\"#to\").val();\t\t\n\t\t$(\"#message\").text(\"Sending E-mail...Please wait\");\n\t\t$.get(\"http://localhost:3000/server/sendEmail\",{to:to, pseudo:pseudo},function(data){\n\t\tif(data==\"sent\")\n\t\t{\n\t\t\t$(\"#message\").empty().html(\"<p>Email is been sent at \"+to+\" . Please check inbox !</p>\");\n\t\t}\n\n});\n\t});\n});\n</script>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form class=\"example-form\" [formGroup]=\"userForm\" (ngSubmit)=\"register()\" data-toggle=\"validator\" role=\"form\">\n                <!-- Submitting will start this method -->\n                <div class=\"form-group\">\n                    <label>Pseudo *</label>\n                    <input id=\"pseudo\" type=\"text\" class=\"form-control\" formControlName=\"pseudo\" placeholder=\"pseudo\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"control-label\">Email *</label>\n                    <input id=\"to\" type=\"email\" class=\"form-control\" formControlName=\"email\"\n                        placeholder=\"nom.prenom@exemple.com\" id=\"inputEmail\"\n                        required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                        data-error=\"Bruh, that email address is invalid\">\n                    <div class=\"help-block with-errors\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <label>Mot de passe *</label>\n                    <input type=\"password\" class=\"form-control\" formControlName=\"mdp\" placeholder=\"****\" required>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Confirmer le mot de passe *</label>\n                    <input type=\"password\" class=\"form-control\" formControlName=\"mdp2\" placeholder=\"****\" required>\n                </div>\n\n\n                <div class=\"form-group\">\n                    <label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label>\n                    <br>\n                    <input type=\"radio\" formControlName=\"abonneNews\" value=\"true\" checked> Oui\n                    <input type=\"radio\" formControlName=\"abonneNews\" value=\"false\"> Non\n                </div>\n                <button id=\"send_email\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" [disabled]=\"userForm.invalid\">Créer mon compte</button>\n                <br>\n                <p>* Champs obligatoires.</p>\n\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecettesService, IngredientDetails, AuthentificationService } from '../../service';\nimport { Router } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-ma-liste-de-courses',\n  templateUrl: './ma-liste-de-courses.component.html',\n  styleUrls: ['./ma-liste-de-courses.component.css']\n})\nexport class MaListeDeCoursesComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>\n  public restIngredients$: Observable<IngredientDetails[]>\n\n  public filteredIngredient$: Observable<IngredientDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  public ingredientToDelete: IngredientShoppingList = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    idIngredient: null\n  }\n\n  public ingredientToAdd: IngredientShoppingList = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    idIngredient: null\n  }\n\n\n  constructor(private recetteService: RecettesService, private router: Router, private auth: AuthentificationService, private modalService: NgbModal) {\n    this.ingredients$ = this.recetteService.getListeCourses()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n    this.restIngredients$ = this.recetteService.getRestListeCourses()\n  }\n\n  ngOnInit(): void {\n  }\n\n  getListeCourses() {\n    this.ingredients$ = this.recetteService.getListeCourses()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteListeCourse(idIngredient: any) {\n    this.ingredientToDelete.idIngredient = idIngredient\n    this.recetteService.deleteListeCourse(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/refresh'], {\n          queryParams: {url:'shoppingList'}\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    window.location.reload() /* rafraichit la page */\n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.ingredientToAdd.idIngredient = result.idIngredient\n        console.log(this.ingredientToAdd)\n        this.recetteService.addIngredientShoppingList(this.ingredientToAdd)\n          .subscribe(res => {\n          this.router.navigate(['/refresh'], {\n            queryParams: {url:'shoppingList'}\n          })\n        }, (err) => {\n          console.log(err);\n        }\n        );\n      })\n  }\n}\n\nexport interface IngredientShoppingList {\n  pseudo: string\n  idIngredient: number\n}","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<section class=\"jumbotron text-center\">\n    <div class=\"container\">\n        <h1 class=\"jumbotron-heading\">Ma liste de courses</h1>\n    </div>\n</section>\n<div class=\"container mb-4\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"table-responsive\">\n                <table class=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\"> </th>\n                            <th scope=\"col\">Ingrédient</th>\n                           \n                            <th scope=\"col\"><form class=\"form-inline my-2 my-lg-0\">\n                                <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n                                <ng-template #content let-modal>\n                                    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                                    <div class=\"modal-header\">\n                                        <h4 class=\"modal-title\"></h4>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        <form>\n                                            <div class=\"form-row\">\n                                                <div class=\"col-md-6\">\n                                                    <label for=\"validationTooltip04\">Ingrédient</label>\n                                                    <select class=\"custom-select\" id=\"validationTooltip04\" #idIngredient=\"ngModel\"\n                                                        [(ngModel)]=\"ingredientToAdd.idIngredient\" [ngModelOptions]=\"{standalone: true}\"\n                                                        required>\n                                                        <option *ngFor=\"let ingredient of restIngredients$ | async\"\n                                                            [ngValue]=\"ingredient.idIngredient\">\n                                                            {{ingredient.nomIngredient}}</option>\n                                                    </select>\n                                                    <div class=\"invalid-tooltip\">\n                                                        Selectionnez un ingrédient.\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button tyoe=\"button\" class=\"btn btn-outline-dark\"\n                                            (click)=\"modal.close(ingredientToAdd)\">Ajouter</button>\n                                    </div>\n                                </ng-template>\n                                <div class=\"text-right\">\n                                    <button class=\"btn btn-outline-primary\" (click)=\"open(content)\">Ajouter un nouvel ingrédient</button>\n                                </div>\n                              </form>\n                            </th>\n\n                        </tr>\n                    </thead>\n                    <tbody *ngFor=\"let ingredient of filteredIngredient$ | async\">\n                        <tr>\n                            <td><img id=\"image\" src=\"../../assets/img/shoppingList.jpeg\" /> </td>\n                            <td> {{ingredient.nomIngredient}}</td> \n                           \n                            <td class=\"text-right\"> \n                              \n                                <button class=\"btn btn-sm btn-danger\" (click)=deleteListeCourse(ingredient.idIngredient)><i class=\"fa fa-trash\"></i></button>\n                             </td>\n                        </tr>\n                    </tbody>\n                </table>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mes-commentaires',\n  templateUrl: './mes-commentaires.component.html',\n  styleUrls: ['./mes-commentaires.component.css']\n})\nexport class MesCommentairesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Cette fonctionnalité n'est pas disponnible pour le moment </h1>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails } from '../../service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-mes-recettes',\n  templateUrl: './mes-recettes.component.html',\n  styleUrls: ['./mes-recettes.component.css']\n})\nexport class MesRecettesComponent implements OnInit {\n\n  public recettes$: Observable<RecipeDetails[]>\n  public categories: CategoryDetails[]\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recetteService: RecettesService, private router: Router) {\n    //pour la recherche dynamique\n    this.recettes$ = this.recetteService.getFavoris()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  } \n\n  ngOnInit(): void {\n    this.recetteService.getAllCategory().subscribe(\n      res => {\n        this.categories = res\n      }\n    )\n  }\n\n  getFavoris() {\n    this.recettes$ = this.recetteService.getFavoris()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  getFavorisByCategory(idCategorie: any){\n   \n    this.recettes$ = this.recetteService.getFavorisByCategory(idCategorie)\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n  //voir si on peut la récupérer au lieu de la recopier!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload()\n        })\n      }, err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 402) {\n          console.log(\"Cette recette n'existe pas !\")\n        }\n      }\n    })\n  }\n\n  \n  deleteFavoris(idRecette: any) {\n    this.recetteService.deleteFavoris(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/favorites'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n}\n","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<div id=\"titre\">\n    <h1>Mes recettes ♥</h1>  \n</div>\n\n<ul id=\"menu\" class=\"nav justify-content-center\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" routerLink=\"/favorites\" (click)=\"getFavoris()\">Tous mes favoris</a>\n  </li>\n  <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n    <a class=\"nav-link\" routerLink=\"/favorites\" (click)=\"getFavorisByCategory(categ.idCategorie)\">{{categ.libelleCategorie}}</a>\n  </li> \n  <li>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n    </form>\n</ul>\n\n\n\n<div class=\"container\">\n  <div class=\"row\">\n      <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of filteredRecipe$ | async\"> \n          <div class=\"card h-100\">\n              <img class=\"card-img-top img-fluid\" src=\"{{recette.lienImage}}\" alt=\"Photo de la recette\"> \n              <div class=\"card-body\">\n                  <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                  <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                  <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                  <button id=\"poubelle\" class=\"btn btn-sm btn-danger\" (click)=deleteFavoris(recette.idRecette)><i class=\"fa fa-trash\"></i></button> \n                \n              </div>\n              <div class=\"card-footer text-center bg-white\">\n                  <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                 \n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails, IngredientDetails, QuantiteDetails, UniteDetails } from '../../service';\nimport { HttpResponse, HttpClient } from '@angular/common/http'\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'; //la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\n\n@Component({\n  selector: 'app-modifier-recette',\n  templateUrl: './modifier-recette.component.html',\n  styleUrls: ['./modifier-recette.component.css']\n})\nexport class ModifierRecetteComponent implements OnInit {\n\n  public newIngredient: IngredientDetails = {\n    qte: null,\n    idRecette: parseInt(this.route.snapshot.paramMap.get('id')),\n    idIngredient: null,\n    idUnite: null\n  }\n\n  public recette: RecipeDetails = {\n    idRecette: null,\n    nomRecette: 'string',\n    datePublication: null,\n    nbFavoris: null,\n    nbVues: null,\n    idImage: null,\n    lienImage: null,\n    etapes: null\n  }\n  public ingredients: IngredientDetails\n  public unite: UniteDetails\n  public qtes: QuantiteDetails[]\n  public categories: CategoryDetails[]\n  \n  public image\n  public allIngredients: IngredientDetails[] //ingredients disponibles\n  public allUnites: UniteDetails[]\n  public allCategories: CategoryDetails[] //catégories disponibles\n\n \n\n  constructor(private recetteService: RecettesService, private router: Router, private route: ActivatedRoute, private formBuilder: FormBuilder, private modalService: NgbModal,\n    private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      recette => {\n        this.recette = recette\n      }\n    );\n\n    this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredient => {\n        this.ingredients = ingredient\n      }\n    );\n\n    this.recetteService.getImage(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      res => {\n        console.log(res)\n        this.recette.idImage = res[0].idImage\n        console.log(this.recette)\n        this.image = res\n      }\n    );\n\n    this.recetteService.getRestIngredients(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredients => {\n        this.allIngredients = ingredients\n      }\n    )\n\n    this.recetteService.getAllUnite().subscribe(\n      unites => {\n        this.allUnites = unites\n      }\n    )\n\n    this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      categories => {\n        this.allCategories = categories\n      }\n    )\n\n   \n    this.getCategory(parseInt(this.route.snapshot.paramMap.get('id')))\n\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.image = file;\n    }\n  }\n\n  onSubmit(){\n    const formData = new FormData();\n    formData.append('file', this.image);\n    console.log(this.recette)\n\n    this.http.post<any>(`/server/update/${this.recette.idImage}/${this.recette.idRecette}`, formData).subscribe(\n      (res) => {\n        window.location.reload()\n      }\n    );\n\n\n\n    \n  }\n\n  getCategory(id: any): any {\n    this.recetteService.getCategory(id).subscribe(\n      (categories: CategoryDetails[]) => {\n        this.categories = categories\n      }, err => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log(\"cette recette n'a pas de catégorie!\")\n          }\n        }\n      }\n    )\n    return this.categories\n  }\n\n\n\n  updateRecipeName(recette: RecipeDetails) {\n    this.recetteService. updateRecipeName(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n  updateSteps(recette: RecipeDetails) {\n    this.recetteService.updateSteps(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  updateRecipeIng(recette: RecipeDetails,ingredient: IngredientDetails) {\n    this.recetteService.updateRecipeIng(recette, ingredient).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  deleteIngredientRececipe(ingredient: IngredientDetails, recette: RecipeDetails) {\n    this.recetteService.deleteIngredientRececipe(ingredient, recette)\n      .subscribe(res => {\n        this.router.navigate(['updateRecipe/:id']).then(() => {\n          window.location.reload()\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  \n  }\n\n  deleteRecipeCategory(categorie: CategoryDetails,recette: RecipeDetails){\n  \n    this.recetteService.deleteRecipeCategory(categorie, recette)\n    .subscribe(res => {\n      setTimeout(() => {\n        this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n          categories => {\n            this.allCategories = categories\n          }\n        )\n        this.recetteService.getCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n          categories => {\n            this.categories = categories\n          }\n        )\n      }, 1000)\n    }, (err) => {\n      console.log(err);\n    }\n    );\n  }\n\n  addRecipeCategory(categorie: CategoryDetails,recette: RecipeDetails){\n    this.recetteService.addRecipeCategory(categorie,recette)\n    .subscribe(res => {\n      setTimeout(() => {\n        this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n          categories => {\n            this.allCategories = categories\n          }\n        )\n        this.recetteService.getCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n          categories => {\n            this.categories = categories\n          }\n        )\n      }, 1000)\n\n    }, (err) => {\n      console.log(err);\n    }\n    );\n  }\n\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.idIngredient = result.idIngredient\n        this.newIngredient.qte = result.qte\n        this.newIngredient.idUnite = result.idUnite\n        this.recetteService.addIngredientRecette(this.newIngredient)\n        setTimeout (() => {\n          this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n            ingredient => {\n              this.ingredients = ingredient\n            }\n          )\n       }, 1000);\n      })\n  }\n\n}\nexport class Ingredient {\n  idIngredient = '';\n  quantite = '';\n  idUnite = '';\n}\n\n","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<form class=\"form-inline\" id=\"titre\" (submit)=\"updateRecipeName(recette)\">\n\n\n    <div class=\"form-group mb-2\">\n        <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"nomRecette\" value=\"{{recette?.nomRecette}}\"\n            #nomRecette=\"ngModel\" [(ngModel)]=\"recette.nomRecette\">\n    </div>\n\n    <button id=\"btnTitre\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n\n</form>\n\n<form>\n    <div id=\"photo\">\n        <div *ngIf=\"!image\">\n            <div style=\"text-align: center\">\n                <form>      \n                  <div>\n                    <input type=\"file\" name=\"image\" (change)=\"selectImage($event)\" />\n                  </div>\n                  <br>\n                  <div>\n                    <button type=\"submit\" class=\"btn btn-warning\" (click)=\"onSubmit()\">Modifier</button>\n                  </div>\n                </form>\n            </div>\n        </div>\n        <div *ngIf=\"image\">\n            <figure class=\"figure\" *ngFor=\"let img of image\">\n                <img src=\"{{img.lienImage}}\" class=\"rounded mx-auto d-block\" alt=\"Responsive image\" id=\"resp\">\n                <hr>\n                <!-- Button trigger modal -->\n                <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                    Modifier l'image de la recette\n                </button>\n    \n                <!-- Modal -->\n                <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n                    aria-hidden=\"true\">\n                    <div class=\"modal-dialog\" role=\"document\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modification de l'image de la recette</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                                <figcaption class=\"figure-caption\">\n                                    <!--bouton modifier photo à faire-->\n                                    <div style=\"text-align: center\">\n                                        <form>\n                                            <div>\n                                                <input type=\"file\" name=\"image\" (change)=\"selectImage($event)\" />\n                                            </div>\n                                        </form>\n                                    </div>\n                                </figcaption>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">Modifier</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr>\n            </figure>\n        </div>\n    </div>\n</form>\n\n<!--afficher la/ les catégorie-->\n<div id=\"conteneur1\">\n    <!--afficher la/ les catégorie-->\n    <div id=\"cat\">Catégories</div>\n    <!--catégories de la recette-->\n    <div *ngFor=\"let categ of categories\">\n        <button id=\"poubelle\" class=\"btn btn-sm btn-danger\" (click)=\"deleteRecipeCategory(categ,recette)\"><i\n                class=\"fa fa-trash\"></i></button>\n        {{categ.libelleCategorie}}\n    </div>\n    <!--catégorie dont la recette ne fait pas partie-->\n    <div *ngFor=\"let cat of allCategories\">\n        <button id=\"add\" class=\"btn btn-sm btn-success\" (click)=\"addRecipeCategory(cat,recette)\"><i\n                class=\"fa fa-plus-circle\"></i></button>\n\n        {{cat.libelleCategorie}}\n    </div>\n</div>\n\n\n<br>\n\n<!--ingrédients-->\n<div id=\"conteneur\">\n    <div class=\"element 1\">\n        <div id=\"card\" class=\"element 1 card border-secondary mb-3 col-lg-6 col-md-9 col-sm-6 p-3\">\n            <div class=\"card-header\">Ingrédients</div>\n            <ul>\n                <div class=\"card-body text-secondary\" id=\"ing\">\n                    <div *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n\n                        <form (submit)=\"updateRecipeIng(recette,ingredient)\">\n\n                            <h3>{{ingredient.nomIngredient}}</h3>\n\n\n\n                            <div class=\"form-row\">\n\n                                <div class=\"col-md-3 mb-3\">\n                                    <input id=\"qte\" type=\"text\" class=\"form-control\" name=\"qte\"\n                                        value=\"{{ingredient.qte}}\" #qte=\"ngModel\" [(ngModel)]=\"ingredient.qte\">\n                                </div>\n\n                                <div class=\"col-md-3 mb-3\">\n                                    <select class=\"custom-select\" id=\"unit\" #idUnite=\"ngModel\"\n                                        [(ngModel)]=\"ingredient.idUnite\" [ngModelOptions]=\"{standalone: true}\" required>\n                                        <option [ngValue]=\"ingredient.idUnite\" selected>{{ingredient.libelleUnite}}\n                                        </option>\n                                        <option *ngFor=\"let unite of allUnites\" [ngValue]=\"unite.idUnite\">\n                                            {{unite.libelleUnite}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n\n                            <button id=\"crayon\" class=\"btn btn-sm btn-warning\">Modifier</button>\n\n                            <button id=\"poubelle\" class=\"btn btn-sm btn-danger\"\n                                (click)=deleteIngredientRececipe(ingredient,recette)><i\n                                    class=\"fa fa-trash\"></i></button>\n\n\n\n\n                        </form>\n\n                    </div>\n                </div>\n                <ng-template #content let-modal>\n                    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\"></h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form>\n                            <div class=\"form-row\">\n                                <div class=\"col-md-3 mb-3\">\n                                    <label for=\"validationTooltip04\">Ingrédient</label>\n                                    <select class=\"custom-select\" id=\"validationTooltip04\" #idIngredient=\"ngModel\"\n                                        [(ngModel)]=\"newIngredient.idIngredient\" [ngModelOptions]=\"{standalone: true}\"\n                                        required>\n                                        <option *ngFor=\"let ingredient of allIngredients\"\n                                            [ngValue]=\"ingredient.idIngredient\">\n                                            {{ingredient.nomIngredient}}</option>\n                                    </select>\n                                    <div class=\"invalid-tooltip\">\n                                        Selectionnez un ingrédient.\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3 mb-3\">\n                                    <label for=\"validationTooltip05\">Quantité</label>\n                                    <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\" #qte=\"ngModel\"\n                                        [(ngModel)]=\"newIngredient.qte\" [ngModelOptions]=\"{standalone: true}\" required>\n                                    <div class=\"invalid-tooltip\">\n                                        Rentrez une quantité correcte.\n                                        <!--Vérifier que c'est pas négatif ou nulle-->\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3 mb-3\">\n                                    <label for=\"validationTooltip04\">Unité</label>\n                                    <select class=\"custom-select\" id=\"validationTooltip04\" #idUnite=\"ngModel\"\n                                        [(ngModel)]=\"newIngredient.idUnite\" [ngModelOptions]=\"{standalone: true}\"\n                                        required>\n                                        <option *ngFor=\"let unite of allUnites\" [ngValue]=\"unite.idUnite\">\n                                            {{unite.libelleUnite}}\n                                        </option>\n                                    </select>\n                                    <div class=\"invalid-tooltip\">\n                                        Selectionnez une unité.\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button tyoe=\"button\" class=\"btn btn-outline-dark\"\n                            (click)=\"modal.close(newIngredient)\">Ajouter</button>\n                    </div>\n                </ng-template>\n\n                <button class=\"btn btn-outline-primary\" (click)=\"open(content)\">Ajouter un nouvel ingrédient</button>\n\n\n                <!--on appelle le modal-->\n\n\n            </ul>\n        </div>\n\n\n    </div>\n    <div class=\"element 2 card border-secondary mb-3 col-lg-6 col-md-6 col-sm-6\">\n        <div class=\"card-header\">Préparation</div>\n        <div class=\"card-body text-secondary center\">\n\n            <form (submit)=\"updateSteps(recette)\">\n                <textarea class=\"form-control\" #etapes=\"ngModel\" rows=\"15em\" name=\"etapes\" [(ngModel)]=\"recette.etapes\"\n                    value=\" {{recette?.etapes}}\"></textarea>\n\n                <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n            </form>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserProfile } from '../../service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { __param } from 'tslib';\n@Component({\n  selector: 'app-mon-profile',\n  templateUrl: './mon-profile.component.html',\n  styleUrls: ['./mon-profile.component.css']\n})\nexport class MonProfileComponent implements OnInit {\n\n  credentials: UserProfile = {\n    pseudo: '',\n    email: '',\n    abonneNews: true,\n    success: ''\n  }\n\n  constructor(private auth: AuthentificationService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.auth.profile().subscribe(\n      user => {\n        this.credentials = user\n      },\n      err => {\n        console.error(err)\n      }\n    )\n    if(this.route.queryParams) {\n      this.route.queryParams\n      .subscribe(params => {\n        this.credentials.success = params.success;\n      })\n    }   \n  }\n\n  updateProfile(){\n    this.auth.updateProfile(this.credentials).subscribe((res: any) => {\n      this.credentials.success = res.success\n        this.router.navigateByUrl('/profile').then(() => {\n          setTimeout(window.location.reload.bind(window.location), 2500);\n        })\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n\n  deleteProfile(pseudo: any) {\n    this.auth.logout();\n    this.auth.deleteProfile(pseudo)\n      .subscribe(res => {\n          this.router.navigate(['/']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","\n<div class=\"container\">\n    <div class=\"jumbotron mt-5\">\n        <div class=\"col-sm-10 mx-auto\" ng-controller=\"formCtrl\" ng-app=\"myApp\">\n            <form (submit)=\"updateProfile()\">\n            <h1 class=\"text-center\">Mes informations personnelles</h1>\n\n            <div *ngIf=\"credentials.success\" class=\"alert alert-success\" role=\"alert\">\n                <label>{{credentials.success}}</label>\n            </div>\n\n            <table class=\"table col-md-8 mx-auto\">\n                <tr>\n                    <td>Pseudo</td>\n                    <td>{{credentials?.pseudo}}</td>\n                </tr>\n    \n               \n                \n                <tr>  \n                    <td><label>Email </label>\n                        <div *ngIf=\"email.errors && (email.invalid || email.touched)\">\n                        <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Entrez une adresse mail valide !</small>\n                    </div>\n                    </td>\n                    <td><input type=\"email\" #email=\"ngModel\" class=\"form-control\" name=\"email\" value= {{credentials?.email}}\n                        [class.is-invalid]=\"email.invalid && email.touched\" required\n                        pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" \n                        [(ngModel)]=\"credentials.email\"></td>\n                       \n                </tr>\n            \n                <tr>\n                    <td>Mot de passe</td>\n                    <td><button class=\"btn btn-outline-dark\" routerLink='/update-password'>Modifier</button></td> \n                </tr>\n                <tr>\n                    <td><label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label></td> \n                    <div *ngIf=\"credentials?.abonneNews\">\n                        <td>\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                checked [(ngModel)]=\"credentials.abonneNews\"> Oui\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                [(ngModel)]=\"credentials.abonneNews\"> Non\n                        </td>\n                    </div>\n                    <div *ngIf=\"!credentials?.abonneNews\">\n                        <td>\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                [(ngModel)]=\"credentials.abonneNews\"> Oui\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                checked [(ngModel)]=\"credentials.abonneNews\"> Non\n                        </td>\n                    </div>\n                    \n                    \n                </tr>\n            </table>\n            <button class=\"btn btn-outline-info btn-block col-sm-8 mx-auto\" *ngIf=\"!email.errors\" type=\"submit\">Enregistrer les modifications</button>\n            <button class=\"btn btn-outline-info btn-block col-sm-8 mx-auto\"  *ngIf=\"email.errors\" type=\"submit\" disabled>Enregistrer les modifications</button>\n            \n            <button class=\"btn btn-outline-danger btn-block col-sm-8 mx-auto\" (click)=\"deleteProfile(credentials?.pseudo)\" \n                type=\"submit\">Supprimer mon compte</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RecipeDetails, RecettesService, IngredientDetails, UniteDetails, QuantiteDetails, FavorisDetails, ListeCoursesDetails, AuthentificationService } from '../../service';\nimport { HttpResponse} from '@angular/common/http'\nimport {Router, ActivatedRoute} from '@angular/router'\nimport {Observable} from 'rxjs'\n\n@Component({\n  selector: 'app-recette',\n  templateUrl: './recette.component.html',\n  styleUrls: ['./recette.component.css']\n})\nexport class RecetteComponent implements OnInit {\n\n  public image\n  public recette: RecipeDetails\n  public ingredients: Observable<IngredientDetails[]>\n  public unite: UniteDetails\n  public qtes: QuantiteDetails[]\n  public newFavori: FavorisDetails = {\n    pseudo : this.auth.getUserDetails().pseudo,\n    idRecette : parseInt(this.route.snapshot.paramMap.get('id'))\n  }\n\n  public newListeCourses: ListeCoursesDetails = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    listIngredients : null\n  }\n\n  constructor(public auth: AuthentificationService ,private recetteService: RecettesService, private router: Router, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      recette => {\n        this.recette = recette\n      }\n    );\n\n    this.recetteService.getImage(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      res => {\n        console.log(res)\n        this.image = res\n      }\n    );\n\n    this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredient => {\n        this.ingredients = ingredient\n       \n      }\n    );\n  }\n\n  getUtiliserIngredientsByIdRecette(id: any) : QuantiteDetails[] {\n    this.recetteService.getUtiliserIngredientsByIdRecette(id).subscribe(\n      (qtes: QuantiteDetails[]) => {\n        this.qtes = qtes\n      }, err => {\n        if(err instanceof HttpResponse) {\n          if(err.status === 402) {\n            console.log(\"Il n'y a pas d'ingrédients !\")\n          }\n        }\n      }\n    )\n    return this.qtes\n  }\n\n  getUniteByIdUnite(id: any) : UniteDetails {\n    this.recetteService.getUniteById(id).subscribe(\n      (unite: UniteDetails) => {\n        this.unite = unite\n      }, err => {\n        if(err instanceof HttpResponse) {\n          if(err.status === 402) {\n            console.log(\"Il n'y a pas d'ingrédients !\")\n          }\n        }\n      }\n    )\n    return this.unite\n  }\n\n  addFavoris() {\n    this.recetteService.addFavoris(this.newFavori)\n    this.router.navigateByUrl('/favorites').then(() => {\n      window.location.reload()\n    })\n  }\n\n  addListeCourses(){\n    this.newListeCourses.listIngredients = this.ingredients\n    this.recetteService.addListeCourses(this.newListeCourses)\n    \n    this.router.navigate(['/shoppingList']).then(() => {\n      window.location.reload()\n    })\n\n   \n  }\n\n}\n","<div id=\"titre\">\n    <h2>{{recette?.nomRecette}}</h2>\n  \n    <figure class=\"figure\" *ngFor=\"let img of image\">\n        <img src=\"{{img.lienImage}}\" class=\"rounded mx-auto d-block\"  alt=\"Responsive image\" id=\"resp\">\n       <figcaption class=\"figure-caption center\" id=\"resp\">\n            <span class=\"badge badge-light\" id=\"vew\">{{recette?.nbVues}} 👁</span>\n            \n            <span class=\"badge badge-light\" id=\"fav\">{{recette?.nbFavoris}} ♥</span>\n        </figcaption>\n      \n    </figure>\n</div>\n\n<div id=\"conteneur\">\n    <div class=\"element 1\">\n        <div id=\"card\" class=\"element 1 card border-secondary mb-3 col-lg-4 col-md-4 col-sm-4 p-3\">\n            <div class=\"card-header\">Ingrédients</div>\n            <ul> <!--liste points-->\n                <div class=\"card-body text-secondary\" id=\"ing\">\n                    <li *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n                        {{ingredient.qte}}\n                        {{ingredient.libelleUnite}}\n                        {{ingredient.nomIngredient}}\n                    </li>\n                </div>\n            </ul>\n        </div>\n        <!--bouttons visibles que si on est inscrit-->\n    <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-info\" (click)=\"addListeCourses()\">Ajouter les ingrédients à ma liste de course</button>\n    <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addFavoris()\">♥ Ajouter le recettes à mes favoris</button>\n    </div>\n    <div class=\"element 2 card border-secondary mb-3 col-lg-8 col-md-8 col-sm-8\">\n        <div class=\"card-header\">Préparation</div>\n        <div class=\"card-body text-secondary center\">\n            <pre style=\"line-height: 2.5\" class=\"card-text\"> {{recette?.etapes}}</pre>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith, tap } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails } from '../../service';\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recettes',\n  templateUrl: './recettes.component.html',\n  styleUrls: ['./recettes.component.css']\n})\nexport class RecettesComponent implements OnInit {\n\n  public recettes$: Observable<RecipeDetails[]>\n  public categories: CategoryDetails[]\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recetteService: RecettesService, private router: Router) {\n    //pour la recherche dynamique\n    this.recettes$ = this.recetteService.getAllRecipesAndIngredients()\n    this.recettes$.subscribe(data => {\n      console.log(data)\n    })\n\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) => {\n        return recipes.filter(recipe => \n          \n          recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1 ||\n          recipe.ingredients.forEach(element =>\n              element.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)\n          \n      )}))\n    \n    this.filteredRecipe$.subscribe(data => {\n      console.log(data)\n    })\n    this.filter$.subscribe(data => {\n      console.log(data)\n    })\n  }\n\n  //dans ngOnInit on récupère les données à afficher au lancement de la page\n  ngOnInit(): void {\n    this.getAllCategory()\n  }\n\n  getAllRecipes() {\n\n    this.recettes$ = this.recetteService.getAllRecipesAndIngredients()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe =>\n          recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  getImageByIdRecipe(id: number): any {\n    this.recetteService.getImage(id).subscribe(\n      res => {\n        console.log(res)\n        return res.lienImage\n      })\n  }\n\n  getAllCategory() {\n    this.recetteService.getAllCategory().subscribe(\n      (categorie: CategoryDetails[]) => {\n\n        this.categories = categorie\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Il n'y a pas de catégorie.\")\n\n\n          }\n\n        }\n      }\n    )\n  }\n\n  getRecipeByCategory(idCategorie: any) {\n\n    this.recettes$ = this.recetteService.getRecipeByCategory(idCategorie)\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload()\n        })\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Cette recette n'existe pas !\")\n          }\n        }\n      })\n    console.log(\"cocuouc\")\n  }\n}\n","<ul id=\"menu\" class=\"nav justify-content-center\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link active\" routerLink=\"/allRecipes\" (click)=\"getAllRecipes()\">Toutes les recettes</a>\n    </li>\n    <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n      <a class=\"nav-link\" routerLink=\"/allRecipes\" (click)=\"getRecipeByCategory(categ.idCategorie)\">{{categ.libelleCategorie}}</a>\n    </li>\n    <li>\n      <form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n      </form>\n    </li>\n  </ul>\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of filteredRecipe$ | async\"> <!--Pour chaque recette on représente sa carte-->\n                <div class=\"card h-100\">\n                    <img class=\"card-img-top img-fluid\" src=\"{{recette.lienImage}}\" alt=\"Photo de la recette\"> \n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                        <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                        <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                    </div>\n                    <div class=\"card-footer text-center bg-white\">\n                        <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                        \n                </div>\n            </div>\n        </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-refresh',\n  templateUrl: './refresh.component.html',\n  styleUrls: ['./refresh.component.css']\n})\n\nexport class RefreshComponent implements OnInit {\n\n  constructor(private activatedRoute:ActivatedRoute,private route:Router) { }\n\n  ngOnInit() {\n    this.activatedRoute\n        .queryParams\n        .subscribe(params => {                \n          if(params.url){\n            this.route.navigate([params.url]);\n          }\n        });\n  }\n\n}\n","<p>refresh works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\n\n@Component({\n  selector: 'app-request-reset',\n  templateUrl: './request-reset.component.html',\n  styleUrls: ['./request-reset.component.css']\n})\n\nexport class RequestResetComponent implements OnInit {\n  RequestResetForm: FormGroup;\n  forbiddenEmails: any;\n  errorMessage: string;\n  successMessage: string;\n  IsvalidForm = true;\n\n  constructor(\n    private authService: AuthentificationService,\n    private router: Router,\n   ) {\n\n  }\n\n\n  ngOnInit() {\n\n    this.RequestResetForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email], this.forbiddenEmails),\n    });\n  }\n\n\n  RequestResetUser(form) {\n    console.log(form)\n    if (form.valid) {\n      this.IsvalidForm = true;\n      this.authService.requestReset(this.RequestResetForm.value).subscribe(\n        data => {\n          this.RequestResetForm.reset();\n          this.successMessage = \"Un email vous a été envoyé pour changer votre mot de passe.\";\n          setTimeout(() => {\n            this.successMessage = null;\n            this.router.navigate(['login']);\n          }, 3000);\n        },\n        err => {\n\n          if (err.error.message) {\n            this.errorMessage = err.error.message;\n          }\n        }\n      );\n    } else {\n      this.IsvalidForm = false;\n    }\n  }\n}\n","<div class=\"container-fluid form\">\n    <div class=\"row form-row \">\n        <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n            <div class=\"card my-5\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title text-center\">Mot de passe oublié</h5>\n                    <div>\n                        <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n                            <span>{{errorMessage}}</span>\n                        </div>\n                        <div id=\"successMsg\" *ngIf=\"successMessage\">\n                            <span>{{successMessage}}</span>\n                        </div>\n                        <form action=\"\" [formGroup]=\"RequestResetForm\" (ngSubmit)=\"RequestResetUser(RequestResetForm)\">\n                            <div class=\"form-group\">\n                                <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\" placeholder=\"exemple@exemple.fr\"\n                                    type=\"text\" id=\"email\" formControlName=\"email\" />\n                                <span *ngIf=\"!RequestResetForm.get('email').valid && !IsvalidForm\"\n                                    class=\"help-block\">Entrer une adresse valide!</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <div>\n                                    <button id=\"btn\" type=\"submit\" class=\" btn btn-primary\">Valider</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-response-reset',\n  templateUrl: './response-reset.component.html',\n  styleUrls: ['./response-reset.component.css']\n})\n\nexport class ResponseResetComponent implements OnInit {\n  ResponseResetForm: FormGroup;\n  errorMessage: string;\n  successMessage: string;\n  resetToken: null;\n  CurrentState: any;\n  IsResetFormValid = true;\n  constructor(\n    private authService: AuthentificationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder ) {\n\n    this.CurrentState = 'Wait';\n    this.route.params.subscribe(params => {\n      this.resetToken = params.token;\n      console.log(this.resetToken);\n      this.VerifyToken();\n    });\n  }\n\n\n  ngOnInit() {\n\n    this.Init();\n  }\n\n  VerifyToken() {\n    this.authService.ValidPasswordToken({ resettoken: this.resetToken }).subscribe(\n      data => {\n        this.CurrentState = 'Verified';\n      },\n      err => {\n        this.CurrentState = 'NotVerified';\n      }\n    );\n  }\n\n  Init() {\n    this.ResponseResetForm = this.fb.group(\n      {\n        resettoken: [this.resetToken],\n        newPassword: ['', [Validators.required, Validators.minLength(4)]],\n        confirmPassword: ['', [Validators.required, Validators.minLength(4)]]\n      }\n    );\n  }\n\n  Validate(passwordFormGroup: FormGroup) {\n    const new_password = passwordFormGroup.controls.newPassword.value;\n    const confirm_password = passwordFormGroup.controls.confirmPassword.value;\n\n    if (confirm_password.length <= 0) {\n      return null;\n    }\n\n    if (confirm_password !== new_password) {\n      return {\n        doesNotMatch: true\n      };\n    }\n\n    return null;\n  }\n\n\n  ResetPassword(form) {\n    console.log(form.get('confirmPassword'));\n    if (form.valid) {\n      this.IsResetFormValid = true;\n      this.authService.newPassword(this.ResponseResetForm.value).subscribe(\n        data => {\n          this.ResponseResetForm.reset();\n          this.successMessage = data.message;\n          setTimeout(() => {\n            this.successMessage = null;\n            this.router.navigate(['login']);\n          }, 3000);\n        },\n        err => {\n          if (err.error.message) {\n            this.errorMessage = err.error.message;\n          }\n        }\n      );\n    } else { this.IsResetFormValid = false; }\n  }\n}\n","<div class=\"container-fluid form\">\n    <div class=\"row\" *ngIf=\"CurrentState=='Wait'\">\n        <div class=\"col-md-12  close-form\">\n            <h2> Please Wait...</h2>\n        </div>\n    </div>\n    <div class=\"row\"\n        *ngIf=\"CurrentState=='NotVerified'\">\n        <div class=\"col-md-12\">\n            <h2> Invalid URL.</h2>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"CurrentState=='Verified'\">\n        <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n            <div class=\"card card-signin my-5\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title text-center\">Set New Password</h5>\n                    <div>\n                        <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n                            <span>{{errorMessage}}</span>\n                        </div>\n                        <div id=\"successMsg\" *ngIf=\"successMessage\">\n                            <span>{{successMessage}}</span>\n                        </div>\n                        <form action=\"\" [formGroup]=\"ResponseResetForm\" (ngSubmit)=\"ResetPassword(ResponseResetForm)\">\n                            <div class=\"form-group\">\n                                <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\" placeholder=\"Password\"\n                                    type=\"password\" id=\"password\" formControlName=\"newPassword\" />\n                                <span *ngIf=\"!ResponseResetForm.get('newPassword').valid && !IsResetFormValid\"\n                                    class=\"help-block\">Password is required with atleast 4 characters.</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\"\n                                    placeholder=\"Confirm Password\" type=\"password\" id=\"cpassword\"\n                                    formControlName=\"confirmPassword\" />\n                                <span *ngIf=\"!ResponseResetForm.get('confirmPassword').valid && !IsResetFormValid\"\n                                    class=\"help-block\">. </span>\n                                <span\n                                    *ngIf=\"ResponseResetForm.get('confirmPassword').valid && (ResponseResetForm.get('confirmPassword').value != ResponseResetForm.get('newPassword').value) && !IsResetFormValid\"\n                                    class=\"help-block\">Confirm Password does not match with password.</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <div>\n\n                                    <button type=\"submit\" class=\"  btn btn-primary\">Update\n                                        Password</button>\n\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, TokenPayload } from '../../service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-se-connecter',\n  templateUrl: './se-connecter.component.html',\n  styleUrls: ['./se-connecter.component.css']\n})\nexport class SeConnecterComponent implements OnInit {\n\n  loginForm: FormGroup\n\n  credentials: TokenPayload = {\n    pseudo: '',\n    email: '',\n    mdp: '',\n    mdp2: '',\n    admin: false,\n    abonneNews: true,\n    error: ''\n  }\n\n  constructor(private auth: AuthentificationService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm()\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      mdp: ['', Validators.required],\n    });\n  }\n\n  login() {\n\n    const formValue = this.loginForm.value;\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.mdp = formValue.mdp;\n\n    this.auth.login(this.credentials).subscribe(\n      (res) => {\n        if (res.error == \"Mot de passe et/ou pseudo incorrect\") {\n          alert(res.error);\n        } else {\n          if (this.auth.emailConfirmed()) {\n            this.router.navigateByUrl('/profile')\n            alert(\"Bienvenue sur Marine's Recipe\")\n          } else {\n            this.auth.logout()\n            window.location.reload()\n            alert(\"Vous devez vérifier votre adresse mail avant de pouvoir vous connecter ! :)\")\n          }\n          \n        }\n      },\n      err => {\n        console.error(err)\n      }\n    )\n  }\n\n  //Fonction appelée lors du clic\n  clicSurBouton(){\n    alert(\"Si vous n'avez pas reçu de mail pour la confirmation de votre adresse mail, veuillez consulter vos mails indésirables. Si le problème persiste, veuillez nous contacter via l'onglet Contact.\");\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                <h1 id=\"lien\" class=\"h3 mb-3 font-weight-normal\">Se connecter</h1>\n                <hr>\n                <div class=\"form-group\">\n                    <label>Pseudo</label>\n                    <input type=\"text\" class=\"form-control\" required name=\"pseudo\" placeholder=\"pseudo\" formControlName=\"pseudo\">\n                </div>\n                <hr>\n                <div class=\"form-group\">\n                    <label>Mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" required name=\"mdp\" placeholder=\"****\" formControlName=\"mdp\">\n                </div>\n                <hr>\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Se connecter</button>\n            </form>\n            <hr>\n            <div id=\"lien\">\n                <a href=\"request-reset-password\">Mot de passe oublié</a>\n            </div>\n            <hr>\n            <div id=\"lien\">\n                <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"clicSurBouton()\">Je n'ai pas reçu de mail pour la confirmation de mon adresse mail</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { UniteDetails, RecettesService} from '../../service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-unite',\n  templateUrl: './unite.component.html',\n  styleUrls: ['./unite.component.css']\n})\nexport class UniteComponent implements OnInit {\n\n  public unites$: Observable<UniteDetails[]>\n  public unites: UniteDetails[]\n\n  public unite: UniteDetails = {\n    idUnite: null,\n    libelleUnite: ''\n  }\n  \n  public filteredUnite$: Observable<UniteDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recettesService: RecettesService, private router: Router) { \n     //pour la recherche dynamique\n     this.unites$ = this.recettesService.getAllUnite()\n     this.filter = new FormControl('')\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n     this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n       .pipe(map(([unites, filterString]) =>\n         unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllUnite() {\n\n    this.unites$ = this.recettesService.getAllUnite()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n      .pipe(map(([unites, filterString]) =>\n        unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteUnite(idUnite: any) {\n    this.recettesService.deleteUnite(idUnite)\n      .subscribe(res => {\n        this.router.navigate(['/unite'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateUnite(unite: UniteDetails){\n    this.recettesService.updateUnite(unite).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addUnite(){\n    this.recettesService.addUnite(this.unite)\n    window.location.reload()\n  }\n \n\n}\n","<div id=\"header\">\n  <h1>Unités</h1>\n\n</div>\n\n\n<div class='flex-container'>\n\n  <div>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher une unité\" aria-label=\"Search\"\n        [formControl]=\"filter\">\n    </form>\n    <table class=\"table col-md-12 mx-auto\" *ngFor=\"let unite of filteredUnite$ | async\">\n\n      <tr>\n        <td>\n\n          <form (submit)=\"updateUnite(unite)\">\n            <div class=\"form-row align-items-center\">\n              <div class=\"col-auto\">\n                <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"libelleUnite\" value={{unite.libelleUnite}}\n                  [(ngModel)]=\"unite.libelleUnite\">\n              </div>\n              <div class=\"col-auto\">\n                <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n              </div>\n              <div class=\"col-auto\">\n                <button id=\"btn\" class=\"btn btn-outline-danger \" (click)=\"deleteUnite(unite.idUnite)\">Supprimer</button>\n              </div>\n            </div>\n          </form>\n        </td>\n      </tr>\n    </table>\n  </div>\n  <div>\n    <h6 id=\"question\"> Ajouter une nouvelle unité </h6>\n    <form (submit)=\"addUnite()\">\n      <input type=\"text\" class=\"form-control\" name=\"libelleUnite\" placeholder=\"libelle unité\"\n        [(ngModel)]=\"unite.libelleUnite\">\n\n      <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserMdp } from '../../service';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-update-password',\n  templateUrl: './update-password.component.html',\n  styleUrls: ['./update-password.component.css']\n})\nexport class UpdatePasswordComponent implements OnInit {\n\n  credentials: UserMdp = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    mdp: '',\n    newmdp: '',\n    mdp2: '',\n    error: '',\n    success: ''\n  }\n\n  public updatePasswordForm: FormGroup\n\n  constructor(private auth: AuthentificationService, private router: Router, private modalService: NgbModal, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initUpdatePasswordForm()\n  }\n\n  initUpdatePasswordForm() {\n    this.updatePasswordForm = this.formBuilder.group({\n      mdp: ['', Validators.required],\n      newmdp: ['', [Validators.required]],\n      mdp2: ['', Validators.required]\n    });\n  }\n\n  updatePassword() {\n\n    const formValue = this.updatePasswordForm.value;\n\n    this.credentials.mdp = formValue.mdp\n    this.credentials.newmdp = formValue.newmdp\n    this.credentials.mdp2 = formValue.mdp2\n\n    this.initUpdatePasswordForm()\n\n    if (formValue.newmdp != formValue.mdp2) {\n      alert(\"Les nouveaux mots de passe ne sont pas identiques.\");\n      return;\n    }\n\n    this.auth.updatePassword(this.credentials).subscribe((res: any) => {\n      if (res.error == \"Mot de passe incorrect!\") {\n        alert(\"L'ancien mot de passe n'est pas correct.\");\n        return;\n      } else {\n        this.router.navigateByUrl('/profile')\n      }\n    }, (err: any) => {\n      console.log(err);\n    }\n    );\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form [formGroup]=\"updatePasswordForm\" (ngSubmit)=\"updatePassword()\">\n                <h1 class=\"h3 mb-3 font-weight-normal\">Modifier mon mot de passe</h1>\n                \n                <div class=\"form-group\">\n                    <label>Ancien mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp\" placeholder=\"****\" formControlName=\"mdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Nouveau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"newmdp\" placeholder=\"****\" formControlName=\"newmdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Confirmer le nouveaau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp2\" placeholder=\"****\" formControlName=\"mdp2\">\n                </div>\n\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Enregistrer</button>\n            </form>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}