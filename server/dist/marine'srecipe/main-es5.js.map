{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/service/admin-auth.service.ts","webpack:///src/app/service/auth-guard.service.ts","webpack:///src/app/service/authentification.service.ts","webpack:///src/app/service/index.ts","webpack:///src/app/service/recettes.service.ts","webpack:///src/app/utils/Utils.js","webpack:///src/app/views/accueil/accueil.component.ts","webpack:///src/app/views/accueil/accueil.component.html","webpack:///src/app/views/ajout-recette/ajout-recette.component.ts","webpack:///src/app/views/ajout-recette/ajout-recette.component.html","webpack:///src/app/views/apropos/apropos.component.ts","webpack:///src/app/views/apropos/apropos.component.html","webpack:///src/app/views/categories/categories.component.ts","webpack:///src/app/views/categories/categories.component.html","webpack:///src/app/views/contact/contact.component.ts","webpack:///src/app/views/contact/contact.component.html","webpack:///src/app/views/gerer-les-recettes/gerer-les-recettes.component.ts","webpack:///src/app/views/gerer-les-recettes/gerer-les-recettes.component.html","webpack:///src/app/views/ingredients/ingredients.component.ts","webpack:///src/app/views/ingredients/ingredients.component.html","webpack:///src/app/views/inscrire/inscrire.component.ts","webpack:///src/app/views/inscrire/inscrire.component.html","webpack:///src/app/views/ma-liste-de-courses/ma-liste-de-courses.component.ts","webpack:///src/app/views/ma-liste-de-courses/ma-liste-de-courses.component.html","webpack:///src/app/views/mentions-legales/mentions-legales.component.ts","webpack:///src/app/views/mentions-legales/mentions-legales.component.html","webpack:///src/app/views/mes-commentaires/mes-commentaires.component.ts","webpack:///src/app/views/mes-commentaires/mes-commentaires.component.html","webpack:///src/app/views/mes-recettes/mes-recettes.component.ts","webpack:///src/app/views/mes-recettes/mes-recettes.component.html","webpack:///src/app/views/modifier-recette/modifier-recette.component.ts","webpack:///src/app/views/modifier-recette/modifier-recette.component.html","webpack:///src/app/views/mon-profile/mon-profile.component.ts","webpack:///src/app/views/mon-profile/mon-profile.component.html","webpack:///src/app/views/recette/recette.component.ts","webpack:///src/app/views/recette/recette.component.html","webpack:///src/app/views/recettes/recettes.component.ts","webpack:///src/app/views/recettes/recettes.component.html","webpack:///src/app/views/refresh/refresh.component.ts","webpack:///src/app/views/refresh/refresh.component.html","webpack:///src/app/views/request-reset/request-reset.component.ts","webpack:///src/app/views/request-reset/request-reset.component.html","webpack:///src/app/views/response-reset/response-reset.component.ts","webpack:///src/app/views/response-reset/response-reset.component.html","webpack:///src/app/views/se-connecter/se-connecter.component.ts","webpack:///src/app/views/se-connecter/se-connecter.component.html","webpack:///src/app/views/unite/unite.component.ts","webpack:///src/app/views/unite/unite.component.html","webpack:///src/app/views/update-password/update-password.component.ts","webpack:///src/app/views/update-password/update-password.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","auth","AppComponent","selector","templateUrl","styleUrls","path","component","canActivate","AppModule","declarations","providers","bootstrap","AdminAuthService","router","isAdmin","navigateByUrl","AuthGuardService","isLoggedIn","AuthentificationService","http","token","localStorage","setItem","getItem","getToken","payload","split","window","atob","JSON","parse","user","getUserDetails","exp","Date","now","emailConfirmed","admin","base","post","request","pipe","data","saveToken","get","headers","Authorization","removeItem","operation","result","error","console","put","pseudo","url","delete","_","log","handleError","to","idRecette","body","infos","params","append","nameUser","emailUser","subject","message","RecettesService","sanitizer","forEach","element","subscribe","lienImage","getCategoryByRecette","categories","ingredients","getIngredientsByIdRecette","globalTime","tempsPreparation","tempsCuisson","utiliserIngredients","idIngredient","idUnite","idCategorie","recette","categorie","ingredient","res","recipe","unite","newFavori","newListeCourses","newIngredient","file","toString","commentaire","options","weekday","year","month","day","hour","minute","d","dateCommentaire","toLocaleString","getUser","ecritPar","element2","bool","getReponseCommentaireRecipe","idCommentaire","children","imageToModify","roundDecimal","nombre","precision","tmp","Math","pow","round","addTimes","startTime","endTime","times","max","length","a","b","i","isNaN","parseInt","hours","minutes","seconds","m","h","slice","addHours","time","dateTime","temps","setHours","setMinutes","setSeconds","getHours","getMinutes","getSeconds","AccueilComponent","recetteService","menu","petitDej","repas","douceur","getMostPopularRecipes","getLatestReceipes","getPetitDej","getRepas","getDouceur","getMenu","idMenu","err","status","mostPopularRecipes","latestRecipes","updateNbView","navigate","location","reload","AjoutRecetteComponent","formBuilder","modalService","nomRecette","idImage","etapes","nbrePart","libellePart","astuce","selectIngredient","nomIngredient","dropdownList","selectedItems","fileToUpload","getAllIngredients","disabled","getAllUnite","unites","getAllCategory","dropdownSettings","singleSelection","idField","textField","enableCheckAll","itemsShowLimit","allowSearchFilter","searchPlaceholderText","initRecipeForm","createIngredientsForm","onChanges","event","target","files","images","formData","FormData","reader","FileReader","dataURL","onload","fileMetaData","originalname","name","type","buffer","addImage","formValue","recipeForm","value","ingredientFormValue","ingredientForm","alert","qte","createRecipe","addIngredientsAndCategoryToNewRecipe","listAbonneNews$","getAbonneNews","sentEmailToNewRecipe","group","required","array","createIngredientForm","compose","min","default","valueChanges","val","push","content","open","ariaLabelledBy","addIngredient","setTimeout","selectImage","AProposComponent","CategoriesComponent","recettesService","libelleCategorie","deleteCategory","queryParams","refresh","getTime","updateCategory","addCategory","ContactComponent","contactSend","initContactForm","email","contactForm","sendEmailContact","sendEmail","GererLesRecettesComponent","media","opened","over","expandHeight","collapseHeight","displayMode","recettes$","getAllRecipes","filter","filter$","filteredRecipe$","recipes","filterString","toLowerCase","indexOf","watcher","media$","change","mqAlias","deleteRecipe","IngredientsComponent","libelleUnite","ingredients$","filteredIngredient$","deleteIngredient","updateIngredient","InscrireComponent","credentials","mdp","mdp2","abonneNews","initForm","userForm","register","logout","MaListeDeCoursesComponent","ingredientToDelete","ingredientToAdd","getListeCourses","restIngredients$","getRestListeCourses","deleteListeCourse","addIngredientShoppingList","MentionsLegalesComponent","MesCommentairesComponent","commentaireToModify","getCommentaireUser","commentaires","getRecipeById","concerne","modifyCommentaire","deleteCommentaire","MesRecettesComponent","page","actualCategory","recipeByCategory","recipeCategory","getFavoris","allRecipe","allRecipe2","getFavorisByCategory","initResearchForm","researchForm","researchResult","includes","getRecipeByCategory","deleteFavoris","research","ngOnChanges","ModifierRecetteComponent","route","snapshot","paramMap","datePublication","nbFavoris","nbVues","getImage","image","getRestIngredients","allIngredients","allUnites","getRestCategory","allCategories","getCategory","image2","addImageToRecipe","updateRecipeName","updateSteps","updateAstuce","updatePart","updateTemps","updateRecipeIng","deleteIngredientRececipe","deleteRecipeCategory","addRecipeCategory","addIngredientRecette","Ingredient","quantite","MonProfileComponent","success","profile","updateProfile","bind","deleteProfile","RecetteComponent","listIngredients","newCommentaire","newResponse","parent","nbrePartInitial","ingredientQteInitial","getCommentaireRecipe","getUtiliserIngredientsByIdRecette","qtes","getUniteById","addFavoris","addListeCourses","addCommentaire","searchValue","onProportionLess","onProportionMore","RecettesComponent","favoris","getAllRecipesAndIngredients","RefreshComponent","activatedRoute","RequestResetComponent","authService","IsvalidForm","RequestResetForm","forbiddenEmails","form","valid","requestReset","reset","successMessage","errorMessage","RequestResetUser","ResponseResetComponent","fb","IsResetFormValid","CurrentState","resetToken","VerifyToken","Init","ValidPasswordToken","resettoken","ResponseResetForm","newPassword","minLength","confirmPassword","passwordFormGroup","new_password","controls","confirm_password","doesNotMatch","SeConnecterComponent","loginForm","login","clicSurBouton","UniteComponent","unites$","filteredUnite$","deleteUnite","updateUnite","addUnite","UpdatePasswordComponent","newmdp","initUpdatePasswordForm","updatePasswordForm","updatePassword","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthentificationService } from './service/authentification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {  \n  constructor(public auth: AuthentificationService){ \n  }\n}\n","<script>\n    //pour que la navbar responsive se referme lorsqu'on sélectionne un ongle\n    $(document).on('click', '.navbar-collapse.show', function (e) {\n        $(this).collapse('hide');\n    });\n</script>\n<script>\n    $(document).on(\"click\", function (e) {\n\t\te.preventDefault();\n\t\tvar $item = $(\".rad-dropmenu-item\");\n\t\tif ($item.hasClass(\"active\")) {\n\t\t\t$item.removeClass(\"active\");\n\t\t}\n    });\n    \n    $(\"a.rad-menu-item\").on(\"click\", function (e) {\n\t\tvar $item = $(\"ul.rad-dropmenu-item\");\n\t\tif (!$item.hasClass(\"active\")) {\n\t\t\t$item.toggleClass(\"active\");\n\t\t}\n\t});\n  </script>\n\n<!--script pour les liens de partages sur les réseaux sociaux-->\n<script type=\"text/javascript\"\n    src=\"https://platform-api.sharethis.com/js/sharethis.js#property=5e8ef1fbc08fd00012f1a697&product=inline-share-buttons\"\n    async=\"async\"></script>\n\n<script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script>\n\n<link href=\"//db.onlinewebfonts.com/c/ca42b7ce0d708ee0817789585c449739?family=PeachesandCreamRegularW00\" rel=\"stylesheet\" type=\"text/css\"/>\n\n\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" role=\"navigation\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\"\n        aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toogle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n\n    </button>\n    <img src=\"../assets/img/logo.jpeg\" class=\"rounded float-left\" alt=\"logo\" id=\"logo\">\n    <div class=\"collapse navbar-collapse justify-content-md-center\" id=\"navbarNavDropdown\">\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/\">Accueil </a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\"\n                    routerLink=\"/allRecipes\">Recettes</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/aboutMe\">A\n                    propos</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" [routerLink]=\"['/refresh']\"\n                    [queryParams]=\"{url:'contact'}\" skipLocationChange=\"true\">Contact</a>\n            </li>\n\n            <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" [routerLink]=\"['/refresh']\"\n                    [queryParams]=\"{url:'login'}\" skipLocationChange=\"true\">Se connecter</a>\n            </li>\n\n            <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" [routerLink]=\"['/refresh']\"\n                    [queryParams]=\"{url:'register'}\" skipLocationChange=\"true\">S'inscrire</a>\n            </li>\n\n            <li class=\"nav-item dropdown\" *ngIf=\"auth.isLoggedIn()\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link dropdown-toggle\"\n                    id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    {{auth.getUserDetails()?.pseudo}}\n                </a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                    <a class=\"dropdown-item\" routerLink=\"/profile\">Mon profil</a>\n                    <a class=\"dropdown-item\" routerLink=\"/favorites\">Mes recettes ♥</a>\n                    <a class=\"dropdown-item\" routerLink=\"/shoppingList\">Ma liste de course</a>\n                    <a class=\"dropdown-item\" routerLink=\"/comment\">Mes commentaires</a>\n                    <a class=\"dropdown-item\" *ngIf=\"auth.isAdmin()\" routerLink=\"/handleRecipes\">Gerer les recettes</a>\n                    <a class=\"dropdown-item\" routerLink=\"\" (click)=\"auth.logout()\">Deconnexion</a>\n                </div>\n            </li>\n            <!--<div class=\"col\">\n                <div ngbDropdown class=\"d-inline-block\">\n                  <a id=\"dropdownBasic1\" ngbDropdownToggle><i class=\"fa fa-bell-o\"><span class=\"rad-menu-badge\">49</span></i></a>\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n                    <button ngbDropdownItem>Action - 1</button>\n                    <button ngbDropdownItem>Another Action</button>\n                    <button ngbDropdownItem>Something else is here</button>\n                  </div>\n                </div>\n              </div>-->\n        </ul>\n    </div>\n</nav>\n\n<router-outlet></router-outlet>\n\n<!--footer-->\n<!--logo insta-->\n<link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" type='text/css'>\n\n\n<footer>\n\n    <div class=\"dark-line\">\n        <h2> Marine's recipes |</h2>\n        <p>\"Eat good, feel good\" ||</p>\n        <div class=\"social\">\n            <a href=\"https://pin.it/3m5tTu0\"><i class=\"fa fa-lg fa-pinterest\"></i></a>\n            <a id=\"message\" href=\"https://www.instagram.com/marineteroitin/?hl=fr\"><i class=\"fa fa-lg fa-instagram\"></i></a>\n            <a routerLink=\"/contact\" id=\"message\"><i class=\"fa fa-lg fa-envelope\"></i></a>\n        </div>\n        <p>\n            <a id=\"ment\" routerLink=\"/rules\">Mentions légales</a>\n        </p>\n        <span class=\"copyright\"><a>© Concocté avec ♥ par Marine Téroitin & Luca Debeir • Tous droits réservés marinesrecipes.fr\n            </a></span>\n    </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport {  } from '@angular/cdk';\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { RouterModule, Routes } from '@angular/router'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { InscrireComponent } from './views/inscrire/inscrire.component'\nimport { SeConnecterComponent } from './views/se-connecter/se-connecter.component'\nimport { AccueilComponent } from './views/accueil/accueil.component'\nimport { AuthentificationService, AuthGuardService, AdminAuthService, RecettesService } from './service'\nimport { ContactComponent } from './views/contact/contact.component';\nimport { GererLesRecettesComponent } from './views/gerer-les-recettes/gerer-les-recettes.component';\nimport { MaListeDeCoursesComponent } from './views/ma-liste-de-courses/ma-liste-de-courses.component';\nimport { MesCommentairesComponent } from './views/mes-commentaires/mes-commentaires.component';\nimport { MesRecettesComponent } from './views/mes-recettes/mes-recettes.component';\nimport { MonProfileComponent } from './views/mon-profile/mon-profile.component';\nimport { RecettesComponent } from './views/recettes/recettes.component';\nimport { UpdatePasswordComponent } from './views/update-password/update-password.component';\nimport { AProposComponent } from './views/apropos/apropos.component';\nimport { RecetteComponent } from './views/recette/recette.component';\nimport { IngredientsComponent } from './views/ingredients/ingredients.component';\nimport { CategoriesComponent } from './views/categories/categories.component';\nimport { UniteComponent } from './views/unite/unite.component';\nimport { AjoutRecetteComponent } from './views/ajout-recette/ajout-recette.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { ModifierRecetteComponent } from './views/modifier-recette/modifier-recette.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RequestResetComponent } from './views/request-reset/request-reset.component';\nimport { ResponseResetComponent } from './views/response-reset/response-reset.component';\nimport { RefreshComponent } from './views/refresh/refresh.component';\nimport { MentionsLegalesComponent } from './views/mentions-legales/mentions-legales.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\n\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n\nconst routes: Routes = [\n  { path: '', component: AccueilComponent },\n  { path: 'login', component: SeConnecterComponent },\n  { path: 'register', component: InscrireComponent },\n  { path: 'profile', component: MonProfileComponent, canActivate: [AuthGuardService] },\n  { path: 'update-password', component: UpdatePasswordComponent, canActivate: [AuthGuardService] },\n  { path: 'aboutMe', component: AProposComponent },\n  { path: 'allRecipes', component: RecettesComponent },\n  { path: 'recipe/:id', component: RecetteComponent },\n  { path: 'handleRecipes', component: GererLesRecettesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'category', component: CategoriesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'ingredient', component: IngredientsComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'add-recipe', component: AjoutRecetteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'unite', component: UniteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'contact', component: ContactComponent},\n  { path: 'shoppingList', component: MaListeDeCoursesComponent, canActivate: [AuthGuardService] },\n  { path: 'comment', component: MesCommentairesComponent, canActivate: [AuthGuardService] },\n  { path: 'favorites', component: MesRecettesComponent, canActivate: [AuthGuardService] },\n  { path: 'updateRecipe/:id', component: ModifierRecetteComponent, canActivate: [AdminAuthService, AuthGuardService] },\n  { path: 'request-reset-password', component: RequestResetComponent },\n  { path: 'response-reset-password/:token', component: ResponseResetComponent },\n  { path: 'refresh', component: RefreshComponent },\n  { path: 'rules', component: MentionsLegalesComponent }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccueilComponent,\n    MonProfileComponent,\n    InscrireComponent,\n    SeConnecterComponent,\n    ContactComponent,\n    GererLesRecettesComponent,\n    MaListeDeCoursesComponent,\n    MesCommentairesComponent,\n    MesRecettesComponent,\n    RecettesComponent,\n    UpdatePasswordComponent,\n    RecetteComponent,\n    IngredientsComponent,\n    CategoriesComponent,\n    UniteComponent,\n    AjoutRecetteComponent,\n    ModifierRecetteComponent,\n    RequestResetComponent,\n    ResponseResetComponent,\n    RefreshComponent,\n    MentionsLegalesComponent,\n  ],\n  imports: [\n    NgxPaginationModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatListModule,\n    FlexLayoutModule,\n    NgbModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [AuthGuardService, AuthentificationService, RecettesService, AdminAuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core'\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthentificationService } from './authentification.service'\n\n@Injectable()\nexport class AdminAuthService implements CanActivate {\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate () {\n        if (!this.auth.isAdmin()) {\n            this.router.navigateByUrl('/')\n            return false\n        }\n        return true\n    }\n}","import { Injectable } from '@angular/core'\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthentificationService } from './authentification.service'\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    private token: string\n\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate () {\n        if (!this.auth.isLoggedIn()) {\n            this.router.navigateByUrl('/')\n            return false\n        }\n        return true\n    }\n}","import { Injectable } from '@angular/core'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Observable, of } from 'rxjs'\nimport { map, tap, catchError } from 'rxjs/operators'\nimport { Router } from '@angular/router'\nimport { ContactDetail } from '../views/contact/contact.component'\n\n//login\nexport interface UserDetails {\n    pseudo: string\n    email: string\n    mdp: string\n    admin: boolean\n    emailConfirmed?: boolean\n    abonneNews: boolean\n    exp: number\n    iat: number\n}\n\ninterface TokenResponse {\n    token: string\n    error: string\n}\n\ninterface Response {\n    error: string\n}\n\n//inscription\nexport interface TokenPayload {\n    pseudo: string\n    email: string\n    mdp: string\n    mdp2: string\n    admin: boolean\n    abonneNews: boolean\n    error: string\n}\n\n//changement mdp\nexport interface UserMdp {\n    pseudo: string\n    mdp: string\n    newmdp: string\n    mdp2: string\n    error: string\n    success: string\n}\n\n//modif profile\nexport interface UserProfile {\n    pseudo: string\n    email: string\n    abonneNews: boolean\n    success: string\n}\n\n@Injectable()\nexport class AuthentificationService {\n    private token: string\n    private error: string\n\n    constructor(private http: HttpClient, private router: Router) {\n\n    }\n\n    private saveToken(token: string): void {\n        localStorage.setItem('userToken', token)\n        this.token = token\n    }\n\n    private getToken(): string {\n        if (!this.token) {\n            this.token = localStorage.getItem('userToken')\n        }\n        return this.token\n    }\n\n    public getUserDetails(): UserDetails {\n        const token = this.getToken()\n        let payload\n        if (token) {\n            payload = token.split('.')[1]\n            payload = window.atob(payload)\n            return JSON.parse(payload)\n        } else {\n            return null\n        }\n    }\n\n    public isLoggedIn(): boolean {\n        const user = this.getUserDetails()\n        if (user) {\n            return user.exp > Date.now() / 1000\n        } else {\n            return false\n        }\n    }\n\n    public emailConfirmed(): boolean {\n        const user = this.getUserDetails()\n        if (user) {\n            return user.emailConfirmed\n        } else {\n            return false\n        }\n    }\n\n    public isAdmin(): boolean {\n        const user = this.getUserDetails()\n        if (user) {\n            return user.admin\n        } else {\n            return false\n        }\n    }\n\n    public register(user: TokenPayload): Observable<any> {\n        const base = this.http.post('/server/register', user)\n\n        const request = base.pipe(\n            map((data: TokenResponse) => {\n                if (data.token) {\n                    this.saveToken(data.token)\n                }\n                return data\n            })\n        )\n        return request\n    }\n\n    public login(user: TokenPayload): Observable<any> {\n        const base = this.http.post('/server/login', user)\n        const request = base.pipe(\n            map((data: TokenResponse) => { //map permet de récupérer des données\n                if (data.token) {\n                    this.saveToken(data.token)\n                }\n                return data\n            })\n        )\n        return request\n    }\n\n    public profile(): Observable<any> {\n        return this.http.get('/server/profile', {\n            headers: { Authorization: `${this.getToken()}` }\n        })\n    }\n\n    public logout(): void {\n        this.token = ''\n        window.localStorage.removeItem('userToken')\n        this.router.navigateByUrl('/')\n    }\n\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            // TODO: send the error to remote logging infrastructure\n            console.error(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n\n    public updatePassword(user: UserMdp): Observable<any> {\n        const base = this.http.put(`/server/update-password/${user.pseudo}`, user)\n\n        return base.pipe(\n            map((data: Response) => {\n                return data\n            })\n        );\n    }\n\n    public deleteProfile(pseudo: string): Observable<any> {\n        const url = `/server/delete-profile/${pseudo}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${pseudo}`)),\n            catchError(this.handleError<any>('deleteProfile'))\n        );\n    }\n\n    public updateProfile(user: UserProfile): Observable<any> {\n        const base = this.http.put(`/server/mon-profile/${user.pseudo}`, user)\n\n        return base.pipe(\n            tap(_ => console.log(`updated ${user.pseudo}`)),\n            catchError(this.handleError<any>('updateProfile'))\n        );\n    }\n\n    public getAbonneNews(): any {\n        return this.http.get(`/server/abonneNews`)\n    }\n\n    public sentEmailToNewRecipe(to: any, idRecette: number): any {\n        return this.http.get(`/server/newRecipe/${to.pseudo}/${idRecette}`)\n    }\n\n    public requestReset(body): Observable<any> {\n        return this.http.post(`/server/req-reset-password`, body);\n    }\n\n    public newPassword(body): Observable<any> {\n        return this.http.post(`/server/new-password`, body);\n    }\n\n    public ValidPasswordToken(body): Observable<any> {\n        return this.http.post(`/server/valid-password-token`, body);\n    }\n\n    public sendEmailContact(infos: ContactDetail): any {\n        let params = new HttpParams();\n\n        params = params.append(`name`, infos.nameUser);\n        params = params.append(`email`, infos.emailUser);\n        params = params.append(`subject`, infos.subject);\n        params = params.append(`message`, infos.message);\n\n        return this.http.get(`/server/contact/send`, { params: params})\n    }\n\n    public getUser(pseudo: string): any {\n        return this.http.get(`/server/user/${pseudo}`);\n    }\n}\n","export * from './admin-auth.service'\nexport * from './auth-guard.service'\nexport * from './authentification.service'\nexport * from './recettes.service'\n","import { Injectable } from '@angular/core'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { map, tap } from 'rxjs/operators'\nimport { CreateRecipe } from '../views/ajout-recette/ajout-recette.component'\nimport { AuthentificationService, UserDetails } from './authentification.service'\nimport { Time } from '@angular/common'\nimport { addTimes, addHours } from './../utils/Utils'\nimport { DomSanitizer } from '@angular/platform-browser'\n\n\n\nexport interface RecipeDetails {\n    idRecette: number\n    nomRecette: string\n    datePublication: Date\n    nbFavoris: number\n    nbVues: number\n    etapes: string\n    nbrePart?: number\n    libellePart?: string\n    tempsPreparation?: Time\n    tempsCuisson?: Time\n    astuce?: string\n    lienImage?: any\n    idImage?: number\n    ingredients?: IngredientDetails[]\n    globalTime?: string\n    categories?: CategoryDetails[]\n    idMenu?: number\n    mot?: string\n}\n\nexport interface Menu {\n    petitDej: RecipeDetails\n    repas: RecipeDetails\n    douceur: RecipeDetails\n}\n\nexport interface IngredientDetails {\n    idRecette?: number\n    idIngredient?: string\n    nomIngredient?: string\n    qte?: number\n    libelleUnite?: string\n    idUnite?: number\n    disabled?: boolean\n}\n\nexport interface UniteDetails {\n    idUnite: number\n    libelleUnite: string\n}\n\nexport interface QuantiteDetails {\n    qte: any,\n    idRecette: number\n    idIngredient: number,\n    idUnite: number\n}\n\nexport interface CategoryDetails {\n    idCategorie: number\n    libelleCategorie: string\n}\n\nexport interface FavorisDetails {\n    pseudo: string\n    idRecette: number\n}\n\nexport interface ListeCoursesDetails {\n    pseudo: string\n    listIngredients: any\n}\n\nexport interface ImageDetails {\n    idImage: number\n    lienImage: string\n}\n\nexport interface ImageRecipe {\n    idImage: number\n    idRecette: number\n}\n\nexport interface CommentaireDetails {\n    idCommentaire?: number\n    message?: string\n    dateCommentaire?: string\n    ecritPar?: string\n    concerne?: number\n    nomRecette?: string\n    admin?: boolean\n    children?: CommentaireDetails[]\n    parent?: number\n}\n\n@Injectable()\nexport class RecettesService {\n\n    constructor(private http: HttpClient, private auth: AuthentificationService, private sanitizer: DomSanitizer) { }\n\n    public getAllRecipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/allRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                })\n                this.getCategoryByRecette(element.idRecette).subscribe((data: any) => {\n                    element.categories = data\n                })\n            });\n            return data\n        }))\n    }\n\n    public getAllRecipesAndIngredients(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/allRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    console.log(data[0])\n                    element.lienImage = data[0]?.lienImage\n                })\n                \n                console.log(element)\n                element.ingredients = []\n                this.getIngredientsByIdRecette(element.idRecette).subscribe(data => {\n                    element.ingredients = data\n                })\n                element.globalTime = addHours(addTimes(element.tempsPreparation, element.tempsCuisson))\n                this.getCategoryByRecette(element.idRecette).subscribe((data: any) => {\n                    element.categories = data\n                })\n            });\n            console.log(data)\n            return data\n        }))\n    }\n\n    public getRecipeById(id: any): Observable<any> {\n        return this.http.get<any>('/server/recipe/' + id)\n    }\n\n    public getIngredientsByIdRecette(id: any): any {\n        return this.http.get<any>('/server/recipe/' + id + '/ingredients')\n    }\n\n    public getUtiliserIngredientsByIdRecette(id: any): Observable<QuantiteDetails[]> {\n        const base = this.http.get('/server/recipe/' + id + '/utiliserIngredients')\n        const utiliserIngredients = base.pipe(map((data: QuantiteDetails[]) => {\n            return data\n        }))\n        return utiliserIngredients\n    }\n\n    public getIngredientById(idIngredient: any): Observable<IngredientDetails> {\n        const base = this.http.get('/server/ingredient/' + idIngredient)\n        return base.pipe(map((data: IngredientDetails) => {\n            return data\n        }))\n    }\n\n    public getUniteById(idUnite: any): Observable<UniteDetails> {\n        const base = this.http.get('/server/recipe/unite/' + idUnite)\n        return base.pipe(map((data: UniteDetails) => {\n            return data\n        }))\n    }\n\n    public getLatestReceipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/latestReceipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    element.globalTime = addHours(addTimes(element.tempsPreparation, element.tempsCuisson))\n                })\n                this.getCategoryByRecette(element.idRecette).subscribe((data: any) => {\n                    element.categories = data\n                })\n            });\n            return data\n        }))\n    }\n\n    public getMostPopularRecipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/mostPopularRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    element.globalTime = addHours(addTimes(element.tempsPreparation, element.tempsCuisson))\n                })\n                this.getCategoryByRecette(element.idRecette).subscribe((data: any) => {\n                    element.categories = data\n                })\n            });\n            return data\n        }))\n    }\n\n    public deleteRecipe(id: any): Observable<any> {\n        const url = `/server/delete-recipe/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public getRecipeByCategory(idCategorie: any): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/recipe/category/${idCategorie}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                })\n                this.getIngredientsByIdRecette(element.idRecette).subscribe(data => {\n                    element.ingredients = data\n                })\n                element.globalTime = addHours(addTimes(element.tempsCuisson, element.tempsPreparation))\n            });\n            return data\n        }))\n    }\n\n    public getCategoryByRecette(idRecette: any): Observable<CategoryDetails[]> {\n        const base = this.http.get(`/server/category/recipe/${idRecette}`)\n        return base.pipe(map((data: CategoryDetails[]) => {\n            return data\n        }))\n    }\n\n    public getAllCategory(): any {\n        return this.http.get<any>(`/server/category`)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n    }\n\n\n\n    public updateNbView(recette: RecipeDetails): Observable<any> {\n        return this.http.put<any>(`/server/recipe/update-nbView/${recette.idRecette}`, recette)\n    }\n\n    public deleteCategory(id: any): Observable<any> {\n        const url = `/server/category/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateCategory(categorie: CategoryDetails): Observable<any> {\n        return this.http.put(`/server/category/update`, categorie)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n\n\n    }\n\n    public updateRecipeIng(recette: RecipeDetails, ingredient: IngredientDetails): Observable<any> {\n        return this.http.put(`/server/recipe/${recette.idRecette}/ingredient/update`, ingredient)\n            .pipe(map((res) => {\n                return res\n            }))\n\n\n    }\n\n    public addCategory(categorie: CategoryDetails): any {\n\n        this.http.post('/server/category/add', categorie).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public getAllIngredients(): any {\n        return this.http.get<any>(`/server/ingredient`)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public getRestIngredients(idRecette: any): any {\n        return this.http.get<any>(`/server/recipe/${idRecette}/ingredient/rest`)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public getRestCategory(idRecette: any): any {\n        return this.http.get<any>(`/server/recipe/${idRecette}/category/rest`)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n    }\n\n    public deleteIngredient(id: any): Observable<any> {\n        const url = `/server/ingredient/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateIngredient(ingredient: IngredientDetails): Observable<any> {\n        return this.http.put(`/server/ingredient/update`, ingredient)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public addIngredient(ingredient: any): any {\n        this.http.post('/server/ingredient/add', ingredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public createRecipe(recipe: CreateRecipe): Observable<any> {\n        const res = this.http.post('/server/add-recipe', recipe)\n        return res.pipe(map((res) => {\n            return res\n        }))\n    }\n\n    public addIngredientsAndCategoryToNewRecipe(recipe: CreateRecipe): Observable<any> {\n        const res = this.http.post('/server/recipe/addIngredientAndCategorie', recipe)\n        return res.pipe(map((res) => {\n            console.log(res)\n            return res\n        }))\n    }\n\n    public addRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails): Observable<any> {\n        return this.http.post(`/server/recipe/${recette.idRecette}/category/add`, categorie)\n            .pipe(map((res) => {\n                return res\n            }))\n    }\n\n    public getAllUnite(): any {\n        return this.http.get<any>('/server/unite')\n            .pipe(map((data: UniteDetails[]) => {\n                return data\n            }))\n    }\n\n    public deleteUnite(id: any): Observable<any> {\n        const url = `/server/unite/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateUnite(unite: UniteDetails): Observable<any> {\n        return this.http.put(`/server/unite/update`, unite)\n            .pipe(map((data: UniteDetails[]) => {\n                return data\n            }))\n    }\n\n    public addUnite(unite: any): any {\n        this.http.post('/server/unite/add', unite).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n\n    public addFavoris(newFavori: FavorisDetails): Observable<any> {\n        return this.http.post(`/server/favorites/add`, newFavori).pipe(res => {\n            return res\n        })\n    }\n\n\n    public addListeCourses(newListeCourses: ListeCoursesDetails) {\n        this.http.post(`/server/shoppingList/add`, newListeCourses).subscribe(res => {\n            {\n                return res\n            }\n\n        })\n    }\n\n\n    public getFavoris(): Observable<RecipeDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/recipe/favorites/${pseudo}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                })\n                this.getIngredientsByIdRecette(element.idRecette).subscribe(data => {\n                    element.ingredients = data\n                })\n                element.globalTime = addHours(addTimes(element.tempsPreparation, element.tempsCuisson))\n            });\n            return data\n        }))\n    }\n\n    public getFavorisByCategory(idCategorie: number): Observable<RecipeDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/recipe/favorites/${pseudo}/${idCategorie}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                this.getIngredientsByIdRecette(element.idRecette).subscribe(data => {\n                    element.ingredients = data\n                })\n                element.globalTime = addHours(addTimes(element.tempsPreparation, element.tempsCuisson))\n            });\n            return data\n        }))\n    }\n\n    public deleteFavoris(id: any): Observable<any> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const url = `/server/favorites/${pseudo}/delete/${id}`;\n        return this.http.delete<any>(url).pipe(res => {\n            return res\n        });\n    }\n\n\n    public getListeCourses(): Observable<IngredientDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/shoppingList/${pseudo}`);\n        return base.pipe(map((data: IngredientDetails[]) => {\n            return data\n        }))\n\n    }\n\n    public getRestListeCourses(): Observable<IngredientDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/shoppingList/rest/${pseudo}`);\n        return base.pipe(map((data: IngredientDetails[]) => {\n            return data\n        }))\n    }\n\n    public addIngredientShoppingList(ingredient: any): any {\n        return this.http.post(`/server/shoppingList/add/ingredient`, ingredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public deleteListeCourse(id: any): Observable<any> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const url = `/server/shoppingList/delete/${id}/${pseudo}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public getCategory(id: any): any {\n        return this.http.get<any>(`/server/recipe/${id}/category`)\n            .pipe(map((data: any) => {\n                return data\n            }))\n    }\n\n    public updateRecipeName(recette: RecipeDetails): Observable<any> {\n\n        return this.http.put(`/server/recipe/name/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public updateSteps(recette: RecipeDetails): Observable<any> {\n\n        return this.http.put(`/server/recipe/step/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public updateAstuce(recette: RecipeDetails): Observable<any> {\n\n        return this.http.put(`/server/recipe/astuce/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public updatePart(recette: RecipeDetails): Observable<any> {\n\n        return this.http.put(`/server/recipe/part/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public updateTemps(recette: RecipeDetails): Observable<any> {\n\n        return this.http.put(`/server/recipe/temps/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public deleteIngredientRececipe(ingredient: IngredientDetails, recette: RecipeDetails): Observable<any> {\n        const url = `/server/recipe/${recette.idRecette}/ingredient/${ingredient.idIngredient}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${ingredient.idIngredient} from recipe ${recette.idRecette}`)),\n        );\n    }\n\n    public addIngredientRecette(newIngredient: IngredientDetails): any {\n        this.http.post(`/server/recipe/${newIngredient.idRecette}/add/ingredient/${newIngredient.idIngredient}`, newIngredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public deleteRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails): Observable<any> {\n        const url = `/server/recipe/${recette.idRecette}/category/${categorie.idCategorie}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${categorie.idCategorie} from recipe ${recette.idRecette}`)),\n        );\n    }\n\n    public addImage(file: any): Observable<any> {\n        console.log(file)\n        return this.http.post(`/server/uploads`, file).pipe(map((data: any) => {\n            return data\n        }))\n    }\n\n    public getImage(id: number): any {\n        return this.http.get(`/server/image/${id}`).pipe(map((data: any) => {\n            console.log(data)\n            return data\n        }))\n    }\n\n    public getRestOfIngredients(ingredients: number[]): any {\n        let params = new HttpParams();\n\n        ingredients.forEach((idIngredient: number) => {\n            params = params.append(`ingredients[]`, idIngredient.toString());\n        })\n        return this.http.get<any>(`/server/ingredient/rest`, { params: params })\n            .pipe(map((data: IngredientDetails[]) => {\n                console.log(data)\n                return data\n            }))\n    }\n\n    public addCommentaire(commentaire: CommentaireDetails): any {\n        this.http.post<any>(`/server/commentaires/add`, commentaire)\n            .subscribe((data: any) => {\n                return data\n            })\n    }\n\n    public modifyCommentaire(commentaire: CommentaireDetails): any {\n        this.http.post<any>(`/server/commentaires/update`, commentaire)\n            .subscribe((data: any) => {\n                return data\n            })\n    }\n\n    public getCommentaireRecipe(id: any): Observable<any> {\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\n        return this.http.get<any>(`/server/recipe/${id}/commentaires`)\n            .pipe(map((data: any) => {\n                console.log(data)\n                data.forEach(element => {\n                    var d = new Date(element.dateCommentaire)\n\n                    element.dateCommentaire = d.toLocaleString('FR-fr', options)\n\n                    this.auth.getUser(element.ecritPar).subscribe(data => {\n                        element.admin = data.admin\n                    })\n                    let element2 = element\n                    let bool = true\n\n                    while(bool) {\n                        this.getReponseCommentaireRecipe(id, element.idCommentaire).subscribe(commentaire => {\n                            element.children = commentaire\n                        })\n                        if(element2.children) {\n                            element2 = element2.children\n                        } else {\n                            bool = false\n                        }\n                        \n                    }\n                });\n                console.log(data)\n                return data\n            }))\n    }\n\n    public getReponseCommentaireRecipe(id: any, idCommentaire: any): Observable<any> {\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\n        return this.http.get<any>(`/server/recipe/${id}/commentaires/reponse/${idCommentaire}`)\n            .pipe(map((commentaire: any) => {\n                commentaire.forEach(element => {\n                    var d = new Date(element.dateCommentaire)\n\n                    element.dateCommentaire = d.toLocaleString('FR-fr', options)\n\n                    this.auth.getUser(element.ecritPar).subscribe(data => {\n                        element.admin = data.admin\n                    })\n                    this.getReponseCommentaireRecipe(id, element.idCommentaire).subscribe(commentaire => {\n                        element.children = commentaire\n                    })\n                });\n                return commentaire\n            }))\n    }\n\n\n    public deleteCommentaire(id: any): Observable<any> {\n        const url = `/server/commentaire/${id}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public getCommentaireUser(pseudo: any): Observable<any> {\n        return this.http.get<any>(`/server/${pseudo}/mescommentaires`)\n            .pipe(map((data: any) => {\n                return data\n            }))\n    }\n\n    public addImageToRecipe(imageToModify: any): any {\n        this.http.post<any>(`/server/recipe/update/image`, imageToModify)\n            .subscribe((data: any) => {\n                console.log(data)\n                return data\n            })\n    }\n\n    public getMenu(): Observable<any> {\n        return this.http.get<any>('/server/menu/recipe')\n            .pipe(map((data: any) => {\n                return data\n            }))\n    }\n\n    public getPetitDej(): Observable<any> {\n        return this.http.get<any>('/server/menu/petitDej')\n            .pipe(map((element: any) => {\n                this.http.get(`/server/image/${element[0].idRecette}`).subscribe((data: any) => {\n                    element[0].lienImage = data[0]?.lienImage\n                })\n                this.getCategoryByRecette(element[0].idRecette).subscribe((data: any) => {\n                    element[0].categories = data\n                })\n                return element[0]\n            }))\n    }\n\n    public getRepas(): Observable<any> {\n        return this.http.get<any>('/server/menu/repas')\n            .pipe(map((element: any) => {\n                this.http.get(`/server/image/${element[0].idRecette}`).subscribe((data: any) => {\n                    element[0].lienImage = data[0]?.lienImage\n                })\n                this.getCategoryByRecette(element[0].idRecette).subscribe((data: any) => {\n                    element[0].categories = data\n                })\n                return element[0]\n            }))\n    }\n\n    public getDouceur(): Observable<any> {\n        return this.http.get<any>('/server/menu/douceur')\n            .pipe(map((element: any) => {\n                this.http.get(`/server/image/${element[0].idRecette}`).subscribe((data: any) => {\n                    element[0].lienImage = data[0]?.lienImage\n                })\n                this.getCategoryByRecette(element[0].idRecette).subscribe((data: any) => {\n                    element[0].categories = data\n                })\n                return element[0]\n            }))\n    }\n\n}    ","export function roundDecimal(nombre, precision){\n    var precision = precision || 2;\n    var tmp = Math.pow(10, precision);\n    return Math.round( nombre*tmp )/tmp;\n}\n\nexport function addTimes(startTime, endTime) {\n    var times = [0, 0, 0]\n    var max = times.length\n\n    var a = (startTime || '').split(':')\n    var b = (endTime || '').split(':')\n\n    // normalize time values\n    for (var i = 0; i < max; i++) {\n        a[i] = isNaN(parseInt(a[i])) ? 0 : parseInt(a[i])\n        b[i] = isNaN(parseInt(b[i])) ? 0 : parseInt(b[i])\n    }\n\n    // store time values\n    for (var i = 0; i < max; i++) {\n        times[i] = a[i] + b[i]\n    }\n\n    var hours = times[0]\n    var minutes = times[1]\n    var seconds = times[2]\n\n    if (seconds >= 60) {\n        var m = (seconds / 60) << 0\n        minutes += m\n        seconds -= 60 * m\n    }\n\n    if (minutes >= 60) {\n        var h = (minutes / 60) << 0\n        hours += h\n        minutes -= 60 * h\n    }\n\n    return ('0' + hours).slice(-2) + ':' + ('0' + minutes).slice(-2) + ':' + ('0' + seconds).slice(-2)\n}\n\nexport function addHours(time) {\n    let dateTime = new Date();\n    let temps = time.toString().split(':');\n    dateTime.setHours(parseInt(temps[0]));\n    dateTime.setMinutes(parseInt(temps[1]));\n    dateTime.setSeconds(parseInt(temps[2]));\n    if (dateTime.getHours() > 1) {\n        if (dateTime.getMinutes() > 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString() + \" s\"\n            }\n        } else if (dateTime.getMinutes() == 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min\"\n            }\n        } else {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes.toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h\"\n            }\n        }\n    } else if (dateTime.getHours() == 1) {\n        if (dateTime.getMinutes() > 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString() + \" s\"\n            }\n        } else if (dateTime.getMinutes() == 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min et \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min\"\n            }\n        } else {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h\"\n            }\n        }\n    } else {\n        if (dateTime.getMinutes() > 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString()\n            } else {\n                return dateTime.getMinutes().toString() + \" min\"\n            }\n        } else if (dateTime.getMinutes() == 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString()\n            } else {\n                return dateTime.getMinutes().toString() + \" min\"\n            }\n        } else {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return null\n            }\n        }\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { RecettesService, RecipeDetails, Menu } from 'src/app/service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http'\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.scss']\n})\nexport class AccueilComponent implements OnInit {\n\n  public mostPopularRecipes: RecipeDetails[]\n  public latestRecipes: RecipeDetails[]\n\n  public menu: Menu = {\n    petitDej : null,\n    repas : null,\n    douceur : null\n  }\n\n  public petitDej: RecipeDetails = null\n  public repas: RecipeDetails = null\n  public douceur: RecipeDetails = null\n\n  constructor(private recetteService: RecettesService, private router: Router) {\n    this.getMostPopularRecipes()\n    this.getLatestReceipes()\n\n    this.recetteService.getPetitDej().subscribe(data => {\n      this.petitDej = data\n    })\n\n    this.recetteService.getRepas().subscribe(data => {\n      this.repas = data\n    })\n\n    this.recetteService.getDouceur().subscribe(data => {\n      this.douceur = data\n    })\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n  getMenu() {\n\n    this.recetteService.getMenu().subscribe(\n      (menu: any) => {\n        menu.forEach(element => {\n          if (element.idMenu == 1) {\n            this.menu.petitDej = element\n          }\n          else if (element.idMenu == 2) {\n            this.menu.repas = element\n          }\n          else if (element.idMenu == 3) {\n            this.menu.douceur = element\n          }\n        });\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Il n'y a pas encore de recettes.\")\n          }\n        }\n      })\n  }\n\n  getMostPopularRecipes() {\n\n    this.recetteService.getMostPopularRecipes().subscribe(\n      (mostPopularRecipes: RecipeDetails[]) => {\n        this.mostPopularRecipes = mostPopularRecipes\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Il n'y a pas encore de recettes.\")\n          }\n        }\n      })\n  }\n\n  getLatestReceipes() {\n\n    this.recetteService.getLatestReceipes().subscribe(\n      (latestRecipes: RecipeDetails[]) => {\n        this.latestRecipes = latestRecipes\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Il n'y a pas encore de recettes.\")\n          }\n        }\n      })\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload()\n        })\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Cette recette n'existe pas !\")\n          }\n        }\n      })\n  }\n\n}\n","<script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\"\n    integrity=\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\"\n    crossorigin=\"anonymous\"></script>\n<script>window.jQuery || document.write('<script src=\"/docs/4.4/assets/js/vendor/jquery.slim.min.js\"><\\/script>')</script>\n<script src=\"/docs/4.4/dist/js/bootstrap.bundle.min.js\"\n    integrity=\"sha384-6khuMg9gaYr5AxOqhkVIODVIvm9ynTT5J4V1cfthmT+emCG6yVmEZsRHdxlotUnm\"\n    crossorigin=\"anonymous\"></script>\n\n<main role=\"main\">\n\n    <div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\n        <ol class=\"carousel-indicators\">\n            <li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>\n            <li data-target=\"#myCarousel\" data-slide-to=\"1\" class=\"\"></li>\n            <li data-target=\"#myCarousel\" data-slide-to=\"2\" class=\"\"></li>\n        </ol>\n        <div class=\"carousel-inner\">\n            <div class=\"carousel-item\" *ngFor=\"let recette of this.latestRecipes;let index = index;let isFirst = first\"\n                [ngClass]=\"{active:isFirst}\"\n                [ngStyle]=\"{'background-image': 'url(&quot;' + recette.lienImage + '&quot;)'}\">\n                <img class=\"bd-placeholder-img\" width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMidYMid slice\"\n                    focusable=\"false\" role=\"img\">\n                <div class=\"container\">\n                    <div class=\"carousel-caption\">\n                        <ul class=\"post-categories\">\n                            <li *ngFor=\"let category of recette.categories\"><a\n                                    rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                        </ul>\n                        <h1>{{recette.nomRecette}}</h1>\n                        <div class=\"post-more\">\n                            <a (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\"\n                                class=\"btn btn-primary btn-effect\">\n                                <span>Voir...</span>\n                                <span><i class=\"fa fa-long-arrow-right\"></i></span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--<div class=\"carousel-item\">\n                <svg class=\"bd-placeholder-img\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\n                    preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n                    <rect width=\"100%\" height=\"100%\" fill=\"#777\"></rect>\n                </svg>\n                <div class=\"container\">\n                    <div class=\"carousel-caption\">\n                        <h1>Another example headline.</h1>\n                        <p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta\n                            gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n                        <p><a class=\"btn btn-lg btn-primary\" href=\"#\" role=\"button\">Learn more</a></p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"carousel-item\">\n                <svg class=\"bd-placeholder-img\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\n                    preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n                    <rect width=\"100%\" height=\"100%\" fill=\"#777\"></rect>\n                </svg>\n                <div class=\"container\">\n                    <div class=\"carousel-caption text-right\">\n                        <h1>One more for good measure.</h1>\n                        <p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta\n                            gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n                        <p><a class=\"btn btn-lg btn-primary\" href=\"#\" role=\"button\">Browse gallery</a></p>\n                    </div>\n                </div>\n            </div>-->\n        </div>\n        <a class=\"carousel-control-prev\" href=\"#myCarousel\" role=\"button\" data-slide=\"prev\">\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Previous</span>\n        </a>\n        <a class=\"carousel-control-next\" href=\"#myCarousel\" role=\"button\" data-slide=\"next\">\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Next</span>\n        </a>\n    </div>\n\n\n    <!-- Marketing messaging and featurettes\n    ================================================== -->\n    <!-- Wrap the rest of the page in another container to center all the content. -->\n\n    <h4 class=\"title-trending\">Les plus vues</h4>\n\n    <div class=\"container marketing\">\n\n        <!-- Three columns of text below the carousel -->\n        <div class=\"row\">\n            <div class=\"col-lg-4\" *ngFor=\"let recette of this.mostPopularRecipes\">\n                <div id=\"imgSize\">\n                    <div class=\"box\">\n                        <img id=\"imgCard\" class=\"bd-placeholder-img\" width=\"180\" height=\"auto\"\n                            src=\"{{recette.lienImage}}\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\"\n                            role=\"img\">\n                    </div>\n                </div>\n                <ul class=\"post-categories2\">\n                    <li *ngFor=\"let category of recette.categories\"><a\n                            rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                </ul>\n                <h2 id=\"cardTitle\">{{recette.nomRecette}}</h2>\n                <div id=\"container\">\n                    <div class=\"centre\">\n                        {{recette.mot}}\n                    </div><!-- centre -->\n                </div>\n                <p><a (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\"\n                        class=\"btn btn-primary btn-effect\">\n                        <span>Voir »</span>\n                        <span><i class=\"fa fa-long-arrow-right\"></i></span>\n                    </a></p>\n            </div><!-- /.col-lg-4 -->\n        </div><!-- /.row -->\n\n\n        <!-- START THE FEATURETTES -->\n\n        <hr class=\"featurette-divider\">\n\n        <h4 class=\"title-trending\">Suggestions du moment</h4>\n\n        <div class=\"row featurette\" *ngIf=\"petitDej\">\n            <div class=\"col-md-8\">\n                <h2 class=\"featurette-heading\">Ma lubie du matin </h2>\n                <h3 class=\"featurette-heading text-muted\">{{petitDej.nomRecette}}</h3>\n                <p class=\"lead\">{{petitDej.mot}}</p>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"box\">\n                    <ul class=\"post-categories2\">\n                        <li *ngFor=\"let category of petitDej.categories\"><a\n                                rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                    </ul>\n                    <img class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\" width=\"500\"\n                        height=\"500\" preserveAspectRatio=\"xMidYMid slice\" src={{petitDej.lienImage}} focusable=\"false\"\n                        role=\"img\">\n                </div>\n            </div>\n        </div>\n\n        <hr class=\"featurette-divider\">\n\n        <div class=\"row featurette\" *ngIf=\"repas\">\n            <div class=\"col-md-8 order-md-2\">\n                <h2 class=\"featurette-heading\">Mon plat préféré </h2>\n                <h3 class=\"featurette-heading text-muted\">{{repas.nomRecette}}</h3>\n                <p class=\"lead\">{{repas.mot}}</p>\n            </div>\n            <div class=\"col-md-4 order-md-1\">\n                <div class=\"box\">\n                    <ul class=\"post-categories2\">\n                        <li *ngFor=\"let category of repas.categories\"><a\n                                rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                    </ul>\n                    <img class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\" width=\"500\"\n                        height=\"500\" preserveAspectRatio=\"xMidYMid slice\" src={{repas.lienImage}} focusable=\"false\"\n                        role=\"img\">\n                </div>\n            </div>\n        </div>\n\n        <hr class=\"featurette-divider\">\n\n        <div class=\"row featurette\" *ngIf=\"douceur\">\n            <div class=\"col-md-8\">\n                <h2 class=\"featurette-heading\">Ma douceur du moment </h2>\n                <h3 class=\"featurette-heading text-muted\">{{douceur.nomRecette}}</h3>\n                <p class=\"lead\">{{douceur.mot}}</p>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"box\">\n                    <ul class=\"post-categories2\">\n                        <li *ngFor=\"let category of douceur.categories\"><a\n                                rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                    </ul>\n                    <img class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\" width=\"500\"\n                        height=\"500\" preserveAspectRatio=\"xMidYMid slice\" src={{douceur.lienImage}} focusable=\"false\"\n                        role=\"img\">\n                </div>\n            </div>\n        </div>\n\n        <hr class=\"featurette-divider\">\n\n        <!-- /END THE FEATURETTES -->\n\n    </div><!-- /.container -->\n</main>","import { Component, OnInit } from '@angular/core';\nimport { CategoryDetails, IngredientDetails, UniteDetails, RecettesService, UserDetails, AuthentificationService } from '../../service';\nimport { FormGroup, FormArray, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'; //la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Time } from '@angular/common';\n\n@Component({\n  selector: 'app-ajout-recette',\n  templateUrl: './ajout-recette.component.html',\n  styleUrls: ['./ajout-recette.component.scss']\n})\nexport class AjoutRecetteComponent implements OnInit {\n\n  images;\n\n\n  recipe: CreateRecipe = {\n    idRecette: null,\n    nomRecette: '',\n    categories: null,\n    ingredients: null,\n    idImage: null,\n    etapes: '',\n    nbrePart: null,\n    libellePart: '',\n    tempsPreparation: null,\n    tempsCuisson: null,\n    astuce: ''\n  }\n\n  public ingredients: IngredientDetails[]\n  public unites: UniteDetails[]\n  public categories: CategoryDetails[]\n\n  public recipeForm: FormGroup\n  public newIngredientForm: FormGroup\n  public ingredientForm: FormGroup\n  public ingredient: FormArray\n  public selectIngredient: number[] = []\n  private listAbonneNews$: Observable<UserDetails[]>\n\n  public newIngredient: IngredientDetails = {\n    nomIngredient: ''\n  }\n\n  //pour multiple select\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings: IDropdownSettings;\n  fileToUpload: File = null;\n\n  constructor(private recetteService: RecettesService, private formBuilder: FormBuilder, private router: Router, private modalService: NgbModal,\n    private http: HttpClient, private auth: AuthentificationService) { }\n\n  ngOnInit(): void {\n    //on récupère tous les ingrédients, unités, catégories pour les réponses possibles à notre formulaire\n    this.recetteService.getAllIngredients().subscribe(\n      ingredients => {\n        ingredients.forEach(element => {\n          element.disabled = false\n        })\n        this.ingredients = ingredients\n      }\n    )\n\n    this.recetteService.getAllUnite().subscribe(\n      unites => {\n        this.unites = unites\n      }\n    )\n\n    this.recetteService.getAllCategory().subscribe(\n      categories => {\n        this.categories = categories\n      }\n    )\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'idCategorie',\n      textField: 'libelleCategorie',\n      enableCheckAll: false,\n      itemsShowLimit: 3,\n      allowSearchFilter: true,\n      searchPlaceholderText: \"Rechercher\"\n    };\n\n    this.initRecipeForm()\n\n    this.createIngredientsForm()\n\n    this.onChanges()\n\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.images = file;\n    }\n  }\n\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('file', this.images);\n\n    this.http.post<any>('/server/uploads', formData).subscribe(\n      (res) => console.log(res),\n      (err) => console.log(err)\n    );\n  }\n\n  onFileChange(file: any) {\n\n    console.log(file)\n\n    var reader = new FileReader();\n    var dataURL;\n    reader.onload = function () {\n      dataURL = reader.result;\n    };\n\n    const fileMetaData = {\n      originalname: file[0].name,\n      type: file[0].type,\n      buffer: file[0]\n    }\n    this.recetteService.addImage(fileMetaData).subscribe(data => {\n      this.recipe.idImage = data[0]\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  uploadFileToActivity() {\n    this.recetteService.addImage(this.fileToUpload).subscribe(data => {\n      // do something, if upload success\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  createRecipe() {\n\n    const formValue = this.recipeForm.value;\n    const ingredientFormValue = this.ingredientForm.value;\n    const formData = new FormData();\n    formData.append('file', this.images);\n\n    if (formValue.etapes == '' && formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins une catégorie de la recette et le champ de la Préparation.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, et sélectionner au moins une catégorie.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ de la préparation, et sélectionner au moins une catégorie.\");\n      return;\n    }\n\n    else if (this.selectedItems.length == 0) {\n      alert(\"Vous devez choisir au moins une catégorie pour votre recette.\");\n      return;\n    }\n\n    else if (formValue.etapes == '') {\n      alert(\"Vous devez choisir le champ de la préparation.\");\n      return;\n    }\n\n    else if (formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient.forEach(element => {\n      if (element.qte <= 0) {\n        alert(\"Il faut une quantité positive pour l'ingrédient.\");\n        return;\n      }\n    }))\n\n    console.log(ingredientFormValue.ingredient)\n    this.recipe.ingredients = ingredientFormValue.ingredient //je récupère les info sur l'ingrédient\n\n    this.recipe.categories = this.selectedItems\n    this.recipe.nomRecette = formValue.nomRecette\n    this.recipe.etapes = formValue.etapes\n    this.recipe.nbrePart = formValue.nbrePart\n    this.recipe.libellePart = formValue.libellePart\n    this.recipe.tempsPreparation = formValue.tempsPreparation\n    this.recipe.tempsCuisson = formValue.tempsCuisson\n    this.recipe.astuce = formValue.astuce\n    this.recetteService.addImage(formData).subscribe(res => {\n      this.recipe.idImage = res[0]\n      this.recetteService.createRecipe(this.recipe).subscribe(res => {\n        this.recipe.idRecette = res[0] // je récupère l'id de la recette que je viens de créer\n        console.log(this.recipe)\n        this.recetteService.addIngredientsAndCategoryToNewRecipe(this.recipe).subscribe(res => {\n          this.listAbonneNews$ = this.auth.getAbonneNews()\n          this.listAbonneNews$.subscribe(res => {\n            res.forEach(element => {\n              this.auth.sentEmailToNewRecipe(element, this.recipe.idRecette).subscribe()\n            });\n          });\n        })\n      })\n\n\n      this.router.navigateByUrl('handleRecipes')\n    })\n  }\n\n  initRecipeForm() {\n    this.recipeForm = this.formBuilder.group({\n      nomRecette: ['', Validators.required, Validators.max(45)],\n      categories: ['', Validators.required],\n      ingredients: [''],\n      etapes: ['', Validators.required],\n      nbrePart: ['', Validators.required],\n      libellePart: ['', Validators.required],\n      tempsPreparation: ['', Validators.required],\n      tempsCuisson: ['', Validators.required],\n      astuce: ['', Validators.required]\n    });\n  }\n\n  /******  création formulaire pour ajouter autant de lignes ingrédient (qté, nom, unite) qu'on veut *****/\n  //création initiale formulaire ingredients\n  createIngredientsForm(): FormGroup {\n    return this.ingredientForm = this.formBuilder.group({\n      ingredient: this.formBuilder.array([this.createIngredientForm()])\n    })\n  }\n\n  createIngredientForm(): FormGroup {\n    return this.formBuilder.group({\n      idIngredient: new FormControl({\n        value: '',\n        disabled: false\n      },\n        Validators.compose([Validators.required])),\n      nomIngredient: new FormControl({\n        value: '',\n        disabled: false\n      }),\n      qte: new FormControl({\n        value: '',\n        disabled: false\n      },\n        Validators.compose([Validators.required, Validators.min(0)])),\n      idUnite: new FormControl({\n        value: '',\n        default: ' ',\n        disabled: false\n      })\n    });\n  }\n\n  onChanges(): void {\n    this.ingredientForm.valueChanges.subscribe(val => {\n      //this.selectIngredient = []\n      this.ingredients.forEach(ingredient => {\n        ingredient.disabled = false\n      })\n      this.ingredients.forEach(ingredient => {\n        val.ingredient.forEach(element => {\n          if (element.nomIngredient != '') {\n            if (ingredient.nomIngredient == element.nomIngredient) {\n              ingredient.disabled = true\n              element.idIngredient = ingredient.idIngredient\n            }\n            //this.selectIngredient.push(element.idIngredient)\n          }\n          \n        })\n      })\n    })\n  }\n\n  get formData() { return this.ingredientForm.get('ingredient'); }\n\n  //pour ajouter un ingrédient\n  addIngredient(): void {\n    this.ingredient = this.ingredientForm.get('ingredient') as FormArray;\n    this.ingredient.push(this.createIngredientForm());\n  }\n  /*****************************/\n\n  //récupérer le nom du new ingrédient et l'enregistrer dans la bd\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.nomIngredient = result\n        this.recetteService.addIngredient(this.newIngredient)\n        setTimeout(() => {\n          this.recetteService.getAllIngredients().subscribe(\n            ingredients => {\n              this.ingredients = ingredients\n            }\n          )\n        }, 1000);\n      })\n  }\n\n}\n\nexport interface CreateRecipe {\n  idRecette?: number\n  nomRecette?: string\n  categories?: any[]\n  ingredients?: any[]\n  idImage?: File\n  etapes?: string\n  nbrePart?: number\n  libellePart?: string\n  tempsPreparation?: Time\n  tempsCuisson?: Time\n  astuce?: string\n}","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n\n        <div class=\"text-center\">\n            <h1>Ajout d'une nouvelle recette</h1>\n        </div>\n\n        <form [formGroup]=\"recipeForm\" (ngSubmit)=\"createRecipe()\">\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n                    <td>\n                        <label>Nom de la recette</label>\n                    </td>\n                    <td id=\"nomRecette\" style=\"vertical-align:middle;\">\n                        <input type=\"text\" formControlName=\"nomRecette\" class=\"form-control\" required>\n                    </td>\n\n                </tr>\n            </table>\n            <table class=\"table col-md-8 mx-auto\">\n                <tr>\n                    <td>\n                        <form>\n                            <div id=\"image\">\n                                <input type=\"file\" name=\"file\" id=\"file\" class=\"inputfile\" name=\"image\"\n                                    (change)=\"selectImage($event)\" />\n                                <label id=\"positionImage\" for=\"file\">Choisir une image</label>\n                            </div>\n                            <br>\n                        </form>\n                    </td>\n\n                </tr>\n\n            </table>\n\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr class=\"table col-md-8 mx-auto\">\n                    <td>\n                        <label>Catégorie</label>\n                    </td>\n                    <td>\n                        <form>\n                            <div id=\"ingrForm\" class=\"form-row\" style=\"justify-content: center;\">\n\n                                <ng-multiselect-dropdown [data]=\"categories\" placeholder=\"sélectionner\"\n                                    [settings]=\"dropdownSettings\" [(ngModel)]=\"selectedItems\"\n                                    [ngModelOptions]=\"{standalone: true}\">\n                                </ng-multiselect-dropdown>\n\n                            </div>\n                        </form>\n                    </td>\n                    <td>\n                        <div class=\"invalid-tooltip\">\n                            Selectionnez une catégorie.\n                        </div>\n                    </td>\n                </tr>\n\n            </table>\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n                    <td>\n                        <label>Nombre de parts</label>\n\n\n                        <input type=\"number\" class=\"form-control\" formControlName=\"nbrePart\" required>\n\n\n                        <div class=\"invalid-tooltip\">\n                            Rentrez une quantité correcte.\n                            <!--Vérifier que c'est pas négatif ou nulle-->\n\n                        </div>\n                    </td>\n\n                    <td>\n                        <label>Libellé des parts</label>\n\n                        <input type=\"text\" class=\"form-control\" formControlName=\"libellePart\" required>\n\n                        <div class=\"invalid-tooltip\">\n                            Rentrez une quantité correcte.\n                            <!--Vérifier que c'est pas négatif ou nulle-->\n                        </div>\n                    </td>\n\n\n                </tr>\n\n            </table>\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <ul>\n\n                    <form [formGroup]=\"ingredientForm\">\n                        <!--formulaire ingrédients-->\n\n                        <div formArrayName=\"ingredient\">\n                            <div *ngFor=\"let ing of formData['controls']; let idx = index\" [formGroupName]=\"idx\"\n                                class=\"ingredient\">\n                                <!--idx = indexe d'une ligne ingrédient du formulaire-->\n                                <tr>\n                                    <td id=\"nomIng\">\n\n\n\n                                        <label for=\"validationTooltip04\">Ingrédient</label>\n                                        <input id=\"validationTooltip04\" list=\"brow\" formControlName=\"nomIngredient\" >\n                                        <datalist id=\"brow\">\n                                            <option *ngFor=\"let ingredient of ingredients\"\n                                                [ngValue]=\"ingredient.nomIngredient\" [disabled]=\"ingredient.disabled\">\n                                                {{ingredient.nomIngredient}}</option>\n                                        </datalist>\n                                        <!--<ng-select class=\"custom\" [items]=\"ingredients\" bindLabel=\"nomIngredient\" class=\"custom-select\" id=\"validationTooltip04\"\n                                                    bindValue=\"idIngredient\" formControlName=\"idIngredient\"\n                                                        role=\"listbox\" ng-reflect-bind-label=\"nomIngredient\" ng-reflect-bind-value=\"idIngredient\">\n                                                    </ng-select>-->\n\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez un ingrédient.\n                                        </div>\n                                    </td>\n                                    <td id=\"qteIng\">\n\n                                        <label for=\"validationTooltip05\">Quantité</label>\n                                        <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\"\n                                            formControlName=\"qte\" required>\n                                        <div class=\"invalid-tooltip\">\n                                            Rentrez une quantité correcte.\n                                            <!--Vérifier que c'est pas négatif ou nulle-->\n                                        </div>\n\n                                    </td>\n\n                                    <td id=\"nomIng\">\n\n                                        <label for=\"validationTooltip04\">Unité</label>\n                                        <select class=\"custom-select\" id=\"validationTooltip04\" formControlName=\"idUnite\"\n                                            required>\n                                            <option *ngFor=\"let unite of unites\" [ngValue]=\"unite.idUnite\">\n                                                {{unite.libelleUnite}}\n                                            </option>\n                                        </select>\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez une unité.\n                                        </div>\n\n                                    </td>\n                                </tr>\n                            </div>\n                        </div>\n\n                        <div style=\"text-align: -webkit-center;\">\n                            <tr id=\"buttonIngredient\">\n                                <td>\n                                    \n                                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"addIngredient()\">Ajouter un\n                                            nouvel\n                                            ingrédient</button>\n                                        \n                                </td>\n    \n                                <ng-template #content let-modal>\n                                    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                                    <div class=\"modal-header\">\n                                        <h4 class=\"modal-title\"></h4>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        <form>\n                                            <div class=\"form-group\">\n                                                <label for=\"nomIngredient\"> Nom de l'ingrédient </label>\n                                                <div class=\"input-group\">\n                                                    <input id=\"nomIngredient\" class=\"form-control\" placeholder=\"Cacahuète\"\n                                                        #nomIngredient=\"ngModel\" [(ngModel)]=\"newIngredient.nomIngredient\"\n                                                        [ngModelOptions]=\"{standalone: true}\">\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button type=\"button\" class=\"btn btn-outline-dark\"\n                                            (click)=\"modal.close(newIngredient.nomIngredient)\">Ajouter</button>\n                                    </div>\n                                </ng-template>\n                                <td>\n                                    <button class=\"btn btn-primary\" (click)=\"open(content)\">Créer un nouvel\n                                        ingrédient</button>\n                                    <!--on appelle le modal-->\n    \n                                </td>\n                            </tr>\n                        </div>\n                        \n                    </form>\n                    <!--fin du formulaire ingrédients-->\n\n                </ul>\n\n            </table>\n\n\n\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n\n                    <div id=\"ingrForm\" class=\"form-row\">\n                        <td>\n                            <label>Temps de préparation</label>\n                            <input type=\"time\" class=\"form-control\" formControlName=\"tempsPreparation\" step=\"2\"\n                                required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n                        <td>\n                            <label>Temps de cuisson</label>\n                            <input type=\"time\" class=\"form-control\" formControlName=\"tempsCuisson\" step=\"2\" required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n                    </div>\n                </tr>\n\n            </table>\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n                    <td>\n                        <label>Préparation</label>\n\n                        <textarea class=\"form-control\" formControlName=\"etapes\" id=\"exampleFormControlTextarea1\"\n                            rows=\"8\" required></textarea>\n                    </td>\n                </tr>\n\n                <tr>\n                    <td>\n                        <label>Astuces</label>\n\n                        <textarea class=\"form-control\" formControlName=\"astuce\" id=\"exampleFormControlTextarea1\"\n                            rows=\"8\" required></textarea>\n                    </td>\n                </tr>\n\n            </table>\n\n\n\n\n            <div class=\"col text-center\">\n                <button id=\"validateButton\" type=\"submit\" class=\"col-ld-6 btn btn-primary\">Valider</button>\n            </div>\n        </form>\n\n\n        <script>\n            $(document).ready(function () {\n                $('select').formSelect();\n                $('select.select_all').siblings('ul').prepend('<li id=sm_select_all><span>Select All</span></li>');\n                $('li#sm_select_all').on('click', function () {\n                    var jq_elem = $(this),\n                        jq_elem_span = jq_elem.find('span'),\n                        select_all = jq_elem_span.text() == 'Select All',\n                        set_text = select_all ? 'Select None' : 'Select All';\n                    jq_elem_span.text(set_text);\n                    jq_elem.siblings('li').filter(function () {\n                        return $(this).find('input').prop('checked') != select_all;\n                    }).click();\n                });\n            })\n        </script>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-apropos',\n  templateUrl: './apropos.component.html',\n  styleUrls: ['./apropos.component.css']\n})\nexport class AProposComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"mt-5\">A propos</h1>\n<div id=\"conteneur\">\n  <div class=\"element 1 mb-3 col-lg-6 col-md-6 col-sm-6 p-3\">\n    <img src=\"../../assets/img/me.jpeg\" class=\"img-fluid\" width=\"auto\" height=\"auto\" alt=\"photo de l'auteur du site.\">\n  </div>\n  <div class=\"element 2 mb-3 col-lg-6 col-md-6 col-sm-6\">\n    <div id=\"conteneur1\">\n      <p id=\"c1\" class=\"mb-0\">\n        <ul>\n          <li> Je m'appelle Marine.</li>\n          <li> J'ai 21 printemps, et j'étudie dans une école d'ingénieur. </li>\n          <li> Depuis mon plus jeune âge, j'adore cuisiner. </li>\n          <li>J'ai créé ce site afin de partager les recettes que j'aime réaliser au quotidien.</li>\n        </ul>\n    \n      <p id=\"c2\" class=\"mb-0\">\n        <ul>\n          <li> Vous avez accès à toutes les recettes sans être connecté !</li>\n       <li>Créer un compte vous permettra de mettre des recettes en favoris et de les retrouver plus facilement.\n        Vous pourrez aussi créer une liste de course directement à partir des recettes.\n        Si vous le souhaitez, des notifications par mail peuvent vous avertir de l'arrivée d'une nouvelle recette afin\n        de ne rien rater.</li>\n      </ul>\n      \n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CategoryDetails, RecettesService} from '../../service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n  public categories: CategoryDetails[] \n\n  public categorie: CategoryDetails = {\n    idCategorie: null,\n    libelleCategorie: ''\n  }\n   \n\n  constructor(private recettesService: RecettesService, private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.recettesService.getAllCategory().subscribe(\n      categories => {\n        \n        this.categories = categories\n        console.log(this.categories)\n      }\n    )\n  }\n\n  deleteCategory(idCategorie: any) {\n    this.recettesService.deleteCategory(idCategorie)\n      .subscribe(res => {\n        this.router.navigate(['/category'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateCategory(categorie: CategoryDetails){\n    this.recettesService.updateCategory(categorie).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addCategory(){\n    this.recettesService.addCategory(this.categorie)\n    window.location.reload()\n  }\n}\n\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside id=\"aside\" class=\"sidebar is-visible\">\n                    <div class=”sidebar-content”>\n                        <ul>\n                            <li><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li class=\"active\"><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li><a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a></li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n                            <h1>Catégories</h1>\n                        </div>\n                        \n                        <div class='flex-container'>\n\n                            <div id=\"addCat\">\n                                <h6 id=\"question\"> Ajouter une nouvelle catégorie </h6>\n                                <form (submit)=\"addCategory()\">\n                                    <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\" placeholder=\"nom catégorie\" [(ngModel)]=\"categorie.libelleCategorie\">\n                                    <button id=\"btn\" class=\"btn btn-outline-info \" type=\"submit \">Valider</button>\n                        \n                                </form>\n                            </div>\n\n                            <div>\n                                <table class=\"table col-md-12 mx-auto\">\n                        \n                                    <tr *ngFor=\"let categorie of categories\">\n                                        <td>\n                                            <form (submit)=\"updateCategory(categorie)\">\n                                                <div class=\"form-row align-items-center\">\n                                                    <div class=\"col-auto\">\n                                                        <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\" value={{categorie.libelleCategorie}} [(ngModel)]=\"categorie.libelleCategorie\">\n                                                    </div>\n                                                    <div class=\"col-auto\">\n                                                        <button id=\"btn\" class=\"btn btn-sm btn-warning\" type=\"submit\"><i class=\"fa fa-pencil\" ></i></button>\n                                                    </div>\n                                                    <div class=\"col-auto\">\n                                                        <button id=\"btn\" type=\"submit\" class=\"btn btn-sm btn-danger\" (click)=\"deleteCategory(categorie.idCategorie)\"><i class=\" fa fa-trash \"></i></button>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                            \n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  contactForm: FormGroup;\n\n  contactSend: ContactDetail = {\n    nameUser: '',\n    emailUser: '',\n    subject: '',\n    message: ''\n  }\n\n  constructor(private formBuilder: FormBuilder, private auth: AuthentificationService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.initContactForm()\n  }\n\n  initContactForm() : FormGroup {\n    if(this.auth.isLoggedIn()) {\n      const emailUser = this.auth.getUserDetails().email\n      return this.contactForm = this.formBuilder.group({\n        nameUser: ['', Validators.required],\n        email: [emailUser, [Validators.required, Validators.email]],\n        subject: ['', Validators.required],\n        message: ['', Validators.required]\n      });\n    } else {\n      return this.contactForm = this.formBuilder.group({\n        nameUser: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        subject: ['', Validators.required],\n        message: ['', Validators.required]\n      });\n    }\n    \n  }\n\n  sendEmail() {\n\n    const formValue = this.contactForm.value;\n\n    this.contactSend.nameUser = formValue.nameUser\n    this.contactSend.emailUser = formValue.email\n    this.contactSend.subject = formValue.subject\n    this.contactSend.message = formValue.message\n\n    this.auth.sendEmailContact(this.contactSend).subscribe(\n      this.router.navigate([''])\n    );\n\n  }\n\n}\n\nexport interface ContactDetail {\n  nameUser: string\n  emailUser: string\n  subject: string\n  message: string\n}","\n\n\n    <section class=\"contact pt-100 pb-100\" id=\"contact\">\n         <div class=\"container\">\n            <div class=\"row\">\n               <div class=\"col-xl-6 mx-auto text-center\">\n                  <div class=\"section-title mb-100\">\n                     <p>une question, une suggestion .. ?</p>\n                     <h4>contactez moi</h4>\n                  </div>\n               </div>\n            </div>\n            <div class=\"row text-center\">\n                  <div class=\"col-md-12\">\n                     <form [formGroup]=\"contactForm\" (ngSubmit)=\"sendEmail()\" data-toggle=\"validator\" role=\"form\" class=\"contact-form\">\n                        <div class=\"row\">\n                           <div class=\"col-xl-6\">\n                              <input id=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Nom\" formControlName=\"nameUser\" required>\n                           </div>\n                          \n                           \n                           <div class=\"col-xl-6\">\n                              <input id=\"to\" type=\"email\" class=\"form-control\" formControlName=\"email\"\n                              placeholder=\"nom.prenom@exemple.com\" id=\"inputEmail\"\n                              required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                              data-error=\"Bruh, that email address is invalid\">\n                           </div>\n                           <div class=\"help-block with-errors\"></div>\n                           <div class=\"col-xl-12\">\n                              <input type=\"text\" class=\"form-control\"  placeholder=\"Objet\" formControlName=\"subject\" required>\n                           </div>\n                          \n                           <div class=\"col-xl-12\">\n                              <textarea placeholder=\"message\" cols=\"30\" rows=\"10\" formControlName=\"message\" required></textarea>\n                              <input id=\"send_email\" class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"contactForm.invalid\" value = \"Envoyer\">\n                           </div>\n                        </div>\n                     </form>\n                  </div>\n                \n            </div>\n         </div>\n      </section>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Observable, combineLatest, from, Subscription } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecipeDetails, RecettesService } from '../../service';\nimport { Router } from '@angular/router';\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\n\n@Component({\n  selector: 'app-gerer-les-recettes',\n  templateUrl: './gerer-les-recettes.component.html',\n  styleUrls: ['./gerer-les-recettes.component.scss'],\n  //encapsulation: ViewEncapsulation.None\n})\nexport class GererLesRecettesComponent implements OnInit {\n\n  watcher: Subscription;\n\n  opened = true;\n  over = 'side';\n  expandHeight = '42px';\n  collapseHeight = '42px';\n  displayMode = 'flat';\n\n  public recette: RecipeDetails\n  public recettes$: Observable<RecipeDetails[]>\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recettesService: RecettesService, private router: Router, media: MediaObserver) {\n    //pour la recherche dynamique\n    this.recettes$ = this.recettesService.getAllRecipes()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n    this.watcher = media.media$.subscribe((change: MediaChange) => {\n      if (change.mqAlias === 'sm' || change.mqAlias === 'xs') {\n        this.opened = false;\n        this.over = 'over';\n      } else {\n        this.opened = true;\n        this.over = 'side';\n      }\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  deleteRecipe(idRecette: any) {\n    this.recettesService.deleteRecipe(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/handleRecipes']).then(() => {\n          window.location.reload()\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    window.location.reload() /* rafraichit la page */\n  }\n\n\n}\n\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside class=\"sidebar is-visible\">\n                    <div class=”sidebar-content”>\n                        <ul>\n                            <li class=\"active\"><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li><a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a></li>\n                            <li>\n                                <form id=\"nav\" class=\"form-inline my-2 my-lg-0\">\n                                    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\"\n                                        aria-label=\"Search\" [formControl]=\"filter\">\n                                </form>\n                            </li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2 row\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n                            <h1>Gerer les recettes</h1>\n                        </div>\n                        <div id=\"titre\">\n                            <h3>Recettes publiées</h3>\n                        </div>\n\n\n\n\n\n\n\n\n\n\n\n                        <!--<div class=\"row mb-3\" *ngFor=\"let recette of filteredRecipe$ | async\">\n                            <div class=\"col-sm-3\"></div>\n                            <div class=\"col-md-6 col-sm-6\">\n                                <div class=\"d-flex flex-row border rounded\">\n                                    <div class=\"p-0 w-25\">\n                                        <img src=\"{{recette.lienImage}}\" class=\"img-thumbnail border-0\"\n                                            alt=\"photo de la recette\" />\n\n                                    </div>\n                                    <div class=\"pl-3 pt-2 pr-2 pb-2 w-75 border-left\">\n\n                                        <h5 class=\"text\">{{recette.nomRecette}}</h5>\n                                        <ul class=\"m-0 float-left\" style=\"list-style: none; margin:0; padding: 0\">\n                                            <li><i class=\"badge badge-light\"></i>{{recette.nbFavoris}}\n                                                <svg class=\"bi bi-heart-fill\" width=\"1em\" height=\"1em\"\n                                                    viewBox=\"0 0 16 16\" fill=\"red\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path fill-rule=\"evenodd\"\n                                                        d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n                                                        clip-rule=\"evenodd\" />\n                                                </svg></li>\n                                            <li><i class=\"badge badge-light\"></i> {{recette.nbVues}} 👁</li>\n                                        </ul>\n\n                                        <button id=\"crayon\" type=\"submit\" class=\"btn btn-sm btn-warning\"\n                                            [routerLink]=\"['/updateRecipe', recette.idRecette]\"><i\n                                                class=\"fa fa-pencil\"></i></button>\n\n                                        <button id=\"poubelle\" type=\"submit\" class=\"btn btn-sm btn-danger\"\n                                            (click)=\"deleteRecipe(recette.idRecette)\"><i\n                                                class=\"fa fa-trash\"></i></button>\n\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>-->\n\n                        <div class=\"app\">\n\n                            <div class=\"recipesWrapper row\">\n                        \n                                <div class=\"recipeDiv text-center col-lg-4 col-md-6 col-sm-12 p-3\"\n                                    *ngFor=\"let recette of filteredRecipe$ | async\">\n                                    <img class=\"rounded-circle\" src=\"{{recette.lienImage}}\" />\n                                    <h3>{{recette.nomRecette}}</h3>\n\n                                    <i class=\"badge badge-light\"></i> {{recette.nbVues}} 👁\n                        \n                                    <i class=\"badge badge-light\"></i>{{recette.nbFavoris}}\n                                        <svg class=\"bi bi-heart-fill\" width=\"1em\" height=\"1em\"\n                                            viewBox=\"0 0 16 16\" fill=\"red\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fill-rule=\"evenodd\"\n                                                d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n                                                clip-rule=\"evenodd\" />\n                                        </svg>\n                                    \n                        \n                                    <div class=\"controlBtns\">\n                                        <button class=\"editBtn btn btn-warning\" [routerLink]=\"['/updateRecipe', recette.idRecette]\">\n                                            <i class=\"fa fa-pencil\" aria-hidden=\"true\">\n                                            </i>\n                                        </button>\n                        \n                                        <button class=\"deleteBtn btn btn-danger\" (click)=\"deleteRecipe(recette.idRecette)\">\n                                            <i class=\"fa fa-trash\" aria-hidden=\"true\">\n                                            </i>\n                                        </button>\n                                    </div>\n                        \n                                </div>\n                            </div>\n                        \n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { IngredientDetails, RecettesService} from '../../service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ingredients',\n  templateUrl: './ingredients.component.html',\n  styleUrls: ['./ingredients.component.scss']\n})\nexport class IngredientsComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>\n  public ingredients: IngredientDetails[]\n\n  public ingredient: IngredientDetails = {\n    idIngredient: null,\n    nomIngredient: '',\n    qte: null,\n    libelleUnite: '',\n  }\n  \n  public filteredIngredient$: Observable<IngredientDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n  \n\n  constructor(private recettesService: RecettesService, private router: Router) { \n     //pour la recherche dynamique\n     this.ingredients$ = this.recettesService.getAllIngredients()\n     this.filter = new FormControl('')\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n     this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n       .pipe(map(([ingredients, filterString]) =>\n         ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllIngredients() {\n\n    this.ingredients$ = this.recettesService.getAllIngredients()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteIngredient(idIngredient: any) {\n    this.recettesService.deleteIngredient(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/ingredient'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateIngredient(ingredient: IngredientDetails){\n    this.recettesService.updateIngredient(ingredient).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addIngredient(){\n    this.recettesService.addIngredient(this.ingredient)\n    window.location.reload()\n  }\n\n}\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside class=\"sidebar is-visible\">\n                    <div class=”sidebar-content”>\n                        <ul>\n                            <li><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li class=\"active\"><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li><a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a></li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n\n                            <h1>Ingrédients</h1>\n                        \n                        </div>\n                        \n                        <div class='flex-container'>\n\n                            <div id=\"addIng\">\n                                <h6 id=\"question\"> Ajouter un nouvel ingredient </h6>\n                                <form (submit)=\"addIngredient()\">\n                                    <input type=\"text\" class=\"form-control\" name=\"nomIngredient\" placeholder=\"nom ingredient\" [(ngModel)]=\"ingredient.nomIngredient\">\n                        \n                                    <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n                        \n                                </form>\n                            </div>\n                        \n                            <div>\n                                <form>\n                                    <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher un ingrédient\" aria-label=\"Search\" [formControl]=\"filter\">\n                                </form>\n                                <table class=\"table col-md-12 mx-auto\">\n                        \n                                    <tr *ngFor=\"let ingredient of filteredIngredient$ | async; let i=index\">\n                                        <td>                        \n                        \n                                            <form (submit)=\"updateIngredient(ingredient)\">\n                                                <div class=\"form-row align-items-center\">\n                                                    <div class=\"col-auto\">\n                        \n                                                        <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"nomIngredient\" value={{ingredient.nomIngredient}} [(ngModel)]=\"ingredient.nomIngredient\">\n                                                    </div>\n                                                    <div class=\"col-auto\">\n                                                        <button id=\"btn\" type=\"submit\" class=\"btn btn-sm btn-warning\"><i class=\"fa fa-pencil\" ></i></button>\n                        \n                        \n                                                    </div>\n                                                    <div class=\"col-auto\">\n                        \n                                                        <button id=\"btn\" class=\"btn btn-sm btn-danger\" (click)=\"deleteIngredient(ingredient.idIngredient)\"><i class=\"fa fa-trash\"></i></button>\n                        \n                                                    </div>\n                                                </div>\n                                            </form>\n                        \n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                            \n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, TokenPayload } from '../../service/';\nimport { Router } from '@angular/router';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-inscrire',\n  templateUrl: './inscrire.component.html',\n  styleUrls: ['./inscrire.component.css']\n})\nexport class InscrireComponent implements OnInit {\n\n  credentials: TokenPayload = {\n    pseudo: '',\n    email: '',\n    mdp: '',\n    mdp2: '',\n    admin: false,\n    abonneNews: false,\n    error: ''\n  }\n\n  userForm: FormGroup;\n\n  constructor(private auth: AuthentificationService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm()\n  }\n  \n  // We Init the form with the validators\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      mdp: ['', Validators.required],\n      mdp2: ['', Validators.required],\n      abonneNews: ['', Validators.required]\n\n    });\n  }\n\n  register() {\n\n    const formValue = this.userForm.value;\n\n    if (formValue.mdp != formValue.mdp2) {\n      alert(\"Les mots de passe ne sont pas identiques.\");\n      return;\n    }\n\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.email = formValue.email;\n    this.credentials.mdp = formValue.mdp;\n    this.credentials.mdp2 = formValue.mdp2;\n    this.credentials.abonneNews = formValue.abonneNews;\n\n    \n    this.auth.register(this.credentials).subscribe(\n      (res) => {\n        if (res.error == \"L'utilisateur existe déjà\") {\n          alert(\"L'utilisateur existe déjà\");\n          return;\n        } else {\n          this.auth.logout()\n          alert(\"Vous pouvez maintenant aller dans votre boîte mail pour confirmer votre adresse mail. Pensez à vérifier dans vos spams !\")\n          setTimeout(() => this.router.navigate(['login'])\n          , 5) \n        }\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 mt-5 mx-auto\">\n                <form class=\"contact-form\" [formGroup]=\"userForm\" (ngSubmit)=\"register()\" data-toggle=\"validator\" role=\"form\">\n                    <h1 id=\"lien\" class=\"h3 mb-3 font-weight-normal\">S'inscrire</h1>\n                    <div class=\"form-group\">\n                        <label>Pseudo *</label>\n                        <input id=\"pseudo\" pattern=\"[a-zA-Z0-9._%+-]*\" type=\"text\" class=\"form-control\" formControlName=\"pseudo\" placeholder=\"pseudo\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"inputEmail\" class=\"control-label\">Email *</label>\n                        <input id=\"to\" type=\"email\" class=\"form-control\" formControlName=\"email\"\n                            placeholder=\"nom.prenom@exemple.com\" id=\"inputEmail\"\n                            required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                            data-error=\"Bruh, that email address is invalid\">\n                        <div class=\"help-block with-errors\"></div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Mot de passe *</label>\n                        <input type=\"password\" class=\"form-control\" formControlName=\"mdp\" placeholder=\"****\" required>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Confirmer le mot de passe *</label>\n                        <input type=\"password\" class=\"form-control\" formControlName=\"mdp2\" placeholder=\"****\" required>\n                        <!--<svg  class=\"bi bi-check\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"green\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" d=\"M13.854 3.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3.5-3.5a.5.5 0 11.708-.708L6.5 10.293l6.646-6.647a.5.5 0 01.708 0z\" clip-rule=\"evenodd\"/>\n                          </svg> -->\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label>\n                        <br>\n                        <div class=\"form-row align-items-center\">\n                            <div class=\"col-auto\">\n                        <input type=\"radio\" formControlName=\"abonneNews\" value=\"true\" checked> Oui\n                        </div>\n                        <div class=\"col-auto\">\n                        <input type=\"radio\" formControlName=\"abonneNews\" value=\"false\"> Non\n                            </div>\n                    </div>\n                    </div>\n                    \n                    <input id=\"send_email\" class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"userForm.invalid\" value = \"Créer mon compte\">\n                    <br>\n                    <p>* Champs obligatoires.</p>\n\n                </form>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecettesService, IngredientDetails, AuthentificationService } from '../../service';\nimport { Router } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-ma-liste-de-courses',\n  templateUrl: './ma-liste-de-courses.component.html',\n  styleUrls: ['./ma-liste-de-courses.component.scss']\n})\nexport class MaListeDeCoursesComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>\n  public restIngredients$: Observable<IngredientDetails[]>\n\n  public filteredIngredient$: Observable<IngredientDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  public ingredientToDelete: IngredientShoppingList = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    idIngredient: null\n  }\n\n  public ingredientToAdd: IngredientShoppingList = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    idIngredient: null\n  }\n\n\n  constructor(private recetteService: RecettesService, private router: Router, private auth: AuthentificationService, private modalService: NgbModal) {\n    this.ingredients$ = this.recetteService.getListeCourses()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n    this.restIngredients$ = this.recetteService.getRestListeCourses()\n  }\n\n  ngOnInit(): void {\n  }\n\n  getListeCourses() {\n    this.ingredients$ = this.recetteService.getListeCourses()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteListeCourse(idIngredient: any) {\n    this.ingredientToDelete.idIngredient = idIngredient\n    this.recetteService.deleteListeCourse(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/refresh'], {\n          queryParams: {url:'shoppingList'}\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    window.location.reload() /* rafraichit la page */\n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.ingredientToAdd.idIngredient = result.idIngredient\n        console.log(this.ingredientToAdd)\n        this.recetteService.addIngredientShoppingList(this.ingredientToAdd)\n        this.router.navigate(['/refresh'], {\n          queryParams: {url:'shoppingList'}\n        })\n      })\n  }\n}\n\nexport interface IngredientShoppingList {\n  pseudo: string\n  idIngredient: number\n}","<div id=\"liste\">\n    <div class=\"app\">\n        <h2>Ma liste de courses</h2>\n        <form>\n            <input type=\"search\" placeholder=\"Recherche\" [formControl]=\"filter\">\n            <button id=\"add\" class=\"btn btn-outline-success\" (click)=\"open(content)\"><i class=\"fa fa-plus-circle\"></i></button>\n\n        </form>\n\n        <i id=\"panier\" class=\"fa fa-shopping-basket fa-3x\" aria-hidden=\"true\"></i>\n        <div class=\"app-body\" *ngFor=\"let ingredient of filteredIngredient$ | async\">\n            <ul class=\"list\">{{ingredient.nomIngredient}}\n                <button id=\"trash\" class=\"btn  btn-outline-danger\" (click)=deleteListeCourse(ingredient.idIngredient)><i class=\"fa fa-trash\"></i></button>\n            </ul>\n        </div>\n    </div>\n\n</div>\n\n<ng-template #content let-modal>\n    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\"></h4>\n    </div>\n    <div class=\"modal-body\">\n        <form>\n            <div class=\"form-row\">\n                <div class=\"col-md-6\">\n                    <label for=\"validationTooltip04\">Ingrédient</label>\n                    <select class=\"custom-select\" id=\"validationTooltip04\" #idIngredient=\"ngModel\" [(ngModel)]=\"ingredientToAdd.idIngredient\" [ngModelOptions]=\"{standalone: true}\" required>\n                    <option *ngFor=\"let ingredient of restIngredients$ | async\"\n                        [ngValue]=\"ingredient.idIngredient\">\n                        {{ingredient.nomIngredient}}</option>\n                </select>\n                    <div class=\"invalid-tooltip\">\n                        Selectionnez un ingrédient.\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button tyoe=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close(ingredientToAdd)\">Ajouter</button>\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mentions-legales',\n  templateUrl: './mentions-legales.component.html',\n  styleUrls: ['./mentions-legales.component.css']\n})\nexport class MentionsLegalesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-xl-6 mx-auto text-center\">\n                <div class=\"section-title mb-100\">\n\n                    <h4>Conditions générales d'utilisation</h4>\n                </div>\n            </div>\n        </div>\n        <div class=\"row text-center\">\n            <div class=\"col-md-12\">\n                <h5>Comment utiliser les recettes diffusées sur ce site</h5>\n                <p>\n                    Vous ne pouvez pas reproduire ces recettes dans le cadre d’un usage commercial.\n                    <br> Les recettes de ce site sont dans une base de données appartenant à Marine’s recipes, vous ne pouvez ni reproduire cette base de données, ni extraire des données contenues dans cette base autrement que pour votre usage privé.\n                    <ul class=\"a\">\n                        <li>\n                            Vous pouvez utiliser toutes les recettes diffusées sur le site pour votre usage privé : repas entre amis ou en famille. N'hésitez pas à donner votre avis sur les recettes en commentaire. Inscrivez-vous et indiquez que vous souhaitez recevoir un email\n                            lorsqu’une nouvelle recette est publiée si vous souhaitez rater aucune recette. Si vous souhaitez partager une recette à un proche vous pouvez cliquer sur le bouton partager sur la page d’une recette.\n                        </li>\n                        <li>\n                            Si vous êtes cuisinier ou restaurateur, vous pouvez utiliser les recettes sans droit de publier la recette elle-même sous 2 conditions :\n                            <ul class=\"a\">\n                                <li>\n                                    • retour d'expérience : dans les commentaires pouvant être associés à chaque recette.\n                                </li>\n                                <li>\n                                    • visibilité de la source de la recette sur votre menu : \" Cette recette vient du site marinesrecipes.fr \".\n\n                                </li>\n                            </ul>\n                        </li>\n                        <li>\n                            Si vous êtes une Ecole de formation de cuisine, un élève cuisinier ou une association culinaire, vous n'avez pas l'autorisation d'utiliser les recettes sauf accord préalable de Marine. Contactez-nous pour connaître les possibilités de partenariats : marinesrecipes@gmail.com\n                            .\n\n                        </li>\n                    </ul>\n\n                    <h5>Code de conduite</h5>\n                    <p>\n                        <ul class=\"a\">\n                            <li>\n                                Comment utiliser les logos figurant sur le site : Les logos, marques, dessins, illustrations, textes et noms des rubriques figurant sur notre site ne peuvent pas être utilisés, reproduits, modifiés, diffusés, ou empruntés pour créer des œuvres dérivées\n                                sans notre autorisation. Les marques citées sont déposées par leurs propriétaires respectifs et sont protégés par le droit des marques. Ces éléments ne peuvent donc pas être utilisés, reproduits, modifiés, diffusés, ou\n                                empruntés pour créer des œuvres dérivées sans l'autorisation de leurs titulaires respectifs.\n                            </li>\n                            <li>\n                                Marine’s recipes demande aux utilisateurs de ses services de respecter les droits de propriété intellectuelle d'autrui. Dès lors, si vous considérez que votre marque ou votre œuvre a été copiée ou est utilisée d'une manière susceptible de porter atteinte\n                                à vos droits tels que reconnus par la législation française sur le site Marinesrecipes.fr, merci de nous en informer par email : marinesrecipes@gmail.com.\n                            </li>\n                            <li>\n                                Utilisation des espaces de communauté Vous vous engagez à ne pas vous servir du site Marinesrecipes.fr et notamment des commentaires ou de la rubrique « Contact » pour :\n                                <ul>\n                                    <li>\n                                        Télécharger, envoyer, transmettre par e-mail ou de toute autre manière tout contenu qui soit illégal, nuisible, menaçant, abusif, constitutif de harcèlement, diffamatoire, vulgaire, obscène, menaçant pour la vie privée d'autrui, haineux, raciste, ou autrement\n                                        répréhensible ;\n                                    </li>\n                                    <li>\n                                        Porter atteinte d'une quelconque manière aux utilisateurs mineurs. Marine’s recipes se réserve le droit, à ce titre ou lorsqu'une contribution est contraire à la ligne éditoriale de son site (sans que cela ne constitue une obligation) de supprimer tout\n                                        contenu disponible via son site, notamment dans les commentaires.\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n\n\n                        <h5>Responsabilités</h5>\n                        <p>\n                            <ul class=\"a\">\n                                <li>\n                                    Marine’s recipes ne garantit pas le résultat des recettes diffusées sur son site, ni leur qualité. Marinesrecipes.fr ne garantit pas que les recettes répondront aux attentes des internautes ou que leurs résultats seront exacts et fiables. En conséquence,\n                                    la responsabilité de Marinesrecipes.fr ne saurait être engagée en cas d'erreur ou d'omission dans l'une de ces recettes, textes, informations ou illustrations diffusées sur son site. Toutefois, merci de nous faire connaître\n                                    vos commentaires dans la rubrique \" Contact \", ainsi que dans les commentaires pouvant être associés à chaque recette.\n                                </li>\n                                <li>\n                                    Des liens hypertextes peuvent renvoyer vers d'autres sites que le site Marinesrecipes.fr, nous dégageons toute responsabilité dans le cas où le contenu de ces sites serait contraire à la réglementation en vigueur.\n                                </li>\n                                <li>\n                                    Tout contenu téléchargé se fait aux risques et périls de l'utilisateur et sous sa seule responsabilité. En conséquence, Marinesrecipes.fr ne saurait être tenu responsable d'un quelconque dommage subi par l'ordinateur de l'utilisateur ou d'une quelconque\n                                    perte de données consécutives au téléchargement.\n                                </li>\n                                <li>\n                                    Tout utilisateur du site Marinesrecipes.fr s'engage à garantir et indemniser la société Marinesrecipes.fr contre tout dommage, plainte ou demande émanant de tiers consécutif à l'envoi, la diffusion ou la transmission de contenu sur le Marinesrecipes.fr\n                                    .\n                                </li>\n                            </ul>\n\n\n\n            </div>\n\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { RecettesService, AuthentificationService, CommentaireDetails, UserDetails } from '../../service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-mes-commentaires',\n  templateUrl: './mes-commentaires.component.html',\n  styleUrls: ['./mes-commentaires.component.scss']\n})\nexport class MesCommentairesComponent implements OnInit {\n\n  public commentaires : CommentaireDetails[]\n\n  public commentaireToModify: CommentaireDetails = {\n    ecritPar: this.auth.getUserDetails().pseudo\n  }\n\n  constructor(public auth: AuthentificationService, private recetteService: RecettesService, private modalService: NgbModal, private router: Router) {\n    this.recetteService.getCommentaireUser(this.auth.getUserDetails().pseudo).subscribe(\n      commentaires => {\n       \n        this.commentaires = commentaires\n        console.log(commentaires)\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n        this.commentaires.forEach(element => {\n         \n          var d = new Date(element.dateCommentaire)\n      \n          element.dateCommentaire = d.toLocaleString('FR-fr', options)\n\n          this.recetteService.getRecipeById(element.concerne).subscribe(data => {\n            element.nomRecette = data.nomRecette\n          })          \n        })\n      }\n    );\n  \n  }\n\n  ngOnInit(): void {\n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.commentaireToModify.message = result.message\n        this.commentaireToModify.dateCommentaire = result.dateCommentaire\n        this.commentaireToModify.concerne = result.concerne\n        console.log(this.commentaireToModify)\n        this.recetteService.modifyCommentaire(this.commentaireToModify)\n        this.router.navigate(['/refresh'], {\n          queryParams: {url:'comment'}\n        })\n      })\n  }\n\n  deleteCommentaire(idCommentaire: any){\n    this.recetteService.deleteCommentaire(idCommentaire)\n      .subscribe(res => {\n        this.router.navigate(['/comment']).then(() => {\n          window.location.reload()\n        })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n}\n\n\n","<section class=\"contact \" id=\"contact\">\n<article id=\"burger-fourth\" >\n\n    <h2 class=\"text-center\" id=\"titre\">Mes commentaires</h2>\n\n    <div class=\"comment-container theme--light\">\n        <div class=\"comments\">\n            <div class=\"card v-card v-sheet theme--light elevation-2\" *ngFor=\"let commentaire of commentaires\">\n                <div class=\"header\">\n                    <div *ngIf=\"!auth.isAdmin()\" class=\"v-avatar avatar\" style=\"height: 50px; width: 50px;\"><img src=\"../../../assets/img/avatar.png\"></div>\n                    <div *ngIf=\"auth.isAdmin()\" class=\"v-avatar avatar\" style=\"height: 2.5em; width: 3.5em;\"><img src=\"../../../assets/img/logo.jpeg\"></div>\n                    <span class=\"displayName title\"><a routerLink=\"/recipe/{{commentaire.concerne}}\">{{commentaire.nomRecette}}</a></span> <span class=\"displayName caption\">{{commentaire.dateCommentaire}}</span></div>\n                <!---->\n                <div class=\"wrapper comment\">\n                    <p>{{commentaire.message}}\n                    </p>\n                </div>\n                <div class=\"actions\">\n                    <!--<button id=\"btn\" class=\"btn btn-sm btn-danger\" (click)=\"deleteCommentaire(commentaire.idCommentaire)\"><i class=\" fa fa-trash \"></i></button> mettre un bouton modifier\n                   -->\n                    <!---->\n                    <!---->\n                    <button class=\"btn btn-warning\" (click)=\"open(content)\"><i class=\"fa fa-pencil\"></i></button>\n                    <button id=\"poubelle\" type=\"submit\" class=\"btn btn-sm btn-danger\" (click)=\"deleteCommentaire(commentaire.idCommentaire)\"><i class=\"fa fa-trash\"></i></button>\n\n                </div>\n                <div class=\"v-dialog__container\" style=\"display: block;\"></div>\n                <ng-template #content let-modal class=\"modal\">\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\">Modification du commentaire</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <textarea #message=\"ngModel\" [(ngModel)]=\"commentaire.message\" [ngModelOptions]=\"{standalone: true}\">\n                                        {{commentaire.message}}\n                                    </textarea>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-outline-warning\" (click)=\"modal.close(commentaire)\">Modifier</button>\n                    </div>\n                </ng-template>\n            </div>\n\n\n\n            <!---->\n            <div class=\"answers\">\n\n                <!---->\n            </div>\n        </div>\n        <div>\n\n        </div>\n\n    </div>\n\n</article>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails, AuthentificationService } from '../../service';\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Router } from '@angular/router';\nimport { HashTable } from '../recettes/recettes.component';\n\n@Component({\n  selector: 'app-mes-recettes',\n  templateUrl: './mes-recettes.component.html',\n  styleUrls: ['./mes-recettes.component.scss']\n})\nexport class MesRecettesComponent implements OnInit {\n\n  page: number = 1;\n\n  public actualCategory: number = null\n  public recipeByCategory: HashTable<RecipeDetails[]> = {}\n  public recipeCategory: RecipeDetails[] = []\n\n  public researchForm: FormGroup\n\n  public allRecipe: RecipeDetails[]\n  public allRecipe2: RecipeDetails[]\n\n  public recettes$: Observable<RecipeDetails[]>\n  public categories: CategoryDetails[]\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recetteService: RecettesService, private router: Router, private formBuilder: FormBuilder, public auth: AuthentificationService) {\n    \n    //pour la recherche dynamique\n    this.recettes$ = this.recetteService.getFavoris()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n    this.recetteService.getFavoris().subscribe(data => {\n      this.allRecipe = data\n      this.allRecipe2 = data\n    })\n\n    this.recetteService.getAllCategory().subscribe(\n      (categorie: CategoryDetails[]) => {\n        categorie.forEach(data => {\n          this.recetteService.getFavorisByCategory(data.idCategorie).subscribe(recipes => { \n            this.recipeCategory = recipes\n            this.recipeByCategory[data.idCategorie] = this.recipeCategory\n          })\n        })\n        this.categories = categorie\n      })\n\n    this.initResearchForm()\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges() {\n    this.allRecipe = this.allRecipe2\n    this.initResearchForm()\n  }\n\n  initResearchForm() {\n    this.researchForm = this.formBuilder.group({\n      filter: ['']\n    });\n  }\n\n  research() {\n    const formValue = this.researchForm.value;\n\n    if (this.actualCategory != null) {\n      if (formValue.filter != '') {\n        let researchResult: RecipeDetails[] = []\n        this.recipeByCategory[this.actualCategory].forEach(recipe => {\n          if (recipe.nomRecette.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n            if (!researchResult.includes(recipe)) {\n              researchResult.push(recipe)\n            }\n          }\n          recipe.ingredients.forEach(ingredient => {\n            if (ingredient.nomIngredient.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n              if (!researchResult.includes(recipe)) {\n                researchResult.push(recipe)\n              }\n            }\n          })\n        })\n        this.allRecipe = researchResult\n      } else {\n        this.allRecipe = this.allRecipe2\n      }\n    } else {\n      if (formValue.filter != '') {\n        let researchResult: RecipeDetails[] = []\n\n        this.allRecipe2.forEach(recipe => {\n          if (recipe.nomRecette.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n            if (!researchResult.includes(recipe)) {\n              researchResult.push(recipe)\n            }\n          }\n          console.log(recipe)\n          recipe.ingredients.forEach(ingredient => {\n            if (ingredient.nomIngredient.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n              if (!researchResult.includes(recipe)) {\n                researchResult.push(recipe)\n              }\n            }\n          })\n        })\n        this.allRecipe = researchResult\n      } else {\n        this.allRecipe = this.allRecipe2\n      }\n    }\n\n\n\n  }\n\n  getFavoris() {\n    this.recettes$ = this.recetteService.getFavoris()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  getFavorisByCategory(idCategorie: any) {\n\n    this.actualCategory = idCategorie\n\n    this.recettes$ = this.recetteService.getRecipeByCategory(idCategorie)\n\n    this.recetteService.getFavorisByCategory(idCategorie).subscribe(data => {\n      this.allRecipe = data\n    })\n\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  //voir si on peut la récupérer au lieu de la recopier!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload()\n        })\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Cette recette n'existe pas !\")\n          }\n        }\n      })\n  }\n\n\n  deleteFavoris(idRecette: any) {\n    this.recetteService.deleteFavoris(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/favorites'], {\n          queryParams: { refresh: new Date().getTime() }\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n      this.recetteService.getFavoris().subscribe(data => {\n        this.allRecipe = data\n      }) /* rafraichit la page */\n  }\n\n}\n","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<div id=\"titre\" class=\"mt-5\">\n    <h1>Mes recettes ♥</h1>\n</div>\n\n<ul id=\"menu\" class=\"nav justify-content-center\">\n    <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"/favorites\" (click)=\"getFavoris()\">Tous mes favoris</a>\n    </li>\n    <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n        <a class=\"nav-link\" routerLink=\"/favorites\"\n            (click)=\"getFavorisByCategory(categ.idCategorie)\">{{categ.libelleCategorie}}</a>\n    </li>\n</ul>\n\n<br>\n\n<ul class=\"nav justify-content-center\">\n    <li>\n        <form class=\"form-inline\" [formGroup]=\"researchForm\" (ngSubmit)=\"research()\">\n            <div class=\"col text-center\">\n                <input class=\"form-control\" type=\"search\" placeholder=\"Recette, ingrédient..\" aria-label=\"Search\"\n                    formControlName=\"filter\" (click)=\"ngOnChanges()\">\n            </div>\n\n            <div class=\"col text-center\">\n                <button id=\"validateButton\" type=\"submit\" class=\"btn btn-primary\">Rechercher</button>\n            </div>\n        </form>\n    </li>\n</ul>\n\n<br>\n\n<div class=\"row\">\n    <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\" *ngFor=\"let recette of allRecipe | paginate: { id: 'listing_pagination', itemsPerPage:12, currentPage: page}\">\n        <article class=\"card wrap\">\n            <div id=\"photo\" [ngStyle]=\"{'background-image': 'url(&quot;' + recette.lienImage + '&quot;)'}\"\n                (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">\n            </div>\n            <div>\n                <a>\n                </a>\n                <div id=\"titleRecipe\">\n                    <h3 class=\"food\">\n                        {{recette.nomRecette}}\n                    </h3>\n                </div>\n                <div id=\"logoRecette\">\n                    <div class=\"logo\">\n                        <i class=\"fa fa-clock-o\"></i><a class=\"picto-item\" aria-label=\"Temps de préparation\"><i\n                                id=\"textlogo\">{{recette.globalTime}}</i></a>\n                    </div>\n                    <div class=\"logo\">\n                        <i class=\"fa fa-users\"></i><a class=\"picto-item\" aria-label=\"Nombre de parts\"><i\n                                id=\"textlogo\">{{recette.nbrePart}} {{recette.libellePart}}</i></a>\n                    </div>\n                    <div class=\"logo\">\n                        <a class=\"picto-item\" aria-label=\"Nombre de vues\"><i id=\"textlogo\">{{recette?.nbVues}}</i><i\n                                id=\"vue\"> 👁</i></a>\n                    </div>\n                    <div id=\"coeur\" class=\"logo\">\n                        <a *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\"\n                            (click)=\"deleteFavoris(recette.idRecette)\" class=\"picto-item\"\n                            aria-label=\"Supprimer des favoris\"><i id=\"textlogo\">{{recette?.nbFavoris}} </i><i\n                                class=\"class= fa fa-heart\"></i></a>\n                    </div>\n                </div>\n            </div>\n        </article>\n    </div>\n</div>\n<div id=\"paginationRecette\">\n    <pagination-controls id='listing_pagination' (pageChange)=\"page = $event\" previousLabel=\"Précédent\"\n        nextLabel=\"Suivant\"></pagination-controls>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails, IngredientDetails, QuantiteDetails, UniteDetails, ImageRecipe } from '../../service';\nimport { HttpResponse, HttpClient } from '@angular/common/http'\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'; //la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\n\n@Component({\n  selector: 'app-modifier-recette',\n  templateUrl: './modifier-recette.component.html',\n  styleUrls: ['./modifier-recette.component.scss']\n})\nexport class ModifierRecetteComponent implements OnInit {\n\n  public newIngredient: IngredientDetails = {\n    qte: null,\n    idRecette: parseInt(this.route.snapshot.paramMap.get('id')),\n    idIngredient: null,\n    idUnite: null\n  }\n\n  public recette: RecipeDetails = {\n    idRecette: null,\n    nomRecette: 'string',\n    datePublication: null,\n    nbFavoris: null,\n    nbVues: null,\n    idImage: null,\n    lienImage: null,\n    etapes: null,\n    nbrePart: null,\n    libellePart: '',\n    tempsPreparation: null,\n    tempsCuisson: null,\n    astuce: ''\n  }\n  public ingredients: IngredientDetails\n  public unite: UniteDetails\n  public qtes: QuantiteDetails[]\n  public categories: CategoryDetails[]\n\n  public image\n  public image2\n  public allIngredients: IngredientDetails[] //ingredients disponibles\n  public allUnites: UniteDetails[]\n  public allCategories: CategoryDetails[] //catégories disponibles\n\n  public imageToModify : ImageRecipe = {\n    idImage: null,\n    idRecette: null\n  }\n\n  constructor(private recetteService: RecettesService, private router: Router, private route: ActivatedRoute, private formBuilder: FormBuilder, private modalService: NgbModal,\n    private http: HttpClient) {\n      this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n        recette => {\n          this.recette = recette\n        }\n      );\n  \n      this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n        ingredient => {\n          this.ingredients = ingredient\n        }\n      );\n  \n      this.recetteService.getImage(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n        res => {\n          console.log(res.length)\n          if (res.length != 0) {\n            console.log(res)\n            this.recette.idImage = res[0].idImage\n            console.log(this.recette)\n            this.image = res[0]\n          }\n        }\n      );\n  \n      this.recetteService.getRestIngredients(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n        ingredients => {\n          this.allIngredients = ingredients\n        }\n      )\n  \n      this.recetteService.getAllUnite().subscribe(\n        unites => {\n          this.allUnites = unites\n        }\n      )\n  \n      this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n        categories => {\n          this.allCategories = categories\n        }\n      )\n  \n  \n      this.getCategory(parseInt(this.route.snapshot.paramMap.get('id')))\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.image2 = file;\n      console.log(this.image2)\n    }\n  }\n\n  onSubmit() {\n    console.log(this.image2)\n    const formData = new FormData();\n    formData.append('file', this.image2);\n    console.log(formData)\n    console.log(this.image)\n    if(this.image) {\n      console.log('cc')\n      this.recetteService.addImage(formData).subscribe(res => {\n        this.image = res[0]\n        console.log(this.image)\n        this.imageToModify.idImage = res[0]\n        this.imageToModify.idRecette = this.recette.idRecette\n        this.http.post<any>(`/server/image/update`, this.imageToModify).subscribe(\n          (res) => {\n            console.log(res)\n            this.image = res[0]\n            window.location.reload()\n          }\n        );\n      })\n    } else {\n      console.log('cc2')\n      this.recetteService.addImage(formData).subscribe(res => {\n        console.log(res)\n        this.image = res[0]\n        console.log(this.image)\n        this.imageToModify.idImage = res[0]\n        this.imageToModify.idRecette = this.recette.idRecette\n        console.log(this.imageToModify)\n        this.recetteService.addImageToRecipe(this.imageToModify)\n        window.location.reload()\n      })\n    }\n    \n\n\n\n\n  }\n\n  getCategory(id: any): any {\n    this.recetteService.getCategory(id).subscribe(\n      (categories: CategoryDetails[]) => {\n        this.categories = categories\n      }, err => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log(\"cette recette n'a pas de catégorie!\")\n          }\n        }\n      }\n    )\n    return this.categories\n  }\n\n\n\n  updateRecipeName(recette: RecipeDetails) {\n    this.recetteService.updateRecipeName(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n  updateSteps(recette: RecipeDetails) {\n    this.recetteService.updateSteps(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  updateAstuce(recette: RecipeDetails) {\n    this.recetteService.updateAstuce(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  updatePart(recette: RecipeDetails) {\n    this.recetteService.updatePart(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  updateTemps(recette: RecipeDetails) {\n    this.recetteService.updateTemps(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  updateRecipeIng(recette: RecipeDetails, ingredient: IngredientDetails) {\n    this.recetteService.updateRecipeIng(recette, ingredient).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  deleteIngredientRececipe(ingredient: IngredientDetails, recette: RecipeDetails) {\n    this.recetteService.deleteIngredientRececipe(ingredient, recette)\n      .subscribe(res => {\n        this.router.navigate(['updateRecipe/:id']).then(() => {\n          window.location.reload()\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n\n  }\n\n  deleteRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails) {\n\n    this.recetteService.deleteRecipeCategory(categorie, recette)\n      .subscribe(res => {\n        setTimeout(() => {\n          this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n            categories => {\n              this.allCategories = categories\n            }\n          )\n          this.recetteService.getCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n            categories => {\n              this.categories = categories\n            }\n          )\n        }, 1000)\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  }\n\n  addRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails) {\n    this.recetteService.addRecipeCategory(categorie, recette)\n      .subscribe(res => {\n        setTimeout(() => {\n          this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n            categories => {\n              this.allCategories = categories\n            }\n          )\n          this.recetteService.getCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n            categories => {\n              this.categories = categories\n            }\n          )\n        }, 1000)\n\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  }\n\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.idIngredient = result.idIngredient\n        this.newIngredient.qte = result.qte\n        this.newIngredient.idUnite = result.idUnite\n        this.recetteService.addIngredientRecette(this.newIngredient)\n        setTimeout(() => {\n          window.location.reload()\n        }, 1000);\n      })\n  }\n\n}\nexport class Ingredient {\n  idIngredient = '';\n  quantite = '';\n  idUnite = '';\n}\n\n","<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>\n\n<script>\n</script>\n\n<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"text-center\">\n            <h1>Modifier la recette</h1>\n        </div>\n\n        <hr>\n\n        <label>\n            <h4><strong>Nom de la recette</strong></h4>\n        </label>\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <td id=\"nomRecette\">\n                    <form (submit)=\"updateRecipeName(recette)\">\n                        <input type=\"text\" class=\"form-control\" name=\"nomRecette\"\n                            value=\"(recette?.nomRecette)\" #nomRecette=\"ngModel\"\n                            [(ngModel)]=\"recette.nomRecette\" />\n                        <br>\n                        <button class=\"btn btn-primary\" type=\"submit\">Modifier</button>\n                    </form>\n                </td>\n            </tr>\n        </table>\n\n        <hr>\n\n        <label>\n            <h4><strong>Image de la recette</strong></h4>\n        </label>\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <td>\n                    <div *ngIf=\"!image\">\n                        <input type=\"file\" name=\"image\" (change)=\"selectImage($event)\" />\n                        <br>\n                        <br>\n                        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">Modifier</button>\n                    </div>\n\n\n                    <div *ngIf=\"image\">\n                        <img src=\"{{image.lienImage}}\" class=\"rounded mx-auto d-block\" alt=\"Responsive image\" id=\"resp\">\n                        <br>\n                        <button class=\"btn btn-primary\" type=\"submit\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n                            data-backdrop=\"false\">Modifier l'image de la recette</button>\n                        <!-- Modal -->\n                        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\"\n                            aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modification de l'image de la\n                                            recette\n                                        </h5>\n                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        <figcaption class=\"figure-caption\">\n                                            <!--bouton modifier photo à faire-->\n                                            <div style=\"text-align: center\">\n                                                <form>\n                                                    <div>\n                                                        <input type=\"file\" name=\"image\"\n                                                            (change)=\"selectImage($event)\" />\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </figcaption>\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button type=\"button\" class=\"btn btn-primary\"\n                                            data-dismiss=\"modal\">Close</button>\n                                        <button type=\"submit\" class=\"btn btn-primary\"\n                                            (click)=\"onSubmit()\">Modifier</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div id=\"modal-backdrop\" class=\"modal-backdrop-transparent modal-transition\"></div>\n                    </div>\n                </td>\n            </tr>\n        </table>\n\n        <hr>\n\n        <label>\n            <h4><strong>Catégories</strong></h4>\n        </label>\n        <table class=\"table col-md-8 mx-auto\">\n\n            <tr>\n\n                <td>\n                    <!--catégories de la recette-->\n                    <div style=\"text-align: initial;\" *ngFor=\"let categ of categories\">\n                        <button id=\"poubelle\" class=\"btn btn-sm btn-danger\"\n                            (click)=\"deleteRecipeCategory(categ,recette)\"><i class=\"fa fa-trash\"></i></button>\n                        {{categ.libelleCategorie}}\n                    </div>\n                </td>\n                <td>\n                    <!--catégorie dont la recette ne fait pas partie-->\n                    <div style=\"text-align: initial;\" *ngFor=\"let cat of allCategories\">\n                        <button id=\"add\" class=\"btn btn-sm btn-success\" (click)=\"addRecipeCategory(cat,recette)\"><i\n                                class=\"fa fa-plus-circle\"></i></button> {{cat.libelleCategorie}}\n\n                    </div>\n                </td>\n            </tr>\n        </table>\n\n        <hr>\n\n        <label>\n            <h4><strong>Parts</strong></h4>\n        </label>\n        <table class=\"table col-md-8 mx-auto\">\n\n            <tr>\n                <ul>\n\n                    <form (submit)=\"updatePart(recette)\">\n                        <td>\n\n                            <label>Nombre</label>\n                            <br>\n                            <input type=\"number\" class=\"form-control\" [(ngModel)]=\"recette.nbrePart\"\n                                [ngModelOptions]=\"{standalone: true}\" value=\"{{recette.nbrePart}}\" required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n\n                        </td>\n\n                        <td>\n\n\n                            <label>Libellé</label>\n                            <br>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"recette.libellePart\"\n                                [ngModelOptions]=\"{standalone: true}\" value=\"{{recette.libellePart}}\" required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n\n                        </td>\n\n                        <td>\n                            <div style=\"margin-top: 2em;\">\n                                <button class=\"btn btn-primary\" type=\"submit\">Modifier</button>\n                            </div>\n                        </td>\n\n\n                    </form>\n\n                </ul>\n            </tr>\n\n        </table>\n\n        <hr>\n\n        <label>\n            <h4><strong>Temps</strong></h4>\n        </label>\n        <table class=\"table col-md-8 mx-auto\">\n\n            <tr>\n                <ul>\n\n                    <form (submit)=\"updateTemps(recette)\">\n                        <td>\n\n                            <label>Préparation</label>\n                            <br>\n                            <input type=\"time\" class=\"form-control\" [(ngModel)]=\"recette.tempsPreparation\"\n                                [ngModelOptions]=\"{standalone: true}\" value=\"{{recette.tempsPreparation}}\" step=\"2\"\n                                required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n\n                        </td>\n\n                        <td>\n\n\n                            <label>Cuisson</label>\n                            <br>\n                            <input type=\"time\" class=\"form-control\" [(ngModel)]=\"recette.tempsCuisson\"\n                                [ngModelOptions]=\"{standalone: true}\" value=\"{{recette.tempsCuisson}}\" step=\"2\"\n                                required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n\n                        </td>\n\n                        <td>\n                            <div style=\"margin-top: 2em;\">\n                                <button class=\"btn btn-primary\" type=\"submit\">Modifier</button>\n                            </div>\n                        </td>\n\n\n                    </form>\n\n                </ul>\n            </tr>\n\n        </table>\n\n        <hr>\n\n        <table class=\"table col-md-8 mx-auto\">\n\n            <tr>\n                <label>\n                    <h4><strong>Ingrédients</strong></h4>\n                </label>\n\n                <ul>\n                    <div *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n\n                        <form (submit)=\"updateRecipeIng(recette,ingredient)\">\n\n                            <td id=\"nomIng\">\n                                <p>{{ingredient.nomIngredient}}</p>\n                            </td>\n\n                            <td id=\"qteIng\">\n                                <input type=\"text\" class=\"form-control\" name=\"qte\" value=\"{{ingredient.qte}}\"\n                                    #qte=\"ngModel\" [(ngModel)]=\"ingredient.qte\">\n                            </td>\n                            <td>\n                                <select class=\"custom-select\" #idUnite=\"ngModel\" [(ngModel)]=\"ingredient.idUnite\"\n                                    [ngModelOptions]=\"{standalone: true}\" required>\n                                    <option *ngFor=\"let unite of allUnites\"\n                                        [attr.selected]=\"ingredient.libelleUnite == unite.libelleUnite ? true : null\"\n                                        [attr.value]=\"unite.idUnite\">\n                                        {{unite.libelleUnite}}\n                                    </option>\n                                </select>\n                            </td>\n                            <td>\n\n                                <button id=\"crayon\" class=\"btn btn-sm btn-warning\"><i class=\"fa fa-pencil\"\n                                        aria-hidden=\"true\"></i></button>\n                            </td>\n                            <td>\n                                <button id=\"poubelle\" class=\"btn btn-sm btn-danger\"\n                                    (click)=deleteIngredientRececipe(ingredient,recette)><i\n                                        class=\"fa fa-trash\"></i></button>\n                            </td>\n\n\n\n\n                        </form>\n\n\n                    </div>\n                    <ng-template #content let-modal>\n                        <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                        <div class=\"modal-header\">\n                            <h4 class=\"modal-title\"></h4>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form>\n                                <div class=\"form-row\">\n                                    <div class=\"col-md-3 mb-3\">\n                                        <label for=\"validationTooltip04\">Ingrédient</label>\n                                        <select class=\"custom-select\" id=\"validationTooltip04\" #idIngredient=\"ngModel\"\n                                            [(ngModel)]=\"newIngredient.idIngredient\"\n                                            [ngModelOptions]=\"{standalone: true}\" required>\n                                            <option *ngFor=\"let ingredient of allIngredients\"\n                                                [ngValue]=\"ingredient.idIngredient\">\n                                                {{ingredient.nomIngredient}}</option>\n                                        </select>\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez un ingrédient.\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-3 mb-3\">\n                                        <label for=\"validationTooltip05\">Quantité</label>\n                                        <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\"\n                                            #qte=\"ngModel\" [(ngModel)]=\"newIngredient.qte\"\n                                            [ngModelOptions]=\"{standalone: true}\" required>\n                                        <div class=\"invalid-tooltip\">\n                                            Rentrez une quantité correcte.\n                                            <!--Vérifier que c'est pas négatif ou nulle-->\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-3 mb-3\">\n                                        <label for=\"validationTooltip04\">Unité</label>\n                                        <select class=\"custom-select\" id=\"validationTooltip04\" #idUnite=\"ngModel\"\n                                            [(ngModel)]=\"newIngredient.idUnite\" [ngModelOptions]=\"{standalone: true}\"\n                                            required>\n                                            <option *ngFor=\"let unite of allUnites\" [ngValue]=\"unite.idUnite\">\n                                                {{unite.libelleUnite}}\n                                            </option>\n                                        </select>\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez une unité.\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button tyoe=\"button\" class=\"btn btn-outline-dark\"\n                                (click)=\"modal.close(newIngredient)\">Ajouter</button>\n                        </div>\n                    </ng-template>\n\n                    <!--on appelle le modal-->\n\n\n                </ul>\n\n            </tr>\n\n\n            <tr>\n                <td>\n                    <button class=\"btn btn-primary\" (click)=\"open(content)\">Ajouter un nouvel ingrédient</button>\n                </td>\n            </tr>\n\n        </table>\n\n        <hr>\n\n        <label>\n            <h4><strong>Recette</strong></h4>\n        </label>\n\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <ul>\n\n                    <div class=\"row\">\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 p-3\">\n                            <label>Préparation</label>\n\n                            <td>\n                                <form (submit)=\"updateSteps(recette)\">\n\n                                    <textarea class=\"form-control\" #etapes=\"ngModel\" rows=\"15em\" name=\"etapes\"\n                                        [(ngModel)]=\"recette.etapes\"\n                                        [ngModelOptions]=\"{standalone: true}\">{{recette?.etapes}}</textarea>\n                                    <br>\n                                    <button id=\"btn\" class=\"btn btn-primary\" type=\"submit\">Modifier</button>\n\n                                </form>\n                            </td>\n\n\n                        </div>\n\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 p-3\">\n                            <label>Astuces</label>\n                            <td>\n                                <form (submit)=\"updateAstuce(recette)\">\n                                    <textarea class=\"form-control\" #etapes=\"ngModel\" rows=\"15em\" name=\"astuce\"\n                                        [(ngModel)]=\"recette.astuce\"\n                                        [ngModelOptions]=\"{standalone: true}\">{{recette?.astuce}}</textarea>\n                                    <br>\n                                    <button id=\"btn\" class=\"btn btn-primary\" type=\"submit\">Modifier</button>\n                                </form>\n                            </td>\n\n                        </div>\n\n\n                    </div>\n\n                </ul>\n            </tr>\n        </table>\n\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserProfile } from '../../service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { __param } from 'tslib';\n@Component({\n  selector: 'app-mon-profile',\n  templateUrl: './mon-profile.component.html',\n  styleUrls: ['./mon-profile.component.css']\n})\nexport class MonProfileComponent implements OnInit {\n\n  credentials: UserProfile = {\n    pseudo: '',\n    email: '',\n    abonneNews: true,\n    success: ''\n  }\n\n  constructor(private auth: AuthentificationService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.auth.profile().subscribe(\n      user => {\n        this.credentials = user\n      },\n      err => {\n        console.error(err)\n      }\n    )\n    if(this.route.queryParams) {\n      this.route.queryParams\n      .subscribe(params => {\n        this.credentials.success = params.success;\n      })\n    }   \n  }\n\n  updateProfile(){\n    this.auth.updateProfile(this.credentials).subscribe((res: any) => {\n      this.credentials.success = res.success\n        this.router.navigateByUrl('/profile').then(() => {\n          setTimeout(window.location.reload.bind(window.location), 2500);\n        })\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n\n  deleteProfile(pseudo: any) {\n    this.auth.logout();\n    this.auth.deleteProfile(pseudo)\n      .subscribe(res => {\n          this.router.navigate(['/']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n       \n            <div class=\"col-sm-10 mx-auto\" ng-controller=\"formCtrl\" ng-app=\"myApp\">\n                <form (submit)=\"updateProfile()\">\n                <h1 class=\"text-center\">Mon profil</h1>\n\n                <div *ngIf=\"credentials.success\" class=\"alert alert-success\" role=\"alert\">\n                    <label>{{credentials.success}}</label>\n                </div>\n\n                <table class=\"table col-md-8 mx-auto\">\n                    <tr>\n                        <td>Pseudo</td>\n                        <td>{{credentials?.pseudo}}</td>\n                    </tr>\n        \n                \n                    \n                    <tr>  \n                        <td><label>Email </label>\n                            <div *ngIf=\"email.errors && (email.invalid || email.touched)\">\n                            <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Entrez une adresse mail valide !</small>\n                        </div>\n                        </td>\n                        <td><input type=\"email\" #email=\"ngModel\" class=\"form-control\" name=\"email\" value= {{credentials?.email}}\n                            [class.is-invalid]=\"email.invalid && email.touched\" required\n                            pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" \n                            [(ngModel)]=\"credentials.email\"></td>\n                        \n                    </tr>\n                \n                    <tr>\n                        <td>Mot de passe</td>\n                        <td><button class=\"btn btn-outline-dark\" routerLink='/update-password'>Modifier</button></td> \n                    </tr>\n                    <tr>\n                        <td><label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label></td> \n                        <div *ngIf=\"credentials?.abonneNews\">\n                            <td>\n                                <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                    checked [(ngModel)]=\"credentials.abonneNews\"> Oui\n                                <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                    [(ngModel)]=\"credentials.abonneNews\"> Non\n                            </td>\n                        </div>\n                        <div *ngIf=\"!credentials?.abonneNews\">\n                            <td>\n                                <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                    [(ngModel)]=\"credentials.abonneNews\"> Oui\n                                <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                    checked [(ngModel)]=\"credentials.abonneNews\"> Non\n                            </td>\n                        </div>\n                        \n                        \n                    </tr>\n                </table>\n                <div class=\"text-center\">\n                <button class=\"btn btn-light\" *ngIf=\"!email.errors\" type=\"submit\">Enregistrer les modifications</button>\n                <button class=\"btn btn-light\"  *ngIf=\"email.errors\" type=\"submit\" disabled>Enregistrer les modifications</button>\n            </div>\n            <br>\n            <div class=\"text-center\">\n                <button class=\"btn btn-outline-danger \" (click)=\"deleteProfile(credentials?.pseudo)\" \n                    type=\"submit\">Supprimer mon compte</button>\n                </div>\n                </form>\n            \n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { RecipeDetails, RecettesService, IngredientDetails, UniteDetails, QuantiteDetails, FavorisDetails, ListeCoursesDetails, AuthentificationService, CommentaireDetails } from '../../service';\nimport { HttpResponse } from '@angular/common/http'\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { Observable } from 'rxjs'\nimport { addHours, roundDecimal } from '../../utils/Utils'\n\n@Component({\n  selector: 'app-recette',\n  templateUrl: './recette.component.html',\n  styleUrls: ['./recette.component.scss']\n})\nexport class RecetteComponent implements OnInit {\n\n  public title;\n\n  public image\n  public recette: RecipeDetails\n  public ingredients: Observable<IngredientDetails[]>\n  public unite: UniteDetails\n  public qtes: QuantiteDetails[]\n  public newFavori: FavorisDetails = {\n    pseudo: '',\n    idRecette: parseInt(this.route.snapshot.paramMap.get('id'))\n  }\n\n  public newListeCourses: ListeCoursesDetails = {\n    pseudo: '',\n    listIngredients: null\n  }\n\n  public commentaires: CommentaireDetails[]\n  public newCommentaire: CommentaireDetails = {\n    message: '',\n    dateCommentaire: null,\n    ecritPar: '',\n    concerne: parseInt(this.route.snapshot.paramMap.get('id'))\n  }\n\n  public newResponse: CommentaireDetails = {\n    message: '',\n    dateCommentaire: null,\n    ecritPar: '',\n    concerne: parseInt(this.route.snapshot.paramMap.get('id')),\n    parent: null\n  }\n\n  private nbrePartInitial: number;\n  private ingredientQteInitial: IngredientDetails[]\n\n  public element: any\n\n  constructor(public auth: AuthentificationService, private recetteService: RecettesService, private router: Router, private route: ActivatedRoute) {\n    \n  }\n\n  onClick() {\n  }\n\n  ngOnInit(): void {\n    this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      recette => {\n        this.recette = recette\n        this.recette.tempsCuisson = addHours(this.recette.tempsCuisson)\n        this.recette.tempsPreparation = addHours(this.recette.tempsPreparation)\n        this.nbrePartInitial = this.recette.nbrePart\n      }\n    );\n\n    this.recetteService.getImage(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      res => {\n        console.log(res)\n        this.image = res\n      }\n    );\n\n    this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredient => {\n\n        ingredient.forEach(element => {\n          element.qte = roundDecimal(element.qte)\n        });\n\n        this.ingredients = ingredient\n        this.recette.ingredients = ingredient\n        this.ingredientQteInitial = ingredient\n      }\n    );\n\n    this.recetteService.getCommentaireRecipe(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      commentaires => {\n\n        this.commentaires = commentaires\n\n      }\n    );\n\n    if (this.auth.isLoggedIn()) {\n      this.newFavori.pseudo = this.auth.getUserDetails().pseudo\n      this.newListeCourses.pseudo = this.auth.getUserDetails().pseudo\n      this.newCommentaire.ecritPar = this.auth.getUserDetails().pseudo\n      this.newResponse.ecritPar = this.auth.getUserDetails().pseudo\n    }\n  }\n\n  getUtiliserIngredientsByIdRecette(id: any): QuantiteDetails[] {\n    this.recetteService.getUtiliserIngredientsByIdRecette(id).subscribe(\n      (qtes: QuantiteDetails[]) => {\n        this.qtes = qtes\n      }, err => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log(\"Il n'y a pas d'ingrédients !\")\n          }\n        }\n      }\n    )\n    return this.qtes\n  }\n\n  getUniteByIdUnite(id: any): UniteDetails {\n    this.recetteService.getUniteById(id).subscribe(\n      (unite: UniteDetails) => {\n        this.unite = unite\n      }, err => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log(\"Il n'y a pas d'ingrédients !\")\n          }\n        }\n      }\n    )\n    return this.unite\n  }\n\n  addFavoris() {\n    this.recetteService.addFavoris(this.newFavori)\n    this.router.navigateByUrl('/favorites').then(() => {\n      window.location.reload()\n    })\n  }\n\n  addListeCourses() {\n    this.newListeCourses.listIngredients = this.ingredients\n    this.recetteService.addListeCourses(this.newListeCourses)\n\n    this.router.navigate(['/shoppingList']).then(() => {\n      window.location.reload()\n    })\n\n\n  }\n  deleteCommentaire(idCommentaire: any) {\n    this.recetteService.deleteCommentaire(idCommentaire)\n      .subscribe(res => {\n        this.router.navigate(['/recipe/' + parseInt(this.route.snapshot.paramMap.get('id'))]).then(() => {\n          window.location.reload()\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    window.location.reload() /* rafraichit la page */\n  }\n\n  addCommentaire(message: any) {\n    this.newCommentaire.message = message\n    console.log(this.newCommentaire)\n    this.recetteService.addCommentaire(this.newCommentaire)\n    window.location.reload()\n  }\n\n  addReponse(event, idCommentaire) {\n    this.newResponse.message = event.target.message.value\n    this.newResponse.parent = idCommentaire\n    this.recetteService.addCommentaire(this.newResponse)\n    window.location.reload()\n  }\n\n\n  onProportionChange(searchValue: string): void {\n    this.recette.ingredients.forEach(element => {\n      element.qte = (element.qte * parseInt(searchValue)) / this.recette.nbrePart\n    });\n    this.recette.nbrePart = parseInt(searchValue)\n  }\n\n  onProportionLess(value: number): void {\n    console.log(value)\n    this.recette.ingredients.forEach(element => {\n      element.qte = roundDecimal((element.qte * value) / this.recette.nbrePart)\n    });\n    this.recette.nbrePart = this.recette.nbrePart - 1;\n  }\n\n  onProportionMore(value: number): void {\n    this.recette.ingredients.forEach(element => {\n      element.qte = roundDecimal((element.qte * value) / this.recette.nbrePart)\n    });\n    this.recette.nbrePart = this.recette.nbrePart + 1;\n  }\n\n}\n","<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>\n\n<script>\n</script>\n\n<header class=\"site-header\">\n\n    <div id=\"titreRecette\" class=\"header-content\">\n\n        <div class=\"title-area\">\n\n            <h1>{{recette?.nomRecette}}</h1>\n            <p id=\"timer\">{{recette?.nbVues}} 👁 {{recette?.nbFavoris}} <svg class=\"bi bi-heart-fill\" width=\"1em\"\n                    height=\"1em\" viewBox=\"0 0 16 16\" fill=\"red\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\"\n                        d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n                        clip-rule=\"evenodd\" />\n                </svg>\n            </p>\n            <h2></h2>\n\n            <div id=\"timer\"\n                class=\"wprm-recipe-servings-container wprm-recipe-block-container wprm-recipe-block-container-separate wprm-block-text-normal\">\n                <div id=\"logoRecette\">\n                    <img *ngIf=\"recette?.tempsPreparation != null\" src=\"../../../assets/img/preparation.png\"\n                        width=\"50em\" height=\"50em\"> {{recette?.tempsPreparation}}\n                </div>\n\n                <div id=\"logoRecette\">\n                    <img *ngIf=\"recette?.tempsCuisson != null\" src=\"../../../assets/img/cuisson.png\" width=\"50em\"\n                        height=\"50em\"> {{recette?.tempsCuisson}}\n                </div>\n\n                <div id=\"logoRecette\">\n                    <span id=\"part\" class=\"wprm-recipe-icon wprm-recipe-servings-icon\"><svg\n                            xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n                            y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\">\n                            <g>\n                                <path fill=\"#333333\"\n                                    d=\"M10,0C9.4,0,9,0.4,9,1v4H7V1c0-0.6-0.4-1-1-1S5,0.4,5,1v4H3V1c0-0.6-0.4-1-1-1S1,0.4,1,1v8c0,1.7,1.3,3,3,3v10c0,1.1,0.9,2,2,2s2-0.9,2-2V12c1.7,0,3-1.3,3-3V1C11,0.4,10.6,0,10,0z\">\n                                </path>\n                                <path data-color=\"color-2\" fill=\"#333333\"\n                                    d=\"M19,0c-3.3,0-6,2.7-6,6v9c0,0.6,0.4,1,1,1h2v6c0,1.1,0.9,2,2,2s2-0.9,2-2V1C20,0.4,19.6,0,19,0z\">\n                                </path>\n                            </g>\n                        </svg>\n                    </span>{{recette?.nbrePart}} {{recette?.libellePart}}\n                    <span class=\"wprm-recipe-servings-unit wprm-recipe-details-unit wprm-block-text-normal\">\n                    </span>\n                </div>\n\n\n            </div>\n            <p id=\"btn-p\">\n                <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-danger\"\n                    (click)=\"addFavoris()\">♥ Ajouter la recettes à mes favoris</button> </p>\n\n            \n\n        </div>\n\n    </div>\n    <div class=\"hero-graphic\" *ngFor=\"let img of image\">\n        <img id=\"hero-graphic\" src=\"{{img.lienImage}}\" alt=\"Photo de la recette\">\n\n\n        <!-- always, right? -->\n    </div>\n\n</header>\n\n<main class=\"main-content\">\n\n    <article id=\"hamburger-juicy\">\n\n        <h2 id=\"no-hamburger-juicy\">Ingrédients</h2>\n\n        <p id=\"nbrePart\">Nombre de {{recette?.libellePart}}</p>\n\n        <div class=\"recipe-ingredients__qt-counter\">\n            <div class=\"recipe-ingredients__qt-counter__increment recipe-ingredients__qt-counter__increment-minus\"\n                (click)=\"onProportionLess(recette?.nbrePart - 1)\">-</div>\n            <input class=\"recipe-ingredients__qt-counter__value title-5\" type=\"text\" name=\"\"\n                value=\"{{recette?.nbrePart}}\">\n            <div class=\"recipe-ingredients__qt-counter__increment recipe-ingredients__qt-counter__increment-plus\"\n                (click)=\"onProportionMore(recette?.nbrePart + 1)\">+</div>\n        </div>\n\n        <div id=\"no-hamburger-juicy\">\n            <p>\n\n                <li *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n                    {{ingredient.qte}} {{ingredient.libelleUnite}} {{ingredient.nomIngredient}}\n                </li>\n\n            </p>\n            <p id=\"btn-p\"> <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-info\"\n                    (click)=\"addListeCourses()\">Ajouter les ingrédients à ma liste de course</button></p>\n        </div>\n\n\n\n    </article>\n\n    <article id=\"burger-fourth\">\n\n        <h2>Préparation </h2>\n\n        <pre>{{recette?.etapes}}</pre>\n\n    </article>\n\n    <article>\n\n        <h2>Astuces</h2>\n\n        <pre>{{recette?.astuce}}</pre>\n        <div class=\"byline\" *ngIf=\"recette?.astuce\">\n            <span>By</span> Marine\n        </div>\n        <div id=\"partage\">\n\n            <p> <i class=\"fa fa-lg fa-instagram\"></i> Partagez moi votre résultat 😍 Mentionnez <a\n                    href=\"https://www.instagram.com/marineteroitin/?hl=fr\">@marineteroitin</a> ou taguez <a\n                    href=\"https://www.instagram.com/explore/tags/marinesrecipes/?hl=fr\"> #marinesrecipes</a>!\n            </p>\n        </div>\n\n    </article>\n\n    <article id=\"burger-fourth\">\n\n        <h2>Commentaires</h2>\n<div *ngIf=\"!auth.isLoggedIn()\" class=\"blog-text-color\">\n<span class=\"blog-button-color\" routerLink=\"/register\">Connexion</span> pour rédiger un commentaire.\n</div>\n        <div *ngIf=\"auth.isLoggedIn()\" class=\"card v-card v-sheet theme--light elevation-2\"><span\n                class=\"headline\">Laisser un commentaire</span>\n            <div class=\"sign-in-wrapper\">\n                <p class=\"caption disclaimer\">\n                    <textarea class=\"form-control\" #message=\"ngModel\" [(ngModel)]=\"newCommentaire.message\"\n                        [ngModelOptions]=\"{standalone: true}\" id=\"exampleFormControlTextarea1\" cols=\"45\" rows=\"8\"\n                        aria-required=\"true\" required></textarea>\n                </p>\n                <p class=\"error-message\"></p>\n                <button id=\"envoyer\" (click)=\"addCommentaire(newCommentaire.message)\">Envoyer</button>\n            </div>\n\n\n            <!---->\n        </div>\n\n        <div *ngIf=\"auth.isLoggedIn()\" id=\"comments\" class=\"post-comments elevation-2\">\n\n            <div>\n                <ol class=\"comment-list\">\n                    <li class=\"comment even thread-even depth-1 parent\" *ngFor=\"let commentaire of commentaires\">\n                        <article class=\"comment-body\">\n                            <footer class=\"comment-meta\">\n                                <div *ngIf=\"!commentaire.admin\" class=\"comment-author vcard\">\n                                    <img alt=\"\" src=\"../../../assets/img/avatar.png\"\n                                        class=\"avatar avatar-60 photo grav-hashed grav-hijack\" height=\"60\" width=\"60\">\n                                    <b class=\"fn\">{{commentaire.ecritPar}}</b></div>\n                                <div *ngIf=\"commentaire.admin\" class=\"comment-author vcard\">\n                                    <img id=\"logo\" src=\"../../../assets/img/logo.jpeg\"\n                                        class=\"avatar avatar-60 photo grav-hashed grav-hijack\" height=\"60\" width=\"auto\">\n                                    <b class=\"fn\">{{commentaire.ecritPar}}</b></div>\n                                <!-- .comment-author -->\n\n                                <div class=\"comment-metadata\">\n                                    <a>\n                                        <time datetime=\"2020-04-09T16:20:54+02:00\">\n                                            {{commentaire.dateCommentaire}}</time>\n                                    </a>\n                                </div><!-- .comment-metadata -->\n\n                            </footer><!-- .comment-meta -->\n\n                            <div class=\"comment-content row\">\n                                <div class=\"column1\">\n                                    <p>{{commentaire.message}}</p>\n                                </div>\n                                <div class=\"column2\">\n                                    <button id=\"btnCancel\" *ngIf=\"auth.isAdmin()\" class=\"btn btn-sm btn-danger\"\n                                        (click)=\"deleteCommentaire(commentaire.idCommentaire)\"><i\n                                            class=\" fa fa-trash \"></i></button>\n                                </div>\n                            </div><!-- .comment-content -->\n\n                            <div class=\"comment-btn\" *ngIf=\"commentaire.children.length == 0\">\n                                <form id=\"formCommentaire\" (ngSubmit)=\"addReponse($event, commentaire.idCommentaire)\">\n                                    <textarea name=\"message\" type=\"textarea\" class=\"text\" rows=\"3\"></textarea>\n                                    <div id=\"envoyerCommentaire\">\n                                        <button type=\"submit\">Répondre</button>\n                                    </div>\n                                </form>\n                            </div>\n\n\n                        </article><!-- .comment-body -->\n                        <div *ngIf=\"commentaire.children\" id=\"children\">\n                            <ol class=\"children\">\n                                <li class=\"comment byuser comment-author-healthyclemsy bypostauthor odd alt depth-2\"\n                                    *ngFor=\"let children of commentaire.children ; last as isLast\">\n                                    <article class=\"comment-body\">\n                                        <footer class=\"comment-meta\">\n                                            <div *ngIf=\"!children.admin\" class=\"comment-author vcard\">\n                                                <img alt=\"\" src=\"../../../assets/img/avatar.png\"\n                                                    class=\"avatar avatar-60 photo grav-hashed grav-hijack\" height=\"60\"\n                                                    width=\"60\"> <b class=\"fn\">{{children.ecritPar}}</b></div>\n                                            <div *ngIf=\"children.admin\" class=\"comment-author vcard\">\n                                                <img alt=\"\" src=\"../../../assets/img/logo.jpeg\" id=\"logo\"\n                                                    class=\"avatar avatar-60 photo grav-hashed grav-hijack\" height=\"60\"\n                                                    width=\"auto\"> <b class=\"fn\">{{children.ecritPar}}</b></div>\n                                            <!-- .comment-author -->\n\n                                            <div class=\"comment-metadata\">\n                                                <a>\n                                                    <time datetime=\"2020-04-12T10:36:28+02:00\">\n                                                        {{children.dateCommentaire}}</time>\n                                                </a>\n                                            </div><!-- .comment-metadata -->\n\n                                        </footer><!-- .comment-meta -->\n\n                                        <div class=\"comment-content row\">\n                                            <div class=\"column1\">\n                                                <p>{{children.message}}</p>\n                                            </div>\n\n                                            <div class=\"column2\">\n                                                <button id=\"btnCancel\" *ngIf=\"auth.isAdmin()\"\n                                                    class=\"btn btn-sm btn-danger\"\n                                                    (click)=\"deleteCommentaire(children.idCommentaire)\"><i\n                                                        class=\" fa fa-trash \"></i></button>\n                                            </div>\n                                        </div><!-- .comment-content -->\n\n\n                                        <div class=\"reply\">\n\n                                        </div><!-- #respond -->\n\n                                        <div class=\"comment-btn\" *ngIf=\"isLast && auth.isLoggedIn()\">\n                                            <form id=\"formCommentaire\"\n                                                (ngSubmit)=\"addReponse($event, commentaire.idCommentaire)\">\n                                                <textarea name=\"message\" type=\"textarea\" class=\"text\"\n                                                    rows=\"3\"></textarea>\n                                                <div id=\"envoyerCommentaire\">\n                                                    <button type=\"submit\">Répondre</button>\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    </article><!-- .comment-body -->\n                                </li><!-- #comment-## -->\n                            </ol><!-- .children -->\n                        </div>\n\n                    </li><!-- #comment-## -->\n                </ol><!-- .comment-list -->\n            </div>\n\n        </div>\n\n    </article>\n\n</main>","import { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith, tap } from 'rxjs/operators';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails, AuthentificationService, FavorisDetails, IngredientDetails } from '../../service';\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Router } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { element } from 'protractor';\n\n@Component({\n  selector: 'app-recettes',\n  templateUrl: './recettes.component.html',\n  styleUrls: ['./recettes.component.scss']\n})\nexport class RecettesComponent implements OnInit {\n\n  page: number = 1;\n  \n  public actualCategory: number = null\n  public recipeByCategory: HashTable<RecipeDetails[]> = {}\n  public recipeCategory: RecipeDetails[] = []\n\n  public recettes$: Observable<RecipeDetails[]>\n  public categories: CategoryDetails[]\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  public newFavori: FavorisDetails = {\n    pseudo: '',\n    idRecette: null\n  }\n  public favoris: number[] = []\n\n  public researchForm: FormGroup\n\n  public allRecipe: RecipeDetails[]\n  public allRecipe2: RecipeDetails[]\n\n  constructor(private recetteService: RecettesService, private router: Router, public auth: AuthentificationService, private formBuilder: FormBuilder,\n    private sanitizer: DomSanitizer) {\n    //pour la recherche dynamique\n    this.recettes$ = this.recetteService.getAllRecipesAndIngredients()\n\n    this.recetteService.getAllRecipesAndIngredients().subscribe(data => {\n      data.forEach(element => {\n        console.log(element)\n      })\n      this.allRecipe = data\n      console.log(this.allRecipe)\n      this.allRecipe2 = data\n    })\n\n\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) => {\n        return recipes.filter(recipe =>\n          recipe.ingredients.filter(ingredient =>\n            ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)\n          && recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1\n        )\n      }))\n\n    if (this.auth.isLoggedIn()) {\n      this.newFavori.pseudo = this.auth.getUserDetails().pseudo\n      this.getFavoris()\n    }\n\n    this.recetteService.getAllCategory().subscribe(\n      (categorie: CategoryDetails[]) => {\n        this.categories = categorie\n        categorie.forEach(data => {\n          this.recetteService.getRecipeByCategory(data.idCategorie).subscribe(recipes => {\n            this.recipeCategory = recipes\n            this.recipeByCategory[data.idCategorie] = this.recipeCategory\n          })\n        })\n      })\n    this.initResearchForm()\n  }\n\n  //dans ngOnInit on récupère les données à afficher au lancement de la page\n  ngOnInit(): void {\n\n  }\n\n  ngOnChanges() {\n    this.allRecipe = this.allRecipe2\n    this.initResearchForm()\n  }\n\n  initResearchForm() {\n    this.researchForm = this.formBuilder.group({\n      filter: ['']\n    });\n  }\n\n  research() {\n    const formValue = this.researchForm.value;\n\n    if (this.actualCategory != null) {\n      if (formValue.filter != '') {\n        let researchResult: RecipeDetails[] = []\n        this.recipeByCategory[this.actualCategory].forEach(recipe => {\n          if (recipe.nomRecette.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n            if (!researchResult.includes(recipe)) {\n              researchResult.push(recipe)\n            }\n          }\n          recipe.ingredients.forEach(ingredient => {\n            if (ingredient.nomIngredient.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n              if (!researchResult.includes(recipe)) {\n                researchResult.push(recipe)\n              }\n            }\n          })\n        })\n        this.allRecipe = researchResult\n      } else {\n        this.allRecipe = this.allRecipe2\n      }\n    } else {\n      if (formValue.filter != '') {\n        let researchResult: RecipeDetails[] = []\n\n        this.allRecipe2.forEach(recipe => {\n          if (recipe.nomRecette.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n            if (!researchResult.includes(recipe)) {\n              researchResult.push(recipe)\n            }\n          }\n          recipe.ingredients.forEach(ingredient => {\n            if (ingredient.nomIngredient.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n              if (!researchResult.includes(recipe)) {\n                researchResult.push(recipe)\n              }\n            }\n          })\n        })\n        this.allRecipe = researchResult\n      } else {\n        this.allRecipe = this.allRecipe2\n      }\n    }\n\n\n\n  }\n\n  getAllRecipes() {\n\n    this.actualCategory = null\n\n    this.recettes$ = this.recetteService.getAllRecipesAndIngredients()\n\n    this.recetteService.getAllRecipesAndIngredients().subscribe(data => {\n      this.allRecipe = data\n    })\n\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe =>\n          recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  getImageByIdRecipe(id: number): any {\n    this.recetteService.getImage(id).subscribe(\n      res => {\n        return res.lienImage\n      })\n  }\n\n  getAllCategory() {\n    this.recetteService.getAllCategory().subscribe(\n      (categorie: CategoryDetails[]) => {\n\n        this.categories = categorie\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Il n'y a pas de catégorie.\")\n\n\n          }\n\n        }\n      }\n    )\n  }\n\n  getRecipeByCategory(idCategorie: any) {\n\n    this.actualCategory = idCategorie\n\n    this.recettes$ = this.recetteService.getRecipeByCategory(idCategorie)\n\n    this.recetteService.getRecipeByCategory(idCategorie).subscribe(data => {\n      this.allRecipe = data\n    })\n\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload()\n        })\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Cette recette n'existe pas !\")\n          }\n        }\n      })\n  }\n\n  addFavoris(id: number) {\n    this.newFavori.idRecette = id\n    this.recetteService.addFavoris(this.newFavori).subscribe(res => {\n      this.getFavoris()\n      this.recetteService.getAllRecipesAndIngredients().subscribe(data => {\n        this.allRecipe = data\n      })\n    })\n  }\n\n\n  getFavoris() {\n    this.favoris = []\n    this.recetteService.getFavoris().subscribe(\n      (favoris: RecipeDetails[]) => {\n        console.log(favoris)\n        favoris.forEach(element => {\n          this.favoris.push(element.idRecette)\n\n          console.log(this.favoris)\n        })\n\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Cette user n'a pas de favoris\")\n          }\n        }\n      })\n  }\n\n  deleteFavoris(idRecette: any) {\n    this.recetteService.deleteFavoris(idRecette).subscribe(res => {\n      this.getFavoris()\n      this.recetteService.getAllRecipesAndIngredients().subscribe(data => {\n        this.allRecipe = data\n      })\n    }) /* rafraichit la page */\n  }\n}\n\nexport interface HashTable<T> {\n  [key: number]: T;\n}\n","<ul id=\"menu\" class=\"nav justify-content-center\">\n    <li class=\"nav justify-content-center\">\n        <a class=\"nav-link active\" routerLink=\"/allRecipes\" (click)=\"getAllRecipes()\">Toutes les recettes</a>\n    </li>\n\n    <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n        <a class=\"nav-link\" routerLink=\"/allRecipes\"\n            (click)=\"getRecipeByCategory(categ.idCategorie)\">{{categ.libelleCategorie}}</a>\n    </li>\n    <!--<li>\n        <form class=\"form-inline my-2 my-lg-0\">\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recette..\" aria-label=\"Search\"\n                [formControl]=\"filter\">\n        </form>\n    </li>-->\n</ul>\n\n<br>\n\n<ul class=\"nav justify-content-center\">\n    <li>\n        <form class=\"form-inline\" [formGroup]=\"researchForm\" (ngSubmit)=\"research()\">\n            <div class=\"col text-center\">\n                <input class=\"form-control\" type=\"search\" placeholder=\"Recette, ingrédient..\" aria-label=\"Search\"\n                    formControlName=\"filter\" (click)=\"ngOnChanges()\">\n            </div>\n            <div class=\"col text-center\">\n                <button id=\"validateButton\" type=\"submit\" class=\"btn btn-primary\">Rechercher</button>\n            </div>\n        </form>\n    </li>\n</ul>\n\n<br>\n\n<div class=\"row\">\n    <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"\n        *ngFor=\"let recette of allRecipe | paginate: { id: 'listing_pagination', itemsPerPage:12, currentPage: page}\">\n        <article class=\"card wrap\">\n            <div id=\"photo\" [ngStyle]=\"{'background-image': 'url(&quot;' + recette.lienImage + '&quot;)'}\"\n                (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">\n            </div>\n            <div>\n                <a>\n                </a>\n                <div id=\"titleRecipe\">\n                    <h3 class=\"food\">\n                        {{recette.nomRecette}}\n                    </h3>\n                </div>\n                <div id=\"logoRecette\">\n                    <div class=\"logo\">\n                        <i class=\"fa fa-clock-o\"></i><a class=\"picto-item\" aria-label=\"Temps de préparation\"><i\n                                id=\"textlogo\">{{recette.globalTime}}</i></a>\n                    </div>\n                    <div class=\"logo\">\n                        <i class=\"fa fa-users\"></i><a class=\"picto-item\" aria-label=\"Nombre de parts\"><i\n                                id=\"textlogo\">{{recette.nbrePart}} {{recette.libellePart}}</i></a>\n                    </div>\n                    <div class=\"logo\">\n                        <a class=\"picto-item\" aria-label=\"Nombre de vues\"><i id=\"textlogo\">{{recette?.nbVues}}</i><i\n                                id=\"vue\"> 👁</i></a>\n                    </div>\n                    <div id=\"coeur\" class=\"logo\">\n                        <a *ngIf=\"this.auth.isLoggedIn() && !this.favoris.includes(recette.idRecette)\" id=\"btn\"\n                            (click)=\"addFavoris(recette?.idRecette)\" class=\"picto-item\"\n                            aria-label=\"Ajouter aux favoris\"><i id=\"textlogo\">{{recette?.nbFavoris}} </i><i\n                                class=\"fa fa-heart-o\"></i></a>\n                        <a *ngIf=\"this.auth.isLoggedIn() && this.favoris.includes(recette.idRecette)\" id=\"btn\"\n                            (click)=\"deleteFavoris(recette.idRecette)\" class=\"picto-item\"\n                            aria-label=\"Supprimer des favoris\"><i id=\"textlogo\">{{recette?.nbFavoris}} </i><i\n                                class=\"class= fa fa-heart\"></i></a>\n                    </div>\n                </div>\n            </div>\n        </article>\n    </div>\n</div>\n<div id=\"paginationRecette\">\n    <pagination-controls id='listing_pagination' (pageChange)=\"page = $event\" previousLabel=\"Précédent\"\n        nextLabel=\"Suivant\"></pagination-controls>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-refresh',\n  templateUrl: './refresh.component.html',\n  styleUrls: ['./refresh.component.css']\n})\n\nexport class RefreshComponent implements OnInit {\n\n  constructor(private activatedRoute:ActivatedRoute,private route:Router) { }\n\n  ngOnInit() {\n    this.activatedRoute\n        .queryParams\n        .subscribe(params => {                \n          if(params.url){\n            this.route.navigate([params.url]);\n          }\n        });\n  }\n\n}\n","<p>refresh works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\n\n@Component({\n  selector: 'app-request-reset',\n  templateUrl: './request-reset.component.html',\n  styleUrls: ['./request-reset.component.css']\n})\n\nexport class RequestResetComponent implements OnInit {\n  RequestResetForm: FormGroup;\n  forbiddenEmails: any;\n  errorMessage: string;\n  successMessage: string;\n  IsvalidForm = true;\n\n  constructor(\n    private authService: AuthentificationService,\n    private router: Router,\n   ) {\n\n  }\n\n\n  ngOnInit() {\n\n    this.RequestResetForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email], this.forbiddenEmails),\n    });\n  }\n\n\n  RequestResetUser(form) {\n    console.log(form)\n    if (form.valid) {\n      this.IsvalidForm = true;\n      this.authService.requestReset(this.RequestResetForm.value).subscribe(\n        data => {\n          this.RequestResetForm.reset();\n          this.successMessage = \"Un email vous a été envoyé pour changer votre mot de passe.\";\n          setTimeout(() => {\n            this.successMessage = null;\n            this.router.navigate(['login']);\n          }, 3000);\n        },\n        err => {\n\n          if (err.error.message) {\n            this.errorMessage = err.error.message;\n          }\n        }\n      );\n    } else {\n      this.IsvalidForm = false;\n    }\n  }\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 mt-5 mx-auto\">\n\n                <h1 id=\"lien\" class=\"h3 mb-3 font-weight-normal\">Mot de passe oublié</h1>\n\n                <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n                    <span>{{errorMessage}}</span>\n                </div>\n                <div id=\"successMsg\" *ngIf=\"successMessage\">\n                    <span>{{successMessage}}</span>\n                </div>\n                <form class=\"contact-form\" [formGroup]=\"RequestResetForm\" (ngSubmit)=\"RequestResetUser(RequestResetForm)\" data-toggle=\"validator\" role=\"form\">\n\n                    <div class=\"form-group\">\n                        <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\" placeholder=\"exemple@exemple.fr\" type=\"text\" id=\"email\" formControlName=\"email\" />\n                        <span *ngIf=\"!RequestResetForm.get('email').valid && !IsvalidForm\" class=\"help-block\">Entrer une adresse valide!</span>\n                    </div>\n                    <div class=\"form-group\">\n\n                        <input id=\"send_email\" class=\"btn btn-lg btn-primary\" type=\"submit\" value=\"Valider\">\n\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-response-reset',\n  templateUrl: './response-reset.component.html',\n  styleUrls: ['./response-reset.component.css']\n})\n\nexport class ResponseResetComponent implements OnInit {\n  ResponseResetForm: FormGroup;\n  errorMessage: string;\n  successMessage: string;\n  resetToken: null;\n  CurrentState: any;\n  IsResetFormValid = true;\n  constructor(\n    private authService: AuthentificationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder ) {\n\n    this.CurrentState = 'Wait';\n    this.route.params.subscribe(params => {\n      this.resetToken = params.token;\n      console.log(this.resetToken);\n      this.VerifyToken();\n    });\n  }\n\n\n  ngOnInit() {\n\n    this.Init();\n  }\n\n  VerifyToken() {\n    this.authService.ValidPasswordToken({ resettoken: this.resetToken }).subscribe(\n      data => {\n        this.CurrentState = 'Verified';\n      },\n      err => {\n        this.CurrentState = 'NotVerified';\n      }\n    );\n  }\n\n  Init() {\n    this.ResponseResetForm = this.fb.group(\n      {\n        resettoken: [this.resetToken],\n        newPassword: ['', [Validators.required, Validators.minLength(4)]],\n        confirmPassword: ['', [Validators.required, Validators.minLength(4)]]\n      }\n    );\n  }\n\n  Validate(passwordFormGroup: FormGroup) {\n    const new_password = passwordFormGroup.controls.newPassword.value;\n    const confirm_password = passwordFormGroup.controls.confirmPassword.value;\n\n    if (confirm_password.length <= 0) {\n      return null;\n    }\n\n    if (confirm_password !== new_password) {\n      return {\n        doesNotMatch: true\n      };\n    }\n\n    return null;\n  }\n\n\n  ResetPassword(form) {\n    console.log(form.get('confirmPassword'));\n    if (form.valid) {\n      this.IsResetFormValid = true;\n      this.authService.newPassword(this.ResponseResetForm.value).subscribe(\n        data => {\n          this.ResponseResetForm.reset();\n          this.successMessage = data.message;\n          setTimeout(() => {\n            this.successMessage = null;\n            this.router.navigate(['login']);\n          }, 3000);\n        },\n        err => {\n          if (err.error.message) {\n            this.errorMessage = err.error.message;\n          }\n        }\n      );\n    } else { this.IsResetFormValid = false; }\n  }\n}\n","<div class=\"container-fluid form\">\n    <div class=\"row\" *ngIf=\"CurrentState=='Wait'\">\n        <div class=\"col-md-12  close-form\">\n            <h2> Please Wait...</h2>\n        </div>\n    </div>\n    <div class=\"row\"\n        *ngIf=\"CurrentState=='NotVerified'\">\n        <div class=\"col-md-12\">\n            <h2> Invalid URL.</h2>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"CurrentState=='Verified'\">\n        <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n            <div class=\"card card-signin my-5\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title text-center\">Set New Password</h5>\n                    <div>\n                        <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n                            <span>{{errorMessage}}</span>\n                        </div>\n                        <div id=\"successMsg\" *ngIf=\"successMessage\">\n                            <span>{{successMessage}}</span>\n                        </div>\n                        <form action=\"\" [formGroup]=\"ResponseResetForm\" (ngSubmit)=\"ResetPassword(ResponseResetForm)\">\n                            <div class=\"form-group\">\n                                <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\" placeholder=\"Password\"\n                                    type=\"password\" id=\"password\" formControlName=\"newPassword\" />\n                                <span *ngIf=\"!ResponseResetForm.get('newPassword').valid && !IsResetFormValid\"\n                                    class=\"help-block\">Password is required with atleast 4 characters.</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\"\n                                    placeholder=\"Confirm Password\" type=\"password\" id=\"cpassword\"\n                                    formControlName=\"confirmPassword\" />\n                                <span *ngIf=\"!ResponseResetForm.get('confirmPassword').valid && !IsResetFormValid\"\n                                    class=\"help-block\">. </span>\n                                <span\n                                    *ngIf=\"ResponseResetForm.get('confirmPassword').valid && (ResponseResetForm.get('confirmPassword').value != ResponseResetForm.get('newPassword').value) && !IsResetFormValid\"\n                                    class=\"help-block\">Confirm Password does not match with password.</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <div>\n\n                                    <button type=\"submit\" class=\"  btn btn-primary\">Update\n                                        Password</button>\n\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, TokenPayload } from '../../service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-se-connecter',\n  templateUrl: './se-connecter.component.html',\n  styleUrls: ['./se-connecter.component.css']\n})\nexport class SeConnecterComponent implements OnInit {\n\n  loginForm: FormGroup\n\n  credentials: TokenPayload = {\n    pseudo: '',\n    email: '',\n    mdp: '',\n    mdp2: '',\n    admin: false,\n    abonneNews: true,\n    error: ''\n  }\n\n  constructor(private auth: AuthentificationService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm()\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      mdp: ['', Validators.required],\n    });\n  }\n\n  login() {\n\n    const formValue = this.loginForm.value;\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.mdp = formValue.mdp;\n\n    this.auth.login(this.credentials).subscribe(\n      (res) => {\n        if (res.error == \"Mot de passe et/ou pseudo incorrect\") {\n          alert(res.error);\n        } else {\n          if (this.auth.emailConfirmed()) {\n            this.router.navigateByUrl('/')\n            alert(\"Bienvenue sur Marine's Recipe\")\n          } else {\n            this.auth.logout()\n            window.location.reload()\n            alert(\"Vous devez vérifier votre adresse mail avant de pouvoir vous connecter ! :)\")\n          }\n          \n        }\n      },\n      err => {\n        console.error(err)\n      }\n    )\n  }\n\n  //Fonction appelée lors du clic\n  clicSurBouton(){\n    alert(\"Si vous n'avez pas reçu de mail pour la confirmation de votre adresse mail, veuillez consulter vos mails indésirables. Si le problème persiste, veuillez nous contacter via l'onglet Contact.\");\n  }\n\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 mt-5 mx-auto\">\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"contact-form\">\n                    <h1 id=\"lien\" class=\"h3 mb-3 font-weight-normal\">Se connecter</h1>\n                    <hr>\n                    <div class=\"form-group\">\n                        <label>Pseudo</label>\n                        <input type=\"text\" class=\"form-control\" required name=\"pseudo\" placeholder=\"pseudo\" formControlName=\"pseudo\">\n                    </div>\n                    <hr>\n                    <div class=\"form-group\">\n                        <label>Mot de passe</label>\n                        <input type=\"password\" class=\"form-control\" required name=\"mdp\" placeholder=\"****\" formControlName=\"mdp\">\n                    </div>\n                    <hr>\n    \n                    <input class=\"btn btn-lg btn-primary\" type=\"submit\" value = \"Se connecter\">\n                </form>\n                <hr>\n                <div id=\"lien\">\n                    <a href=\"request-reset-password\">Mot de passe oublié</a>\n                </div>\n                <hr>\n                <div id=\"lien\">\n                  \n                    <button type=\"button\" id=\"btnemail\" (click)=\"clicSurBouton()\">Je n'ai pas reçu de mail pour la confirmation de mon adresse mail</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { UniteDetails, RecettesService} from '../../service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-unite',\n  templateUrl: './unite.component.html',\n  styleUrls: ['./unite.component.scss']\n})\nexport class UniteComponent implements OnInit {\n\n  public unites$: Observable<UniteDetails[]>\n  public unites: UniteDetails[]\n\n  public unite: UniteDetails = {\n    idUnite: null,\n    libelleUnite: ''\n  }\n  \n  public filteredUnite$: Observable<UniteDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recettesService: RecettesService, private router: Router) { \n     //pour la recherche dynamique\n     this.unites$ = this.recettesService.getAllUnite()\n     this.filter = new FormControl('')\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n     this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n       .pipe(map(([unites, filterString]) =>\n         unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllUnite() {\n\n    this.unites$ = this.recettesService.getAllUnite()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n      .pipe(map(([unites, filterString]) =>\n        unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteUnite(idUnite: any) {\n    this.recettesService.deleteUnite(idUnite)\n      .subscribe(res => {\n        this.router.navigate(['/unite'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateUnite(unite: UniteDetails){\n    this.recettesService.updateUnite(unite).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addUnite(){\n    this.recettesService.addUnite(this.unite)\n    window.location.reload()\n  }\n \n\n}\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside id=\"aside\" class=\"sidebar is-visible\">\n                    <div class=”sidebar-content”>\n                        <ul>\n                            <li><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li class=\"active\"><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li><a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a></li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n                            <h1>Unités</h1>\n                        \n                        </div>\n                        \n                        <div class='flex-container'>\n\n                            <div id=\"addUnite\">\n                                <h6 id=\"question \"> Ajouter une nouvelle unité </h6>\n                                <form (submit)=\"addUnite() \">\n                                    <input type=\"text \" class=\"form-control \" name=\"libelleUnite \" placeholder=\"libelle unité \" [(ngModel)]=\"unite.libelleUnite \">\n                        \n                                    <button id=\"btn\" class=\"btn btn-outline-info \" type=\"submit \">Valider</button>\n                        \n                                </form>\n                            </div>\n                        \n                            <div>\n                                <form class=\"form-inline my-2 my-lg-0\">\n                                    <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher une unité\" aria-label=\"Search\" [formControl]=\"filter\">\n                                </form>\n                                <table class=\"table col-md-12 mx-auto\" *ngFor=\"let unite of filteredUnite$ | async\">\n                        \n                                    <tr>\n                                        <td>\n                        \n                                            <form (submit)=\"updateUnite(unite)\">\n                                                <div class=\"form-row align-items-center\">\n                                                    <div class=\"col-auto\">\n                                                        <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"libelleUnite\" value={{unite.libelleUnite}} [(ngModel)]=\"unite.libelleUnite\">\n                                                    </div>\n                        \n                                                    <div class=\"col-auto\">\n                                                        <button id=\"btn\" type=\"submit\" class=\"btn btn-sm btn-warning\"><i class=\"fa fa-pencil\" ></i></button>\n                        \n                        \n                                                    </div>\n                                                    <div class=\"col-auto\">\n                        \n                                                        <button id=\"btn\" class=\"btn btn-sm btn-danger\" (click)=\"deleteUnite(unite.idUnite)\"><i class=\" fa fa-trash \"></i></button>\n                        \n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                            \n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserMdp } from '../../service';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-update-password',\n  templateUrl: './update-password.component.html',\n  styleUrls: ['./update-password.component.css']\n})\nexport class UpdatePasswordComponent implements OnInit {\n\n  credentials: UserMdp = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    mdp: '',\n    newmdp: '',\n    mdp2: '',\n    error: '',\n    success: ''\n  }\n\n  public updatePasswordForm: FormGroup\n\n  constructor(private auth: AuthentificationService, private router: Router, private modalService: NgbModal, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initUpdatePasswordForm()\n  }\n\n  initUpdatePasswordForm() {\n    this.updatePasswordForm = this.formBuilder.group({\n      mdp: ['', Validators.required],\n      newmdp: ['', [Validators.required]],\n      mdp2: ['', Validators.required]\n    });\n  }\n\n  updatePassword() {\n\n    const formValue = this.updatePasswordForm.value;\n\n    this.credentials.mdp = formValue.mdp\n    this.credentials.newmdp = formValue.newmdp\n    this.credentials.mdp2 = formValue.mdp2\n\n    this.initUpdatePasswordForm()\n\n    if (formValue.newmdp != formValue.mdp2) {\n      alert(\"Les nouveaux mots de passe ne sont pas identiques.\");\n      return;\n    }\n\n    this.auth.updatePassword(this.credentials).subscribe((res: any) => {\n      if (res.error == \"Mot de passe incorrect!\") {\n        alert(\"L'ancien mot de passe n'est pas correct.\");\n        return;\n      } else {\n        this.router.navigateByUrl('/profile')\n      }\n    }, (err: any) => {\n      console.log(err);\n    }\n    );\n  }\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form [formGroup]=\"updatePasswordForm\" (ngSubmit)=\"updatePassword()\">\n                <h1 class=\"h3 mb-3 font-weight-normal\">Modifier mon mot de passe</h1>\n                \n                <div class=\"form-group\">\n                    <label>Ancien mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp\" placeholder=\"****\" formControlName=\"mdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Nouveau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"newmdp\" placeholder=\"****\" formControlName=\"newmdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Confirmer le nouveaau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp2\" placeholder=\"****\" formControlName=\"mdp2\">\n                </div>\n                <div class=\"text-center\">\n                    <button class=\"btn btn-outline-info\" type=\"submit\">Enregistrer</button>\n                </div>\n                \n            </form>\n        </div>\n    </div>\n</div>\n</section>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}