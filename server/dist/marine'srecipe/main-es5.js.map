{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_alert/alert.component.ts","webpack:///src/app/_alert/alert.component.html","webpack:///src/app/_alert/alert.model.ts","webpack:///src/app/_alert/alert.module.ts","webpack:///src/app/_alert/alert.service.ts","webpack:///src/app/_alert/index.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/modules/material.module.ts","webpack:///src/app/pages/accueil/accueil.component.ts","webpack:///src/app/pages/accueil/accueil.component.html","webpack:///src/app/pages/ajout-recette/ajout-recette.component.ts","webpack:///src/app/pages/ajout-recette/ajout-recette.component.html","webpack:///src/app/pages/apropos/apropos.component.ts","webpack:///src/app/pages/apropos/apropos.component.html","webpack:///src/app/pages/categories/categories.component.ts","webpack:///src/app/pages/categories/categories.component.html","webpack:///src/app/pages/contact/contact.component.ts","webpack:///src/app/pages/contact/contact.component.html","webpack:///src/app/pages/gerer-le-menu/gerer-le-menu.component.ts","webpack:///src/app/pages/gerer-le-menu/gerer-le-menu.component.html","webpack:///src/app/pages/gerer-les-recettes/gerer-les-recettes.component.ts","webpack:///src/app/pages/gerer-les-recettes/gerer-les-recettes.component.html","webpack:///src/app/pages/ingredients/ingredients.component.ts","webpack:///src/app/pages/ingredients/ingredients.component.html","webpack:///src/app/pages/inscrire/inscrire.component.ts","webpack:///src/app/pages/inscrire/inscrire.component.html","webpack:///src/app/pages/ma-liste-de-courses/ma-liste-de-courses.component.ts","webpack:///src/app/pages/ma-liste-de-courses/ma-liste-de-courses.component.html","webpack:///src/app/pages/mentions-legales/mentions-legales.component.ts","webpack:///src/app/pages/mentions-legales/mentions-legales.component.html","webpack:///src/app/pages/menu/menu.component.ts","webpack:///src/app/pages/menu/menu.component.html","webpack:///src/app/pages/mes-commentaires/mes-commentaires.component.ts","webpack:///src/app/pages/mes-commentaires/mes-commentaires.component.html","webpack:///src/app/pages/mes-recettes/mes-recettes.component.ts","webpack:///src/app/pages/mes-recettes/mes-recettes.component.html","webpack:///src/app/pages/modifier-recette/modifier-recette.component.ts","webpack:///src/app/pages/modifier-recette/modifier-recette.component.html","webpack:///src/app/pages/mon-profile/mon-profile.component.ts","webpack:///src/app/pages/mon-profile/mon-profile.component.html","webpack:///src/app/pages/recette/recette.component.ts","webpack:///src/app/pages/recette/recette.component.html","webpack:///src/app/pages/recettes/recettes.component.ts","webpack:///src/app/pages/recettes/recettes.component.html","webpack:///src/app/pages/refresh/refresh.component.ts","webpack:///src/app/pages/refresh/refresh.component.html","webpack:///src/app/pages/request-reset/request-reset.component.ts","webpack:///src/app/pages/request-reset/request-reset.component.html","webpack:///src/app/pages/response-reset/response-reset.component.ts","webpack:///src/app/pages/response-reset/response-reset.component.html","webpack:///src/app/pages/se-connecter/se-connecter.component.ts","webpack:///src/app/pages/se-connecter/se-connecter.component.html","webpack:///src/app/pages/statistiques/statistiques.component.ts","webpack:///src/app/pages/statistiques/statistiques.component.html","webpack:///src/app/pages/unite/unite.component.ts","webpack:///src/app/pages/unite/unite.component.html","webpack:///src/app/pages/update-password/update-password.component.ts","webpack:///src/app/pages/update-password/update-password.component.html","webpack:///src/app/service/admin-auth.service.ts","webpack:///src/app/service/auth-guard.service.ts","webpack:///src/app/service/authentification.service.ts","webpack:///src/app/service/categories/categories.service.ts","webpack:///src/app/service/commentaires/commentaires.service.ts","webpack:///src/app/service/favoris/favoris.service.ts","webpack:///src/app/service/images/images.service.ts","webpack:///src/app/service/index.ts","webpack:///src/app/service/ingredients/ingredients.service.ts","webpack:///src/app/service/notifications/notification.service.ts","webpack:///src/app/service/recettes/recettes.service.ts","webpack:///src/app/service/shoppingList/shopping-list.service.ts","webpack:///src/app/service/statistiques/statistiques.service.ts","webpack:///src/app/service/unites/unites.service.ts","webpack:///src/app/utils/Utils.js","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","router","alertService","fade","alerts","alertSubscription","onAlert","subscribe","alert","message","filter","x","keepAfterRouteChange","forEach","push","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","find","classes","alertTypeClass","Success","Info","Warning","type","join","selector","templateUrl","Alert","init","Object","assign","AlertType","AlertModule","imports","declarations","AlertService","subject","defaultId","asObservable","pipe","options","next","providedIn","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","scrollPositionRestoration","auth","AppComponent","notifService","recetteService","toastr","loadData","getEnabledNotifs","data","notifs","text","css","show","toastClass","onTap","cleanNotif","updateNotif","currentlyActive","element","getRecipeById","idRecette","recipe","showInfo","nomRecette","idNotification","pseudo","styleUrls","AppModule","disableTimeOut","positionClass","providers","bootstrap","modules","MaterialModule","AccueilComponent","categoriesService","menu","petitDej","repas","douceur","customOptions","autoplay","autoplayTimeout","loop","mouseDrag","touchDrag","pullDrag","dots","navSpeed","navText","responsive","items","nav","getMostPopularRecipes","getLatestReceipes","getAllCategory","categories","getAllRecipes","recettes","getPetitDej","getRepas","getDouceur","getMenu","idMenu","err","status","console","log","idCategorie","navigate","mostPopularRecipes","latestRecipes","recette","updateNbView","res","notificationVue","window","location","reload","notif","addNotification","AjoutRecetteComponent","formBuilder","modalService","http","ingredientsService","unitesService","imagesService","imageCompress","ingredients","idImage","etapes","nbrePart","libellePart","tempsPreparation","tempsCuisson","astuce","mot","selectIngredient","newIngredient","nomIngredient","dropdownList","selectedItems","fileToUpload","getAllIngredients","disabled","getAllUnite","unites","dropdownSettings","singleSelection","idField","textField","enableCheckAll","itemsShowLimit","allowSearchFilter","searchPlaceholderText","initRecipeForm","createIngredientsForm","onChanges","fileName","file","target","files","name","reader","FileReader","onload","localUrl","result","compressFile","readAsDataURL","image","orientation","sizeOfOriginalImage","byteCount","warn","imgResultAfterCompress","localCompressedURl","sizeOFCompressedImage","imageName","imageBlob","dataURItoBlob","split","imageFile","File","images","dataURI","byteString","atob","arrayBuffer","ArrayBuffer","length","int8Array","Uint8Array","i","charCodeAt","blob","Blob","formData","FormData","append","post","formValue","recipeForm","value","ingredientFormValue","ingredientForm","ingredient","qte","addImage","createRecipe","addIngredientsAndCategoryToNewRecipe","listAbonneNews$","getAbonneNews","sentEmailToNewRecipe","navigateByUrl","group","required","max","array","createIngredientForm","idIngredient","compose","min","idUnite","default","valueChanges","val","get","content","open","ariaLabelledBy","addIngredient","selectFile","AProposComponent","CategoriesComponent","recettesService","categorie","libelleCategorie","deleteCategory","queryParams","refresh","Date","getTime","updateCategory","error","addCategory","ContactComponent","contactSend","nameUser","emailUser","initContactForm","isLoggedIn","getUserDetails","email","contactForm","sendEmailContact","sendEmail","GererLeMenuComponent","getAllRecipesForMenu","recipes","allRecipes","updatePetitDej","updateRepas","updateDouceur","updateMenu","GererLesRecettesComponent","media","opened","over","expandHeight","collapseHeight","displayMode","recettes$","filter$","filteredRecipe$","filterString","toLowerCase","indexOf","currentPage","deleteRecipe","page","scrollTo","onPageChange","IngredientsComponent","libelleUnite","ingredients$","filteredIngredient$","deleteIngredient","updateIngredient","MyErrorStateMatcher","control","form","invalidCtrl","invalid","parent","dirty","invalidParent","InscrireComponent","credentials","mdp","mdp2","admin","abonneNews","pseudos","emails","matcher","mdpForm","password","confirmPassword","validator","checkPasswords","getAllPseudo","getAllEmail","initForm","userForm","pass","controls","confirmPass","notSame","mdpFormValue","register","logout","notificationInscription","notificationAbonne","MaListeDeCoursesComponent","shoppingListService","ingredientService","ingredientToDelete","idIngredientList","ingredientToAdd","getListeCourses","restIngredients$","getRestListeCourses","allIngredient","deleteListeCourse","url","addIngredientShoppingList","getInitData","MentionsLegalesComponent","MenuComponent","allRecipe","newRecetteList","pseudoUser","idRecipeList","complet","menuAdmin","getListRecipesOfAdmin","listAdmin","addRecipeToList","getListRecipes","list","getAllRecipesAsc","element2","deleteRecipeOfList","deleteAllRecipeOfList","changeStateOfRecipe","updateNbViewMenu","MesCommentairesComponent","commentairesService","commentaireToModify","ecritPar","getCommentaireUser","commentaires","weekday","year","month","day","hour","minute","d","dateCommentaire","toLocaleString","concerne","modifyCommentaire","idCommentaire","deleteCommentaire","commentaire","MesRecettesComponent","favorisService","actualCategory","recipeByCategory","recipeCategory","getFavoris","allRecipe2","getFavorisByCategory","initResearchForm","researchForm","researchResult","getRecipeByCategory","deleteFavoris","research","ngOnChanges","ModifierRecetteComponent","route","parseInt","snapshot","paramMap","datePublication","nbFavoris","nbVues","lienImage","imageToModify","getIngredientsByIdRecette","getImage","getRestIngredients","allIngredients","allUnites","getRestCategory","allCategories","getCategory","image2","addImageToRecipe","getCategoryByRecette","updateRecipeName","updateSteps","updateAstuce","updateDescription","updatePart","updateTemps","updateRecipeIng","deleteIngredientRecipe","deleteRecipeCategory","addRecipeCategory","addIngredientRecette","MonProfileComponent","success","profile","user","params","updateProfile","bind","deleteProfile","RecetteComponent","newFavori","newListeCourses","listIngredients","newCommentaire","newResponse","recipeList","isFavori","isInMenu","nbrePartInitial","ingredientQteInitial","getCommentaireRecipe","allRecipeList","getUtiliserIngredientsByIdRecette","qtes","getUniteById","unite","addFavoris","notificationFavori","addListeCourses","addCommentaire","res2","addImageToCommentaire","notificationCommentaire","searchValue","updateQte","onProportionLess","onProportionMore","RecettesComponent","favoris","getAllRecipesAndIngredients","document","body","scrollTop","RefreshComponent","activatedRoute","RequestResetComponent","authService","IsvalidForm","RequestResetForm","forbiddenEmails","valid","requestReset","reset","successMessage","errorMessage","RequestResetUser","ResponseResetComponent","fb","IsResetFormValid","CurrentState","resetToken","token","VerifyToken","Init","ValidPasswordToken","resettoken","ResponseResetForm","newPassword","minLength","passwordFormGroup","doesNotMatch","SeConnecterComponent","loginForm","login","clicSurBouton","StatistiquesComponent","statService","getNbVuesTot","nbVuesTot","getNbCommentairesTot","nbCommentairesTot","getNbUsers","nbUsers","getNbAbonnes","nbAbonnes","getUsers","users","warning","UniteComponent","unites$","filteredUnite$","deleteUnite","updateUnite","addUnite","UpdatePasswordComponent","newmdp","initUpdatePasswordForm","updatePasswordForm","updatePassword","AdminAuthService","isAdmin","AuthGuardService","AuthentificationService","localStorage","setItem","getItem","getToken","payload","JSON","parse","exp","now","emailConfirmed","base","request","saveToken","headers","Authorization","removeItem","operation","put","delete","_","handleError","to","infos","CategoriesService","CommentairesService","getUser","bool","getReponseCommentaireRecipe","children","FavorisService","globalTime","ImagesService","IngredientsService","utiliserIngredients","toString","NotificationService","idNotif","RecettesService","categoryService","categ","vege","ShoppingListService","StatistiquesService","UnitesService","roundDecimal","nombre","precision","tmp","Math","pow","round","addTimes","startTime","endTime","times","a","b","isNaN","hours","minutes","seconds","m","h","slice","addHours","time","dateTime","temps","setHours","setMinutes","setSeconds","getHours","getMinutes","getSeconds","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, Input } from \"@angular/core\";\nimport { Router, NavigationStart } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\n\nimport { Alert, AlertType } from \"./alert.model\";\nimport { AlertService } from \"./alert.service\";\n\n@Component({ selector: \"alert\", templateUrl: \"alert.component.html\" })\nexport class AlertComponent implements OnInit, OnDestroy {\n  @Input() id = \"default-alert\";\n  @Input() fade = true;\n\n  alerts: Alert[] = [];\n  alertSubscription: Subscription;\n  routeSubscription: Subscription;\n\n  constructor(private router: Router, private alertService: AlertService) {}\n\n  ngOnInit() {\n    // subscribe to new alert notifications\n    this.alertSubscription = this.alertService\n      .onAlert(this.id)\n      .subscribe((alert) => {\n        // clear alerts when an empty alert is received\n        if (!alert.message) {\n          // filter out alerts without 'keepAfterRouteChange' flag\n          this.alerts = this.alerts.filter((x) => x.keepAfterRouteChange);\n\n          // remove 'keepAfterRouteChange' flag on the rest\n          this.alerts.forEach((x) => delete x.keepAfterRouteChange);\n          return;\n        }\n\n        // add alert to array\n        this.alerts.push(alert);\n\n        // auto close alert if required\n        if (alert.autoClose) {\n          setTimeout(() => this.removeAlert(alert), 3000);\n        }\n      });\n\n    // clear alerts on location change\n    this.routeSubscription = this.router.events.subscribe((event) => {\n      if (event instanceof NavigationStart) {\n        this.alertService.clear(this.id);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to avoid memory leaks\n    this.alertSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n\n  removeAlert(alert: Alert) {\n    // check if already removed to prevent error on auto close\n    if (!this.alerts.includes(alert)) return;\n\n    if (this.fade) {\n      // fade out alert\n      this.alerts.find((x) => x === alert).fade = true;\n\n      // remove alert after faded out\n      setTimeout(() => {\n        this.alerts = this.alerts.filter((x) => x !== alert);\n      }, 250);\n    } else {\n      // remove alert\n      this.alerts = this.alerts.filter((x) => x !== alert);\n    }\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) return;\n\n    const classes = [\"alert\", \"alert-dismissable\"];\n\n    const alertTypeClass = {\n      [AlertType.Success]: \"alert alert-success\",\n      [AlertType.Error]: \"alert alert-danger\",\n      [AlertType.Info]: \"alert alert-info\",\n      [AlertType.Warning]: \"alert alert-warning\",\n    };\n\n    classes.push(alertTypeClass[alert.type]);\n\n    if (alert.fade) {\n      classes.push(\"fade\");\n    }\n\n    return classes.join(\" \");\n  }\n}\n","<div *ngFor=\"let alert of alerts\" class=\"{{ cssClass(alert) }}\">\n  <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n  <span [innerHTML]=\"alert.message\"></span>\n</div>\n","export class Alert {\n  id: string;\n  type: AlertType;\n  message: string;\n  autoClose: boolean;\n  keepAfterRouteChange: boolean;\n  fade: boolean;\n\n  constructor(init?: Partial<Alert>) {\n    Object.assign(this, init);\n  }\n}\n\nexport enum AlertType {\n  Success,\n  Error,\n  Info,\n  Warning,\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { AlertComponent } from \"./alert.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AlertComponent],\n  exports: [AlertComponent],\n})\nexport class AlertModule {}\n","import { Injectable } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\nimport { Alert, AlertType } from \"./alert.model\";\n\n@Injectable({ providedIn: \"root\" })\nexport class AlertService {\n  private subject = new Subject<Alert>();\n  private defaultId = \"default-alert\";\n\n  // enable subscribing to alerts observable\n  onAlert(id = this.defaultId): Observable<Alert> {\n    return this.subject.asObservable().pipe(filter((x) => x && x.id === id));\n  }\n\n  // convenience methods\n  success(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n  }\n\n  error(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n  }\n\n  info(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n  }\n\n  warn(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n  }\n\n  // main alert method\n  alert(alert: Alert) {\n    alert.id = alert.id || this.defaultId;\n    this.subject.next(alert);\n  }\n\n  // clear alerts\n  clear(id = this.defaultId) {\n    this.subject.next(new Alert({ id }));\n  }\n}\n","export * from \"./alert.module\";\nexport * from \"./alert.service\";\nexport * from \"./alert.model\";\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccueilComponent } from './pages/accueil/accueil.component';\nimport { SeConnecterComponent } from './pages/se-connecter/se-connecter.component';\nimport { InscrireComponent } from './pages/inscrire/inscrire.component';\nimport { MonProfileComponent } from './pages/mon-profile/mon-profile.component';\nimport { AuthGuardService, AdminAuthService } from './service';\nimport { UpdatePasswordComponent } from './pages/update-password/update-password.component';\nimport { AProposComponent } from './pages/apropos/apropos.component';\nimport { RecettesComponent } from './pages/recettes/recettes.component';\nimport { RecetteComponent } from './pages/recette/recette.component';\nimport { GererLesRecettesComponent } from './pages/gerer-les-recettes/gerer-les-recettes.component';\nimport { CategoriesComponent } from './pages/categories/categories.component';\nimport { IngredientsComponent } from './pages/ingredients/ingredients.component';\nimport { AjoutRecetteComponent } from './pages/ajout-recette/ajout-recette.component';\nimport { UniteComponent } from './pages/unite/unite.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { MaListeDeCoursesComponent } from './pages/ma-liste-de-courses/ma-liste-de-courses.component';\nimport { MesCommentairesComponent } from './pages/mes-commentaires/mes-commentaires.component';\nimport { MesRecettesComponent } from './pages/mes-recettes/mes-recettes.component';\nimport { ModifierRecetteComponent } from './pages/modifier-recette/modifier-recette.component';\nimport { RequestResetComponent } from './pages/request-reset/request-reset.component';\nimport { ResponseResetComponent } from './pages/response-reset/response-reset.component';\nimport { RefreshComponent } from './pages/refresh/refresh.component';\nimport { MentionsLegalesComponent } from './pages/mentions-legales/mentions-legales.component';\nimport { GererLeMenuComponent } from './pages/gerer-le-menu/gerer-le-menu.component';\nimport { MenuComponent } from './pages/menu/menu.component';\nimport { StatistiquesComponent } from './pages/statistiques/statistiques.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AccueilComponent },\n  { path: 'login', component: SeConnecterComponent },\n  { path: 'register', component: InscrireComponent },\n  { path: 'profile', component: MonProfileComponent, canActivate: [AuthGuardService] },\n  { path: 'update-password', component: UpdatePasswordComponent, canActivate: [AuthGuardService] },\n  { path: 'aboutMe', component: AProposComponent },\n  { path: 'allRecipes', component: RecettesComponent },\n  { path: 'recipe/:id', component: RecetteComponent },\n  { path: 'handleRecipes', component: GererLesRecettesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'category', component: CategoriesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'ingredient', component: IngredientsComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'add-recipe', component: AjoutRecetteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'unite', component: UniteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'contact', component: ContactComponent},\n  { path: 'shoppingList', component: MaListeDeCoursesComponent, canActivate: [AuthGuardService] },\n  { path: 'comment', component: MesCommentairesComponent, canActivate: [AuthGuardService] },\n  { path: 'favorites', component: MesRecettesComponent, canActivate: [AuthGuardService] },\n  { path: 'updateRecipe/:id', component: ModifierRecetteComponent, canActivate: [AdminAuthService, AuthGuardService] },\n  { path: 'request-reset-password', component: RequestResetComponent },\n  { path: 'response-reset-password/:token', component: ResponseResetComponent },\n  { path: 'refresh', component: RefreshComponent },\n  { path: 'rules', component: MentionsLegalesComponent },\n  { path: 'handleMenu', component: GererLeMenuComponent },\n  { path: 'menu', component: MenuComponent},\n  { path: 'statistiques', component: StatistiquesComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {scrollPositionRestoration: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild } from \"@angular/core\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { take } from \"rxjs/operators\";\nimport { Notification } from \"./models\";\nimport { RecettesService } from \"./service\";\nimport { AuthentificationService } from \"./service/authentification.service\";\nimport { NotificationService } from \"./service/notifications/notification.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  notifs: Notification[];\n\n  constructor(\n    public auth: AuthentificationService,\n    public notifService: NotificationService,\n    public recetteService: RecettesService,\n    private toastr: ToastrService\n  ) {\n    this.loadData();\n  }\n\n  loadData() {\n    this.notifService.getEnabledNotifs().subscribe((data) => {\n      this.notifs = data;\n    });\n  }\n\n  showInfo(text, id, css) {\n    this.toastr\n      .show(text, null, {\n        toastClass: css + \" ngx-toastr\",\n      })\n      .onTap.pipe(take(1))\n      .subscribe(() => this.cleanNotif(id));\n  }\n\n  cleanNotif(id) {\n    this.notifService.updateNotif(id).subscribe(() => {\n      this.loadData();\n    });\n  }\n\n  showNotif() {\n    if (this.toastr.currentlyActive == 0) {\n      this.notifs.forEach((element) => {\n        if (element.type === \"vue\") {\n          this.recetteService\n            .getRecipeById(element.idRecette)\n            .subscribe((recipe) => {\n              this.showInfo(\n                \"La recette: \"+recipe.nomRecette + \" a été consulté\",\n                element.idNotification,\n                \"view-class\"\n              );\n            });\n        } else if (element.type === \"user\") {\n          this.showInfo(\n           element.pseudo + \" vient de s'inscrire.\",\n            element.idNotification,\n            \"user-class\"\n          );\n        } else if (element.type === \"abonne\") {\n          this.showInfo(\n            element.pseudo + \" est maintenant abonné à la newsletter.\",\n            element.idNotification,\n            \"toast-success\"\n          );\n        } else if (element.type === \"commentaire\") {\n          this.recetteService\n            .getRecipeById(element.idRecette)\n            .subscribe((recipe) => {\n              this.showInfo(\n             \n                  element.pseudo + \" a commenté la recette: \" +    recipe.nomRecette ,\n                element.idNotification,\n                \"toast-info\"\n              );\n            });\n        } else if (element.type === \"favori\") {\n          this.recetteService\n            .getRecipeById(element.idRecette)\n            .subscribe((recipe) => {\n              this.showInfo(\n                element.pseudo +\n                  \" a rajouté une nouvelle recette dans ses favoris : \" +\n                  recipe.nomRecette,\n                element.idNotification,\n                \"toast-error\"\n              );\n            });\n        }\n      });\n      /*this.toastr\n        .show(\"Cliquez ici pour enlever toutes les notifs !\")\n        .onTap.pipe(take(1))\n        .subscribe(() => this.toastr.clear());*/\n    } else {\n      this.toastr.clear();\n    }\n    this.loadData();\n  }\n}\n","<script>\n  //pour que la navbar responsive se referme lorsqu'on sélectionne un ongle\n  $(document).on(\"click\", \".navbar-collapse.show\", function (e) {\n    $(this).collapse(\"hide\");\n  });\n</script>\n<script>\n  $(document).on(\"click\", function (e) {\n    e.preventDefault();\n    var $item = $(\".rad-dropmenu-item\");\n    if ($item.hasClass(\"active\")) {\n      $item.removeClass(\"active\");\n    }\n  });\n\n  $(\"a.rad-menu-item\").on(\"click\", function (e) {\n    var $item = $(\"ul.rad-dropmenu-item\");\n    if (!$item.hasClass(\"active\")) {\n      $item.toggleClass(\"active\");\n    }\n  });\n</script>\n\n<!--script pour les liens de partages sur les réseaux sociaux-->\n<script\n  type=\"text/javascript\"\n  src=\"https://platform-api.sharethis.com/js/sharethis.js#property=5e8ef1fbc08fd00012f1a697&product=inline-share-buttons\"\n  async=\"async\"\n></script>\n\n<script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script>\n\n<link\n  href=\"//db.onlinewebfonts.com/c/ca42b7ce0d708ee0817789585c449739?family=PeachesandCreamRegularW00\"\n  rel=\"stylesheet\"\n  type=\"text/css\"\n/>\n\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" role=\"navigation\">\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarNavDropdown\"\n    aria-controls=\"navbarNavDropdown\"\n    aria-expanded=\"false\"\n    aria-label=\"Toogle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <img\n    src=\"../assets/img/logo.jpeg\"\n    class=\"rounded float-left\"\n    alt=\"logo\"\n    id=\"logo\"\n  />\n  <div\n    class=\"collapse navbar-collapse justify-content-md-center\"\n    id=\"navbarNavDropdown\"\n  >\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/\">Accueil </a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/allRecipes\">Recettes</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/aboutMe\">À propos</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a\n          class=\"nav-link\"\n          [routerLink]=\"['/refresh']\"\n          [queryParams]=\"{ url: 'contact' }\"\n          skipLocationChange=\"true\"\n          >Contact</a\n        >\n      </li>\n\n      <li\n        class=\"nav-item\"\n        *ngIf=\"auth.isLoggedIn() && auth.isAdmin()\"\n        style=\"display: flex;\"\n      >\n        <a class=\"nav-link\" (click)=\"showNotif()\" skipLocationChange=\"true\"\n          >Notifications</a\n        >\n        <span class=\"notification\">\n          <i\n            class=\"glyphicon glyphicon-bell\"\n            [ngClass]=\"notifs?.length != 0 ? 'notification-icon' : ' '\"\n          >\n            <span *ngIf=\"notifs?.length != 0\">{{ notifs?.length }}</span>\n          </i>\n        </span>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n        <a\n          class=\"nav-link\"\n          [routerLink]=\"['/refresh']\"\n          [queryParams]=\"{ url: 'login' }\"\n          skipLocationChange=\"true\"\n          >Se connecter</a\n        >\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n        <a\n          class=\"nav-link\"\n          [routerLink]=\"['/refresh']\"\n          [queryParams]=\"{ url: 'register' }\"\n          skipLocationChange=\"true\"\n          >S'inscrire</a\n        >\n      </li>\n\n      <li class=\"nav-item dropdown\" *ngIf=\"auth.isLoggedIn()\">\n        <a\n          class=\"nav-link dropdown-toggle\"\n          id=\"navbarDropdownMenuLink\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          {{ auth.getUserDetails()?.pseudo }}\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n          <a class=\"dropdown-item\" routerLink=\"/profile\">Mon profil</a>\n          <a class=\"dropdown-item\" routerLink=\"/favorites\">Mes recettes ♥</a>\n          <a class=\"dropdown-item\" routerLink=\"/menu\">Menu de la semaine</a>\n          <a class=\"dropdown-item\" routerLink=\"/shoppingList\"\n            >Ma liste de course</a\n          >\n          <a class=\"dropdown-item\" routerLink=\"/comment\">Mes commentaires</a>\n          <a\n            class=\"dropdown-item\"\n            *ngIf=\"auth.isAdmin()\"\n            routerLink=\"/handleRecipes\"\n            >Gerer les recettes</a\n          >\n          <a\n            class=\"dropdown-item\"\n            *ngIf=\"auth.isAdmin()\"\n            routerLink=\"/statistiques\"\n            >Statistiques</a\n          >\n          <a class=\"dropdown-item\" routerLink=\"\" (click)=\"auth.logout()\"\n            >Deconnexion</a\n          >\n        </div>\n      </li>\n      <!--<div class=\"col\">\n                <div ngbDropdown class=\"d-inline-block\">\n                  <a id=\"dropdownBasic1\" ngbDropdownToggle><i class=\"fa fa-bell-o\"><span class=\"rad-menu-badge\">49</span></i></a>\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n                    <button ngbDropdownItem>Action - 1</button>\n                    <button ngbDropdownItem>Another Action</button>\n                    <button ngbDropdownItem>Something else is here</button>\n                  </div>\n                </div>\n              </div>-->\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n\n<!--footer-->\n<!--logo insta-->\n<link\n  rel=\"stylesheet\"\n  href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\"\n  type=\"text/css\"\n/>\n\n<footer>\n  <div class=\"dark-line\">\n    <h2>Marine's recipes |</h2>\n    <p>\"Eat good, feel good\" ||</p>\n    <div class=\"social\">\n      <a href=\"https://pin.it/3m5tTu0\"><i class=\"fa fa-lg fa-pinterest\"></i></a>\n      <a id=\"message\" href=\"https://www.instagram.com/marineteroitin/?hl=fr\"\n        ><i class=\"fa fa-lg fa-instagram\"></i\n      ></a>\n      <a routerLink=\"/contact\" id=\"message\"\n        ><i class=\"fa fa-lg fa-envelope\"></i\n      ></a>\n    </div>\n    <p>\n      <a id=\"ment\" routerLink=\"/rules\">Mentions légales</a>\n    </p>\n    <span class=\"copyright\"\n      ><a\n        >© Concocté avec ♥ par Marine Téroitin & Luca Debeir • Tous droits\n        réservés marinesrecipes.fr\n      </a></span\n    >\n  </div>\n</footer>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport {} from \"@angular/cdk\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { InscrireComponent } from \"./pages/inscrire/inscrire.component\";\nimport { SeConnecterComponent } from \"./pages/se-connecter/se-connecter.component\";\nimport { AccueilComponent } from \"./pages/accueil/accueil.component\";\nimport {\n  AuthentificationService,\n  AuthGuardService,\n  AdminAuthService,\n  RecettesService,\n} from \"./service\";\nimport { ContactComponent } from \"./pages/contact/contact.component\";\nimport { GererLesRecettesComponent } from \"./pages/gerer-les-recettes/gerer-les-recettes.component\";\nimport { MaListeDeCoursesComponent } from \"./pages/ma-liste-de-courses/ma-liste-de-courses.component\";\nimport { MesCommentairesComponent } from \"./pages/mes-commentaires/mes-commentaires.component\";\nimport { MesRecettesComponent } from \"./pages/mes-recettes/mes-recettes.component\";\nimport { MonProfileComponent } from \"./pages/mon-profile/mon-profile.component\";\nimport { RecettesComponent } from \"./pages/recettes/recettes.component\";\nimport { UpdatePasswordComponent } from \"./pages/update-password/update-password.component\";\nimport { AProposComponent } from \"./pages/apropos/apropos.component\";\nimport { RecetteComponent } from \"./pages/recette/recette.component\";\nimport { IngredientsComponent } from \"./pages/ingredients/ingredients.component\";\nimport { CategoriesComponent } from \"./pages/categories/categories.component\";\nimport { UniteComponent } from \"./pages/unite/unite.component\";\nimport { AjoutRecetteComponent } from \"./pages/ajout-recette/ajout-recette.component\";\nimport { NgMultiSelectDropDownModule } from \"ng-multiselect-dropdown\";\nimport { ModifierRecetteComponent } from \"./pages/modifier-recette/modifier-recette.component\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { RequestResetComponent } from \"./pages/request-reset/request-reset.component\";\nimport { ResponseResetComponent } from \"./pages/response-reset/response-reset.component\";\nimport { RefreshComponent } from \"./pages/refresh/refresh.component\";\nimport { MentionsLegalesComponent } from \"./pages/mentions-legales/mentions-legales.component\";\n\nimport { NgxPaginationModule } from \"ngx-pagination\";\nimport { OwlModule } from \"ngx-owl-carousel\";\nimport { CarouselModule } from \"ngx-owl-carousel-o\";\nimport { NgxImageCompressService } from \"ngx-image-compress\";\n\nimport { MaterialModule } from \"./modules/material.module\";\nimport { GererLeMenuComponent } from \"./pages/gerer-le-menu/gerer-le-menu.component\";\nimport { MenuComponent } from \"./pages/menu/menu.component\";\nimport { StatistiquesComponent } from \"./pages/statistiques/statistiques.component\";\nimport { AlertModule } from \"./_alert\";\nimport { ToastrModule } from \"ngx-toastr\";\nimport { BsDropdownModule } from \"ngx-bootstrap/dropdown\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AProposComponent,\n    AccueilComponent,\n    MonProfileComponent,\n    InscrireComponent,\n    SeConnecterComponent,\n    ContactComponent,\n    GererLesRecettesComponent,\n    MaListeDeCoursesComponent,\n    MesCommentairesComponent,\n    MesRecettesComponent,\n    RecettesComponent,\n    UpdatePasswordComponent,\n    RecetteComponent,\n    IngredientsComponent,\n    CategoriesComponent,\n    UniteComponent,\n    AjoutRecetteComponent,\n    ModifierRecetteComponent,\n    RequestResetComponent,\n    ResponseResetComponent,\n    RefreshComponent,\n    MentionsLegalesComponent,\n    GererLeMenuComponent,\n    MenuComponent,\n    StatistiquesComponent,\n  ],\n  imports: [\n    BsDropdownModule.forRoot(),\n    AlertModule,\n    MaterialModule,\n    CarouselModule,\n    OwlModule,\n    NgxPaginationModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot({\n      disableTimeOut: true,\n      positionClass: \"toast-top-left\",\n    }),\n  ],\n  providers: [\n    AuthGuardService,\n    AuthentificationService,\n    RecettesService,\n    AdminAuthService,\n    NgxImageCompressService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { NgModule } from '@angular/core';\n\nconst modules = [\n    MatSidenavModule,\n    MatListModule,\n    MatExpansionModule,\n    FlexLayoutModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule\n];\n\n@NgModule({\n    imports: [modules],\n    exports: [modules]\n})\nexport class MaterialModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RecettesService, CategoriesService } from '../../service';\nimport { RecipeDetails, Menu, CategoryDetails } from '../../models';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { OwlOptions } from 'ngx-owl-carousel-o';\nimport { Notification } from \"src/app/models\";\nimport { NotificationService } from \"src/app/service/notifications/notification.service\";\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.scss']\n})\nexport class AccueilComponent implements OnInit {\n\n  public mostPopularRecipes: RecipeDetails[];\n  public latestRecipes: RecipeDetails[];\n\n  public menu: Menu = {\n    petitDej : null,\n    repas : null,\n    douceur : null\n  };\n\n  public petitDej: RecipeDetails = null;\n  public repas: RecipeDetails = null;\n  public douceur: RecipeDetails = null;\n\n  public recettes: RecipeDetails[];\n\n  public categories: CategoryDetails[];\n\n  customOptions: OwlOptions = {\n    autoplay: true,\n    autoplayTimeout: 5000,\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n    navText: ['Previous', 'Next'],\n    responsive: {\n      0: {\n        items: 2\n      },\n      430: {\n        items: 3\n      },\n      640: {\n        items: 4\n      },\n      850: {\n        items: 5\n      },\n      1055: {\n        items: 6\n      },\n      1250: {\n        items: 7\n      },\n      1450: {\n        items: 8\n      },\n      1600: {\n        items: 9\n      }\n    },\n    nav: false,\n    // autoWidth: true,\n    // autoHeight: true\n  };\n\n  constructor(private recetteService: RecettesService, private router: Router, private categoriesService: CategoriesService,private notifService: NotificationService) {\n    this.getMostPopularRecipes();\n    this.getLatestReceipes();\n\n    this.categoriesService.getAllCategory().subscribe(data => {\n      this.categories = data;\n    });\n\n    this.recetteService.getAllRecipes().subscribe(data => {\n      this.recettes = data;\n    });\n\n    this.recetteService.getPetitDej().subscribe(data => {\n      this.petitDej = data;\n    });\n\n    this.recetteService.getRepas().subscribe(data => {\n      this.repas = data;\n    });\n\n    this.recetteService.getDouceur().subscribe(data => {\n      this.douceur = data;\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  getMenu() {\n\n    this.recetteService.getMenu().subscribe(\n      (menu: any) => {\n        menu.forEach(element => {\n          if (element.idMenu === 1) {\n            this.menu.petitDej = element;\n          } else if (element.idMenu === 2) {\n            this.menu.repas = element;\n          } else if (element.idMenu === 3) {\n            this.menu.douceur = element;\n          }\n        });\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Il n\\'y a pas encore de recettes.');\n          }\n        }\n      });\n  }\n\n  goToCategory(idCategorie: number) {\n    this.router.navigate(['/allRecipes', { id: idCategorie }]);\n  }\n\n  getMostPopularRecipes() {\n\n    this.recetteService.getMostPopularRecipes().subscribe(\n      (mostPopularRecipes: RecipeDetails[]) => {\n        this.mostPopularRecipes = mostPopularRecipes;\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Il n\\'y a pas encore de recettes.');\n          }\n        }\n      });\n  }\n\n  getLatestReceipes() {\n\n    this.recetteService.getLatestReceipes().subscribe(\n      (latestRecipes: RecipeDetails[]) => {\n        this.latestRecipes = latestRecipes;\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Il n\\'y a pas encore de recettes.');\n          }\n        }\n      });\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.notificationVue(recette.idRecette);\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload();\n        });\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Cette recette n\\'existe pas !');\n          }\n        }\n      });\n  }\n\n    //notification vue\n    notificationVue(idRecette) {\n      let notif: Notification = {\n        pseudo: null,\n        idRecette: idRecette,\n        type: \"vue\",\n      };\n      this.notifService.addNotification(notif).subscribe();\n    }\n\n}\n","<script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\" integrity=\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\" crossorigin=\"anonymous\"></script>\n<script>\n    window.jQuery || document.write('<script src=\"/docs/4.4/assets/js/vendor/jquery.slim.min.js\"><\\/script>')\n</script>\n<script src=\"/docs/4.4/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-6khuMg9gaYr5AxOqhkVIODVIvm9ynTT5J4V1cfthmT+emCG6yVmEZsRHdxlotUnm\" crossorigin=\"anonymous\"></script>\n<script src=\"https://ajax.cloudflare.com/cdn-cgi/scripts/7089c43e/cloudflare-static/rocket-loader.min.js\"></script>\n\n<main role=\"main\">\n\n    <div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\n        <ol class=\"carousel-indicators\">\n            <li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>\n            <li data-target=\"#myCarousel\" data-slide-to=\"1\" class=\"\"></li>\n            <li data-target=\"#myCarousel\" data-slide-to=\"2\" class=\"\"></li>\n        </ol>\n        <div class=\"carousel-inner\">\n            <div class=\"carousel-item\" *ngFor=\"let recette of this.latestRecipes;let index = index;let isFirst = first\" [ngClass]=\"{active:isFirst}\" [ngStyle]=\"{'background-image': 'url(&quot;' + recette.lienImage + '&quot;)'}\">\n                <img class=\"bd-placeholder-img\" width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n                <div class=\"container\">\n                    <div class=\"carousel-caption\">\n                        <ul class=\"post-categories\">\n                            <li *ngFor=\"let category of recette.categories\"><a rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                        </ul>\n                        <h1>{{recette.nomRecette}}</h1>\n                        <div class=\"post-more\">\n                            <a (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\" class=\"btn btn-primary btn-effect\">\n                                <span>Voir...</span>\n                                <span><i class=\"fa fa-long-arrow-right\"></i></span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n        <a class=\"carousel-control-prev\" href=\"#myCarousel\" role=\"button\" data-slide=\"prev\">\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Previous</span>\n        </a>\n        <a class=\"carousel-control-next\" href=\"#myCarousel\" role=\"button\" data-slide=\"next\">\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Next</span>\n        </a>\n    </div>\n\n\n\n\n    <h4 class=\"title-trending\">Les plus vues</h4>\n\n    <div class=\"container marketing\">\n\n        <!-- Three columns of text below the carousel -->\n        <div class=\"row\">\n            <div class=\"col-lg-4\" *ngFor=\"let recette of this.mostPopularRecipes\">\n                <div id=\"imgSize\">\n                    <div class=\"box\">\n                        <img id=\"imgCard\" class=\"bd-placeholder-img\" width=\"180\" height=\"auto\" src=\"{{recette.lienImage}}\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n                    </div>\n                </div>\n                <ul class=\"post-categories2\">\n                    <li *ngFor=\"let category of recette.categories\"><a rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                </ul>\n                <h2 id=\"cardTitle\">{{recette.nomRecette}}</h2>\n                <div id=\"container\">\n                    <div class=\"centre\">\n                        {{recette.mot}}\n                    </div>\n                    <!-- centre -->\n                </div>\n                <p>\n                    <a (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\" class=\"btn btn-primary btn-effect top\">\n                        <span>Voir »</span>\n                        <span><i class=\"fa fa-long-arrow-right\"></i></span>\n                    </a>\n                </p>\n            </div>\n            <!-- /.col-lg-4 -->\n        </div>\n        <!-- /.row -->\n\n        <hr class=\"featurette-divider\">\n\n        <h4 class=\"title-trending\">Suggestions du moment</h4>\n\n        <section class=\"ftco-section\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-md-9\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6 col-lg-6 ftco-animate fadeInUp ftco-animated\" *ngIf=\"petitDej\">\n                                <div class=\"blog-entry\">\n                                    <div class=\"img img-big img-big-2 d-flex align-items-end\" [ngStyle]=\"{'background-image': 'url(&quot;' + petitDej.lienImage + '&quot;)'}\">\n                                        <div class=\"overlay\"></div>\n                                        <div class=\"text\">\n                                            <ul class=\"post-categories\">\n                                                <li *ngFor=\"let category of petitDej.categories\"><a rel=\"category tag\"><span\n                                                            class=\"subheading\">{{category.libelleCategorie}}</span></a>\n                                                </li>\n                                            </ul>\n                                            <h3><a class=\"img\">{{petitDej.nomRecette}}</a></h3>\n                                            <div class=\"card-info\">\n                                                {{petitDej.mot}}\n                                            </div>\n                                            <p class=\"mb-0\"><a (click)=\"updateNbView(petitDej)\" [routerLink]=\"['/recipe', petitDej.idRecette]\" class=\"btn-custom btn-effect\"><span>Voir</span>\n                                                    <span><i class=\"fa fa-long-arrow-right\"></i></span></a></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6 col-lg-6 ftco-animate fadeInUp ftco-animated\" *ngIf=\"repas\">\n                                <div class=\"blog-entry\">\n                                    <div class=\"img img-big img-big-2 d-flex align-items-end\" [ngStyle]=\"{'background-image': 'url(&quot;' + repas.lienImage + '&quot;)'}\">\n                                        <div class=\"overlay\"></div>\n                                        <div class=\"text\">\n                                            <ul class=\"post-categories\">\n                                                <li *ngFor=\"let category of repas.categories\"><a rel=\"category tag\"><span\n                                                            class=\"subheading\">{{category.libelleCategorie}}</span></a>\n                                                </li>\n                                            </ul>\n                                            <h3><a class=\"img\">{{repas.nomRecette}}</a></h3>\n                                            <div class=\"card-info\">\n                                                {{repas.mot}}\n                                            </div>\n                                            <p class=\"mb-0\"><a (click)=\"updateNbView(repas)\" [routerLink]=\"['/recipe', repas.idRecette]\" class=\"btn-custom btn-effect\"><span>Voir</span>\n                                                    <span><i class=\"fa fa-long-arrow-right\"></i></span></a></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12 col-lg-12 ftco-animate fadeInUp ftco-animated\" *ngIf=\"douceur\">\n                                <div class=\"blog-entry\">\n                                    <div class=\"img img-big img-big-2 d-flex align-items-end\" [ngStyle]=\"{'background-image': 'url(&quot;' + douceur.lienImage + '&quot;)'}\">\n                                        <div class=\"overlay\"></div>\n                                        <div class=\"text\">\n                                            <ul class=\"post-categories\">\n                                                <li *ngFor=\"let category of douceur.categories\"><a rel=\"category tag\"><span\n                                                            class=\"subheading\">{{category.libelleCategorie}}</span></a>\n                                                </li>\n                                            </ul>\n                                            <h3><a class=\"img\">{{douceur.nomRecette}}</a></h3>\n                                            <div class=\"card-info\">\n                                                {{douceur.mot}}\n                                            </div>\n                                            <p class=\"mb-0\"><a (click)=\"updateNbView(douceur)\" [routerLink]=\"['/recipe', douceur.idRecette]\" class=\"btn-custom btn-effect\"><span>Voir</span>\n                                                    <span><i class=\"fa fa-long-arrow-right\"></i></span></a></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <div class=\"sidebar-wrap pt-4\">\n                            <div class=\"sidebar-box categories text-center ftco-animate fadeInUp ftco-animated\">\n                                <h2 class=\"heading mb-4\">Catégories</h2>\n                                <ul class=\"category-image\">\n                                    <li *ngFor=\"let categ of categories\">\n                                        <a *ngIf=\"categ.idCategorie == 1\" (click)=\"goToCategory(categ.idCategorie)\" class=\"img d-flex align-items-center justify-content-center text-center\" style=\"background-image: url(../../assets/img/categories/cookie-brioché.jpg); box-shadow: inset 30em 30em rgba(0, 0, 0, 0.35);\">\n                                            <div class=\"text\">\n                                                <h3>{{categ.libelleCategorie}}</h3>\n                                            </div>\n                                        </a>\n                                        <a *ngIf=\"categ.idCategorie == 2\" (click)=\"goToCategory(categ.idCategorie)\" class=\"img d-flex align-items-center justify-content-center text-center\" style=\"background-image: url(../../assets/img/categories/pancakes.jpg); box-shadow: inset 30em 30em rgba(0, 0, 0, 0.35);\">\n                                            <div class=\"text\">\n                                                <h3>{{categ.libelleCategorie}}</h3>\n                                            </div>\n                                        </a>\n                                        <a *ngIf=\"categ.idCategorie == 3\" (click)=\"goToCategory(categ.idCategorie)\" class=\"img d-flex align-items-center justify-content-center text-center\" style=\"background-image: url(../../assets/img/categories/healthy.jpg); box-shadow: inset 30em 30em rgba(0, 0, 0, 0.35);\">\n                                            <div class=\"text\">\n                                                <h3>{{categ.libelleCategorie}}</h3>\n                                            </div>\n                                        </a>\n                                        <a *ngIf=\"categ.idCategorie == 4\" (click)=\"goToCategory(categ.idCategorie)\" class=\"img d-flex align-items-center justify-content-center text-center\" style=\"background-image: url(../../assets/img/categories/boisson.png); box-shadow: inset 30em 30em rgba(0, 0, 0, 0.35);\">\n                                            <div class=\"text\">\n                                                <h3>{{categ.libelleCategorie}}</h3>\n                                            </div>\n                                        </a>\n                                        <a *ngIf=\"categ.idCategorie == 5\" (click)=\"goToCategory(categ.idCategorie)\" class=\"img d-flex align-items-center justify-content-center text-center\" style=\"background-image: url(../../assets/img/categories/pois-chiches.jpg); box-shadow: inset 30em 30em rgba(0, 0, 0, 0.35);\">\n                                            <div class=\"text\">\n                                                <h3>{{categ.libelleCategorie}}</h3>\n                                            </div>\n                                        </a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n\n        <!-- START THE FEATURETTES -->\n\n        <!--<hr class=\"featurette-divider\">\n\n        <h4 class=\"title-trending\">Suggestions du moment</h4>\n\n        <div class=\"row featurette\" *ngIf=\"petitDej\">\n            <div class=\"col-md-8\">\n                <h2 class=\"featurette-heading\">Ma lubie du matin </h2>\n                <h3 class=\"featurette-heading text-muted\" (click)=\"updateNbView(petitDej)\"\n                    [routerLink]=\"['/recipe', petitDej.idRecette]\">{{petitDej.nomRecette}}</h3>\n                <p class=\"lead\">{{petitDej.mot}}</p>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"box\">\n                    <ul class=\"post-categories2\">\n                        <li *ngFor=\"let category of petitDej.categories\"><a\n                                rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                    </ul>\n                    <img class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\" width=\"500\"\n                        height=\"500\" preserveAspectRatio=\"xMidYMid slice\" src={{petitDej.lienImage}} focusable=\"false\"\n                        role=\"img\" (click)=\"updateNbView(petitDej)\" [routerLink]=\"['/recipe', petitDej.idRecette]\">\n                </div>\n            </div>\n        </div>\n\n\n        <hr class=\"featurette-divider\">\n\n        <div class=\"row featurette\" *ngIf=\"repas\">\n            <div class=\"col-md-8 order-md-2\">\n                <h2 class=\"featurette-heading\">Mon plat préféré </h2>\n                <h3 class=\"featurette-heading text-muted\" (click)=\"updateNbView(repas)\"\n                    [routerLink]=\"['/recipe', repas.idRecette]\">{{repas.nomRecette}}</h3>\n                <p class=\"lead\">{{repas.mot}}</p>\n            </div>\n            <div class=\"col-md-4 order-md-1\">\n                <div class=\"box\">\n                    <ul class=\"post-categories2\">\n                        <li *ngFor=\"let category of repas.categories\"><a\n                                rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                    </ul>\n                    <img class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\" width=\"500\"\n                        height=\"500\" preserveAspectRatio=\"xMidYMid slice\" src={{repas.lienImage}} focusable=\"false\"\n                        role=\"img\" (click)=\"updateNbView(repas)\" [routerLink]=\"['/recipe', repas.idRecette]\">\n                </div>\n            </div>\n        </div>\n\n        <hr class=\"featurette-divider\">\n\n        <div class=\"row featurette\" *ngIf=\"douceur\">\n            <div class=\"col-md-8\">\n                <h2 class=\"featurette-heading\">Ma douceur du moment </h2>\n                <h3 class=\"featurette-heading text-muted\" (click)=\"updateNbView(douceur)\"\n                    [routerLink]=\"['/recipe', douceur.idRecette]\">{{douceur.nomRecette}}</h3>\n                <p class=\"lead\">{{douceur.mot}}</p>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"box\">\n                    <ul class=\"post-categories2\">\n                        <li *ngFor=\"let category of douceur.categories\"><a\n                                rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                    </ul>\n                    <img class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\" width=\"500\"\n                        height=\"500\" preserveAspectRatio=\"xMidYMid slice\" src={{douceur.lienImage}} focusable=\"false\"\n                        role=\"img\" (click)=\"updateNbView(douceur)\" [routerLink]=\"['/recipe', douceur.idRecette]\">\n                </div>\n            </div>\n        </div>-->\n\n        <hr class=\"featurette-divider\">\n\n        <!-- /END THE FEATURETTES -->\n\n    </div>\n    <!-- /.container -->\n    <h4 class=\"title-trending\">\n        Pourquoi créer un compte ?\n    </h4>\n\n\n\n    <!--présentation des fonctionnalités-->\n    <div class=\"welcome-clip row\">\n        <div class=\"page-title col-md-6\">\n            <h1>\n\n                <span class=\"special-text\"> Menu de la semaine</span> </h1>\n            <div class=\"new-divider text-center\">\n                <span class=\"outer-line line-left\">&nbsp;</span>\n                <span class=\"fa fa-cutlery\" style=\"color:white\">&nbsp;</span>\n                <span class=\"outer-line line-right\">&nbsp;</span>\n            </div>\n\n\n\n            <h4>\n                Marre de ne plus savoir ce que tu avais prévu cette semaine ? Avec cette fonctionnalité, retrouve toutes tes recettes au même endroit! Si c'est une recette du site, tu y auras accès directement en cliquant dessus! Et si tu manques d'idées pour cette semaine,\n                tu peux voir le menu de Marine!</h4>\n\n        </div>\n        <div class=\"girl col-md-6\">\n            <img src=\"../../../assets/img/presentationMenuSemaine.png\" width=\"100%\" height=\"auto\" alt=\"exemple de menu de la semaine\" />\n        </div>\n    </div>\n\n    <section class=\"welcome-clip row\" id=\"listeCourses\">\n        <div class=\"girl col-md-6\">\n            <img src=\"../../../assets/img/presentationListeCourses.jpg\" width=\"60%\" height=\"auto\" alt=\"exemple de liste de courses\" />\n        </div>\n        <div class=\"page-title col-md-6\">\n            <h1><span class=\"list-text\"> Liste de courses</span> </h1>\n            <div class=\"new-divider\" text-center>\n                <span class=\"outer-line line-left\"> </span>\n                <span class=\"fa fa-shopping-cart\" style=\"color: #cea0af\"></span>\n                <span class=\"outer-line line-right\"> </span>\n            </div>\n            <h4>\n                A partir d'une recette, tu peux directement ajouter tous les ingrédients à ta liste de courses, plus besoin de réfléchir! Tu peux supprimer ce dont tu n'as pas besoin et rajouter toi même des ingrédients à la liste. </h4>\n\n        </div>\n\n    </section>\n\n    <section class=\"welcome-clip row\">\n        <div class=\"page-title col-md-6\">\n            <h1><span class=\"special-text\"> Favoris</span> </h1>\n            <div class=\"new-divider\" text-center>\n                <span class=\"outer-line line-left\"> </span>\n                <span class=\"fa fa-heart\" style=\"color:white\"> </span>\n                <span class=\"outer-line line-right\"> </span>\n            </div>\n            <h4>\n                Pratique! Retrouve toutes tes recettes préférées du site au même endroit! Pour celà il te suffit de cliquer sur le petit coeur d'une recette lorsque tu es connecté.</h4>\n\n        </div>\n        <div class=\"girl col-md-6\">\n            <img src=\"../../../assets/img/presentationFavoris.png\" width=\"100%\" height=\"auto\" alt=\"exemple de la page favoris\" />\n        </div>\n    </section>\n\n\n\n    <owl-carousel-o [options]=\"customOptions\">\n        <ng-template carouselSlide *ngFor=\"let recette of recettes\">\n            <div class=\"owl-stage\" style=\"transform: translate3d(-1243px, 0px, 0px); transition: all 0.25s ease 0s; width: 3730px;\">\n                <div class=\"owl-item\" style=\"width: 207.167px;\">\n                    <div class=\"gs-item set-bg\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\" [ngStyle]=\"{'background-image': 'url(&quot;' + recette.lienImage + '&quot;)'}\" style=\"height: 298.656px; background-size: cover; background-position: center;\">\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </owl-carousel-o>\n</main>","import { Component, OnInit } from '@angular/core';\nimport {\n  RecettesService, UserDetails, AuthentificationService, IngredientsService, UnitesService,\n  CategoriesService, ImagesService\n} from '../../service';\nimport { CategoryDetails, IngredientDetails, UniteDetails, CreateRecipe } from '../../models';\nimport { FormGroup, FormArray, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n// la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { NgxImageCompressService } from 'ngx-image-compress';\n\n@Component({\n  selector: 'app-ajout-recette',\n  templateUrl: './ajout-recette.component.html',\n  styleUrls: ['./ajout-recette.component.scss']\n})\nexport class AjoutRecetteComponent implements OnInit {\n\n  images;\n\n  recipe: CreateRecipe = {\n    idRecette: null,\n    nomRecette: '',\n    categories: null,\n    ingredients: null,\n    idImage: null,\n    etapes: '',\n    nbrePart: null,\n    libellePart: '',\n    tempsPreparation: null,\n    tempsCuisson: null,\n    astuce: '',\n    mot: ''\n  };\n\n  public ingredients: IngredientDetails[];\n  public unites: UniteDetails[];\n  public categories: CategoryDetails[];\n\n  public recipeForm: FormGroup;\n  public newIngredientForm: FormGroup;\n  public ingredientForm: FormGroup;\n  public ingredient: FormArray;\n  public selectIngredient: number[] = [];\n  private listAbonneNews$: Observable<UserDetails[]>;\n\n  public newIngredient: IngredientDetails = {\n    nomIngredient: ''\n  };\n\n  // pour multiple select\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings: IDropdownSettings;\n  fileToUpload: File = null;\n\n  // pour compresser image\n  file: any;\n  localUrl: any;\n  localCompressedURl: any;\n  sizeOfOriginalImage: number;\n  sizeOFCompressedImage: number;\n  imgResultBeforeCompress: string;\n  imgResultAfterCompress: string;\n\n  constructor(private recetteService: RecettesService, private formBuilder: FormBuilder, private router: Router,\n              private modalService: NgbModal, private http: HttpClient, private auth: AuthentificationService,\n              private ingredientsService: IngredientsService, private unitesService: UnitesService,\n              private categoriesService: CategoriesService, private imagesService: ImagesService,\n              private imageCompress: NgxImageCompressService) { }\n\n  ngOnInit(): void {\n    // on récupère tous les ingrédients, unités, catégories pour les réponses possibles à notre formulaire\n    this.ingredientsService.getAllIngredients().subscribe(\n      ingredients => {\n        ingredients.forEach(element => {\n          element.disabled = false;\n        });\n        this.ingredients = ingredients;\n      }\n    );\n\n    this.unitesService.getAllUnite().subscribe(\n      unites => {\n        this.unites = unites;\n      }\n    );\n\n    this.categoriesService.getAllCategory().subscribe(\n      categories => {\n        this.categories = categories;\n      }\n    );\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'idCategorie',\n      textField: 'libelleCategorie',\n      enableCheckAll: false,\n      itemsShowLimit: 3,\n      allowSearchFilter: true,\n      searchPlaceholderText: 'Rechercher'\n    };\n\n    this.initRecipeForm();\n\n    this.createIngredientsForm();\n\n    this.onChanges();\n\n  }\n\n  selectFile(event: any) {\n    let fileName: any;\n    this.file = event.target.files[0];\n    fileName = this.file.name;\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        this.localUrl = event.target.result;\n        this.compressFile(this.localUrl, fileName);\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  compressFile(image, fileName) {\n    const orientation = -1;\n    this.sizeOfOriginalImage = this.imageCompress.byteCount(image) / (1024 * 1024);\n    console.warn('Size in bytes is now:', this.sizeOfOriginalImage);\n    this.imageCompress.compressFile(image, orientation, 50, 50).then(\n      result => {\n        this.imgResultAfterCompress = result;\n        this.localCompressedURl = result;\n        this.sizeOFCompressedImage = this.imageCompress.byteCount(result) / (1024 * 1024);\n        console.warn('Size in bytes after compression:', this.sizeOFCompressedImage);\n        // create file from byte\n        const imageName = fileName;\n        // call method that creates a blob from dataUri\n        const imageBlob = this.dataURItoBlob(this.imgResultAfterCompress.split(',')[1]);\n        // imageFile created below is the new compressed file which can be send to API in form data\n        const imageFile = new File([imageBlob], imageName, { type: 'image/jpeg' });\n\n        this.images = imageFile;\n      });\n  }\n\n  dataURItoBlob(dataURI) {\n    const byteString = window.atob(dataURI);\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const int8Array = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < byteString.length; i++) {\n      int8Array[i] = byteString.charCodeAt(i);\n    }\n    const blob = new Blob([int8Array], { type: 'image/jpeg' });\n    return blob;\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.images = file;\n    }\n  }\n\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('file', this.images);\n\n    this.http.post<any>('/server/uploads', formData).subscribe(\n      (res) => console.log(res),\n      (err) => console.log(err)\n    );\n  }\n\n  createRecipe() {\n\n    const formValue = this.recipeForm.value;\n    const ingredientFormValue = this.ingredientForm.value;\n    const formData = new FormData();\n    formData.append('file', this.images);\n\n    if (formValue.etapes === '' && formValue.nomRecette === '' && this.selectedItems.length === 0) {\n      alert('Vous devez remplir le champ du nom de la recette, au moins une catégorie de la recette et le champ de la Préparation.');\n      return;\n    } else if (formValue.etapes === '' && formValue.nomRecette === '') {\n      alert('Vous devez remplir le champ du nom de la recette, et celui de la préparation.');\n      return;\n    } else if (formValue.nomRecette === '' && this.selectedItems.length === 0) {\n      alert('Vous devez remplir le champ du nom de la recette, et sélectionner au moins une catégorie.');\n      return;\n    } else if (formValue.etapes === '' && this.selectedItems.length === 0) {\n      alert('Vous devez remplir le champ de la préparation, et sélectionner au moins une catégorie.');\n      return;\n    } else if (this.selectedItems.length === 0) {\n      alert('Vous devez choisir au moins une catégorie pour votre recette.');\n      return;\n    } else if (formValue.etapes === '') {\n      alert('Vous devez choisir le champ de la préparation.');\n      return;\n    } else if (formValue.nomRecette === '') {\n      alert('Vous devez remplir le champ du nom de la recette.');\n      return;\n    } else if (this.ingredientForm.value.ingredient.forEach(element => {\n      if (element.qte <= 0) {\n        alert('Il faut une quantité positive pour l\\'ingrédient.');\n        return;\n      }\n    })) {\n\n      console.log(ingredientFormValue.ingredient);\n    }\n    this.recipe.ingredients = ingredientFormValue.ingredient; // je récupère les info sur l'ingrédient\n\n    this.recipe.categories = this.selectedItems;\n    this.recipe.nomRecette = formValue.nomRecette;\n    this.recipe.etapes = formValue.etapes;\n    this.recipe.nbrePart = formValue.nbrePart;\n    this.recipe.libellePart = formValue.libellePart;\n    this.recipe.tempsPreparation = formValue.tempsPreparation;\n    this.recipe.tempsCuisson = formValue.tempsCuisson;\n    this.recipe.astuce = formValue.astuce;\n    this.recipe.mot = formValue.mot;\n    this.imagesService.addImage(formData).subscribe(res => {\n      console.log(res[0]);\n      this.recipe.idImage = res[0];\n      this.recetteService.createRecipe(this.recipe).subscribe(res => {\n        console.log(res[0]);\n        this.recipe.idRecette = res[0]; // je récupère l'id de la recette que je viens de créer\n        this.recetteService.addIngredientsAndCategoryToNewRecipe(this.recipe).subscribe(res => {\n          this.listAbonneNews$ = this.auth.getAbonneNews();\n          this.listAbonneNews$.subscribe(res => {\n            res.forEach(element => {\n              this.auth.sentEmailToNewRecipe(element, this.recipe.idRecette).subscribe();\n            });\n          });\n        });\n      });\n\n\n      this.router.navigateByUrl('handleRecipes');\n    });\n  }\n\n  initRecipeForm() {\n    this.recipeForm = this.formBuilder.group({\n      nomRecette: ['', [Validators.required, Validators.max(45)]],\n      categories: ['', Validators.required],\n      ingredients: [''],\n      etapes: ['', Validators.required],\n      nbrePart: ['', Validators.required],\n      libellePart: ['', Validators.required],\n      tempsPreparation: ['', Validators.required],\n      tempsCuisson: ['', Validators.required],\n      astuce: ['', Validators.required],\n      mot: ['', Validators.required]\n    });\n  }\n\n  /******  création formulaire pour ajouter autant de lignes ingrédient (qté, nom, unite) qu'on veut *****/\n  // création initiale formulaire ingredients\n  createIngredientsForm(): FormGroup {\n    return this.ingredientForm = this.formBuilder.group({\n      ingredient: this.formBuilder.array([this.createIngredientForm()])\n    });\n  }\n\n  createIngredientForm(): FormGroup {\n    return this.formBuilder.group({\n      idIngredient: new FormControl({\n        value: '',\n        disabled: false\n      },\n        Validators.compose([Validators.required])),\n      nomIngredient: new FormControl({\n        value: '',\n        disabled: false\n      }),\n      qte: new FormControl({\n        value: '',\n        disabled: false\n      },\n        Validators.compose([Validators.required, Validators.min(0)])),\n      idUnite: new FormControl({\n        value: '',\n        default: ' ',\n        disabled: false\n      })\n    });\n  }\n\n  onChanges(): void {\n    this.ingredientForm.valueChanges.subscribe(val => {\n      // this.selectIngredient = []\n      this.ingredients.forEach(ingredient => {\n        ingredient.disabled = false;\n      });\n      this.ingredients.forEach(ingredient => {\n        val.ingredient.forEach(element => {\n          if (element.nomIngredient !== '') {\n            if (ingredient.nomIngredient === element.nomIngredient) {\n              ingredient.disabled = true;\n              element.idIngredient = ingredient.idIngredient;\n            }\n            // this.selectIngredient.push(element.idIngredient)\n          }\n\n        });\n      });\n    });\n  }\n\n  get formData() { return this.ingredientForm.get('ingredient'); }\n\n  // pour ajouter un ingrédient\n  addIngredient(): void {\n    this.ingredient = this.ingredientForm.get('ingredient') as FormArray;\n    this.ingredient.push(this.createIngredientForm());\n  }\n  /*****************************/\n\n  // récupérer le nom du new ingrédient et l'enregistrer dans la bd\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.nomIngredient = result;\n        this.ingredientsService.addIngredient(this.newIngredient);\n        setTimeout(() => {\n          this.ingredientsService.getAllIngredients().subscribe(\n            ingredients => {\n              this.ingredients = ingredients;\n            }\n          );\n        }, 1000);\n      });\n  }\n\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n\n        <div class=\"text-center\">\n            <h1>Ajout d'une nouvelle recette</h1>\n        </div>\n\n        <form [formGroup]=\"recipeForm\" (ngSubmit)=\"createRecipe()\">\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n                    <td>\n                        <label>Nom de la recette</label>\n                    </td>\n                    <td id=\"nomRecette\" style=\"vertical-align:middle;\">\n                        <input type=\"text\" formControlName=\"nomRecette\" class=\"form-control\" required>\n                    </td>\n\n                </tr>\n            </table>\n            <table class=\"table col-md-8 mx-auto\">\n                <tr>\n                    <td>\n                        <form>\n                            <div id=\"image\">\n                                <input type=\"file\" name=\"file\" id=\"file\" class=\"inputfile\" name=\"image\" (change)=\"selectFile($event)\" />\n                                <label id=\"positionImage\" for=\"file\">Choisir une image</label>\n                            </div>\n                            <br>\n                        </form>\n                    </td>\n\n                </tr>\n\n            </table>\n\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr class=\"table col-md-8 mx-auto\">\n                    <td>\n                        <label>Catégorie</label>\n                    </td>\n                    <td>\n                        <form>\n                            <div id=\"ingrForm\" class=\"form-row\" style=\"justify-content: center;\">\n\n                                <ng-multiselect-dropdown [data]=\"categories\" placeholder=\"sélectionner\" [settings]=\"dropdownSettings\" [(ngModel)]=\"selectedItems\" [ngModelOptions]=\"{standalone: true}\">\n                                </ng-multiselect-dropdown>\n\n                            </div>\n                        </form>\n                    </td>\n                    <td>\n                        <div class=\"invalid-tooltip\">\n                            Selectionnez une catégorie.\n                        </div>\n                    </td>\n                </tr>\n\n            </table>\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n                    <td>\n                        <label>Nombre de parts</label>\n\n\n                        <input type=\"number\" class=\"form-control\" formControlName=\"nbrePart\" required>\n\n\n                        <div class=\"invalid-tooltip\">\n                            Rentrez une quantité correcte.\n                            <!--Vérifier que c'est pas négatif ou nulle-->\n\n                        </div>\n                    </td>\n\n                    <td>\n                        <label>Libellé des parts</label>\n\n                        <input type=\"text\" class=\"form-control\" formControlName=\"libellePart\" required>\n\n                        <div class=\"invalid-tooltip\">\n                            Rentrez une quantité correcte.\n                            <!--Vérifier que c'est pas négatif ou nulle-->\n                        </div>\n                    </td>\n\n\n                </tr>\n\n            </table>\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <ul>\n\n                    <form [formGroup]=\"ingredientForm\">\n                        <!--formulaire ingrédients-->\n\n                        <div formArrayName=\"ingredient\">\n                            <div *ngFor=\"let ing of formData['controls']; let idx = index\" [formGroupName]=\"idx\" class=\"ingredient\">\n                                <!--idx = indexe d'une ligne ingrédient du formulaire-->\n                                <tr>\n                                    <td id=\"nomIng\">\n\n\n\n                                        <label for=\"validationTooltip04\">Ingrédient</label>\n                                        <input id=\"validationTooltip04\" list=\"brow\" formControlName=\"nomIngredient\">\n                                        <datalist id=\"brow\">\n                                            <option *ngFor=\"let ingredient of ingredients\"\n                                                [ngValue]=\"ingredient.nomIngredient\" [disabled]=\"ingredient.disabled\">\n                                                {{ingredient.nomIngredient}}</option>\n                                        </datalist>\n                                        <!--<ng-select class=\"custom\" [items]=\"ingredients\" bindLabel=\"nomIngredient\" class=\"custom-select\" id=\"validationTooltip04\"\n                                                    bindValue=\"idIngredient\" formControlName=\"idIngredient\"\n                                                        role=\"listbox\" ng-reflect-bind-label=\"nomIngredient\" ng-reflect-bind-value=\"idIngredient\">\n                                                    </ng-select>-->\n\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez un ingrédient.\n                                        </div>\n                                    </td>\n                                    <td id=\"qteIng\">\n\n                                        <label for=\"validationTooltip05\">Quantité</label>\n                                        <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\" formControlName=\"qte\" required>\n                                        <div class=\"invalid-tooltip\">\n                                            Rentrez une quantité correcte.\n                                            <!--Vérifier que c'est pas négatif ou nulle-->\n                                        </div>\n\n                                    </td>\n\n                                    <td id=\"nomIng\">\n\n                                        <label for=\"validationTooltip04\">Unité</label>\n                                        <select class=\"custom-select\" id=\"validationTooltip04\" formControlName=\"idUnite\" required>\n                                            <option *ngFor=\"let unite of unites\" [ngValue]=\"unite.idUnite\">\n                                                {{unite.libelleUnite}}\n                                            </option>\n                                        </select>\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez une unité.\n                                        </div>\n\n                                    </td>\n                                </tr>\n                            </div>\n                        </div>\n\n                        <div style=\"text-align: -webkit-center;\">\n                            <tr id=\"buttonIngredient\">\n                                <td>\n\n                                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"addIngredient()\">Ajouter un\n                                            nouvel\n                                            ingrédient</button>\n\n                                </td>\n\n                                <ng-template #content let-modal>\n                                    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                                    <div class=\"modal-header\">\n                                        <h4 class=\"modal-title\"></h4>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        <form>\n                                            <div class=\"form-group\">\n                                                <label for=\"nomIngredient\"> Nom de l'ingrédient </label>\n                                                <div class=\"input-group\">\n                                                    <input id=\"nomIngredient\" class=\"form-control\" placeholder=\"Cacahuète\" #nomIngredient=\"ngModel\" [(ngModel)]=\"newIngredient.nomIngredient\" [ngModelOptions]=\"{standalone: true}\">\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close(newIngredient.nomIngredient)\">Ajouter</button>\n                                    </div>\n                                </ng-template>\n                                <td>\n                                    <button class=\"btn btn-primary\" (click)=\"open(content)\">Créer un nouvel\n                                        ingrédient</button>\n                                    <!--on appelle le modal-->\n\n                                </td>\n                            </tr>\n                        </div>\n\n                    </form>\n                    <!--fin du formulaire ingrédients-->\n\n                </ul>\n\n            </table>\n\n\n\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n\n                    <div id=\"ingrForm\" class=\"form-row\">\n                        <td>\n                            <label>Temps de préparation</label>\n                            <input type=\"time\" class=\"form-control\" formControlName=\"tempsPreparation\" step=\"2\" value=\"00:00:00\" required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n                        <td>\n                            <label>Temps de cuisson</label>\n                            <input type=\"time\" class=\"form-control\" formControlName=\"tempsCuisson\" step=\"2\" value=\"00:00:00\" required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n                    </div>\n                </tr>\n\n            </table>\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n                    <td>\n                        <label>Préparation</label>\n\n                        <textarea class=\"form-control\" formControlName=\"etapes\" id=\"exampleFormControlTextarea1\" rows=\"8\" required></textarea>\n                    </td>\n                </tr>\n\n                <tr>\n                    <td>\n                        <label>Astuces</label>\n\n                        <textarea class=\"form-control\" formControlName=\"astuce\" id=\"exampleFormControlTextarea1\" rows=\"8\" required></textarea>\n                    </td>\n                </tr>\n\n            </table>\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n                    <td>\n                        <label>Description</label>\n\n                        <textarea class=\"form-control\" formControlName=\"mot\" id=\"exampleFormControlTextarea1\" rows=\"8\" required></textarea>\n                    </td>\n                </tr>\n\n            </table>\n\n\n            <div class=\"col text-center\">\n                <button id=\"validateButton\" type=\"submit\" class=\"col-ld-6 btn btn-primary\">Valider</button>\n            </div>\n        </form>\n\n\n        <script>\n            $(document).ready(function() {\n                $('select').formSelect();\n                $('select.select_all').siblings('ul').prepend('<li id=sm_select_all><span>Select All</span></li>');\n                $('li#sm_select_all').on('click', function() {\n                    var jq_elem = $(this),\n                        jq_elem_span = jq_elem.find('span'),\n                        select_all = jq_elem_span.text() == 'Select All',\n                        set_text = select_all ? 'Select None' : 'Select All';\n                    jq_elem_span.text(set_text);\n                    jq_elem.siblings('li').filter(function() {\n                        return $(this).find('input').prop('checked') != select_all;\n                    }).click();\n                });\n            })\n        </script>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-apropos',\n  templateUrl: './apropos.component.html',\n  styleUrls: ['./apropos.component.scss']\n})\nexport class AProposComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"section--content-grid\">\n    <div class=\"part--layout-overview\">\n        <div class=\"panel\" style=\"background-color: #f5f5f5;\">\n            <div class=\"title\">\n                <span class=\"bar\" style=\"background-color: linear-gradient(90deg, #DE645E,#B43B8B)\">\n          </span>\n                <h4> À PROPOS </h4>\n            </div>\n            <div class=\"content\">\n                <p>\n                    Bienvenue sur marine's recipes ! Nous sommes Marine & Luca, deux grands gourmands passionnés de cuisine. 👩🏼‍🍳👨🏻‍🍳\n                </p>\n            </div>\n        </div>\n    </div>\n    <div>\n        <div class=\"part--grid row\">\n            <div class=\"img-holder image-1 visible col-md-6\">\n                <div class=\"img-border\">\n                    <img id=\"ombre\" src=\"../../assets/img/me.jpeg\" width=\"auto\" height=\"auto\" alt=\"photo de l'auteur du site.\">\n                </div>\n                <!--<div class=\"shadow\">-->\n\n            </div>\n            <div class=\"panel panel-1 visible col-md-6\">\n                <h4> Marine 🌿</h4>\n                <ul>\n                    <li>Hello!</li>\n                    <li>Depuis mon plus jeune âge, j'adore cuisiner. </li>\n                    <li>J'ai créé ce site afin de pouvoir partager ma passion et ma vision d'une alimentation saine et gourmande.</li>\n                    <li>Parce que oui on peut se faire plaisir tout en mangeant équilibré!</li>\n                </ul>\n\n            </div>\n        </div>\n        <div class=\"culture-grid\">\n            <div class=\"part--grid row\" style=\"flex-wrap: wrap-reverse;\">\n\n                <div class=\"panel panel-1 visible col-md-6\" id=\"lucaTexte\">\n                    <h4> Luca 🍃 </h4>\n                    <ul>\n                        <li> Salut! Moi c'est Luca.</li>\n                        <li> Depuis que j'ai rencontré Marine, mon alimentation a complètement changé et je me suis même mis à cuisiner! </li>\n                        <li> J'ai découvert pleins de nouvelles recettes et je suis devenu son gouteur attitré. Parfois il m'arrive même de tester moi même les recettes que tu trouveras sur le site!</li>\n\n                    </ul>\n\n\n\n                </div>\n\n                <div class=\"img-holder image-1 visible col-md-6\">\n                    <div class=\"img-border\">\n                        <img id=\"ombreLuca\" src=\"../../../assets/img/luca.jpg\" width=\"auto\" height=\"auto\" alt=\"photo de l'auteur du site.\">\n                    </div>\n                    <!-- <div class=\"shadow\" id=\"luca\">-->\n\n\n                </div>\n            </div>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { RecettesService, CategoriesService} from '../../service';\nimport { CategoryDetails } from '../../models';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n  public categories: CategoryDetails[];\n\n  public categorie: CategoryDetails = {\n    idCategorie: null,\n    libelleCategorie: ''\n  };\n\n\n  constructor(private recettesService: RecettesService, private router: Router, private categoriesService: CategoriesService) { }\n\n  ngOnInit(): void {\n\n    this.categoriesService.getAllCategory().subscribe(\n      categories => {\n\n        this.categories = categories;\n      }\n    );\n  }\n\n  deleteCategory(idCategorie: any) {\n    this.categoriesService.deleteCategory(idCategorie)\n      .subscribe(res => {\n        this.router.navigate(['/category'], {\n          queryParams: {refresh: new Date().getTime()}\n       });\n        }, (err) => {\n          console.log(err);\n        }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n\n  updateCategory(categorie: CategoryDetails) {\n    this.categoriesService.updateCategory(categorie).subscribe((res: any) => {\n        window.location.reload();\n      }, (err: any) => {\n        console.error(err);\n      }\n    );\n  }\n\n  addCategory() {\n    this.categoriesService.addCategory(this.categorie);\n    window.location.reload();\n  }\n}\n\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside id=\"aside\" class=\"sidebar is-visible\">\n                    <div class=”sidebar-content”>\n                        <ul>\n                            <li><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li class=\"active\"><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li><a id=\"nav\" href=\"/handleMenu\">Gérer le menu</a></li>\n                            <li><a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a></li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n                            <h1>Catégories</h1>\n                        </div>\n\n                        <div class='flex-container'>\n\n                            <div id=\"addCat\">\n                                <h6 id=\"question\"> Ajouter une nouvelle catégorie </h6>\n                                <form (submit)=\"addCategory()\">\n                                    <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\" placeholder=\"nom catégorie\" [(ngModel)]=\"categorie.libelleCategorie\">\n                                    <button id=\"btn\" class=\"btn btn-outline-info \" type=\"submit \">Valider</button>\n\n                                </form>\n                            </div>\n\n                            <div>\n                                <table class=\"table col-md-12 mx-auto\">\n\n                                    <tr *ngFor=\"let categorie of categories\">\n                                        <td>\n                                            <form (submit)=\"updateCategory(categorie)\">\n                                                <div class=\"form-row align-items-center\">\n                                                    <div class=\"col-auto\">\n                                                        <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\" value={{categorie.libelleCategorie}} [(ngModel)]=\"categorie.libelleCategorie\">\n                                                    </div>\n                                                    <div class=\"col-auto\">\n                                                        <button id=\"btn\" class=\"btn btn-sm btn-warning\" type=\"submit\"><i class=\"fa fa-pencil\" ></i></button>\n                                                    </div>\n                                                    <div class=\"col-auto\">\n                                                        <button id=\"btn\" type=\"submit\" class=\"btn btn-sm btn-danger\" (click)=\"deleteCategory(categorie.idCategorie)\"><i class=\" fa fa-trash \"></i></button>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  contactForm: FormGroup;\n\n  contactSend: ContactDetail = {\n    nameUser: '',\n    emailUser: '',\n    subject: '',\n    message: ''\n  };\n\n  constructor(private formBuilder: FormBuilder, private auth: AuthentificationService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.initContactForm();\n  }\n\n  initContactForm(): FormGroup {\n    if (this.auth.isLoggedIn()) {\n      const emailUser = this.auth.getUserDetails().email;\n      return this.contactForm = this.formBuilder.group({\n        nameUser: ['', Validators.required],\n        email: [emailUser, [Validators.required, Validators.email]],\n        subject: ['', Validators.required],\n        message: ['', Validators.required]\n      });\n    } else {\n      return this.contactForm = this.formBuilder.group({\n        nameUser: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        subject: ['', Validators.required],\n        message: ['', Validators.required]\n      });\n    }\n\n  }\n\n  sendEmail() {\n\n    const formValue = this.contactForm.value;\n\n    this.contactSend.nameUser = formValue.nameUser;\n    this.contactSend.emailUser = formValue.email;\n    this.contactSend.subject = formValue.subject;\n    this.contactSend.message = formValue.message;\n\n    this.auth.sendEmailContact(this.contactSend).subscribe(\n      this.router.navigate([''])\n    );\n\n  }\n\n}\n\nexport interface ContactDetail {\n  nameUser: string;\n  emailUser: string;\n  subject: string;\n  message: string;\n}\n","\n\n\n    <section class=\"contact pt-100 pb-100\" id=\"contact\">\n         <div class=\"container\">\n            <div class=\"row\">\n               <div class=\"col-xl-6 mx-auto text-center\">\n                  <div class=\"section-title mb-100\">\n                     <p>une question, une suggestion .. ?</p>\n                     <h4>contactez moi</h4>\n                  </div>\n               </div>\n            </div>\n            <div class=\"row text-center\">\n                  <div class=\"col-md-12\">\n                     <form [formGroup]=\"contactForm\" (ngSubmit)=\"sendEmail()\" data-toggle=\"validator\" role=\"form\" class=\"contact-form\">\n                        <div class=\"row\">\n                           <div class=\"col-xl-6\">\n                              <input id=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Nom\" formControlName=\"nameUser\" required>\n                           </div>\n                          \n                           \n                           <div class=\"col-xl-6\">\n                              <input id=\"to\" type=\"email\" class=\"form-control\" formControlName=\"email\"\n                              placeholder=\"nom.prenom@exemple.com\" id=\"inputEmail\"\n                              required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                              data-error=\"Bruh, that email address is invalid\">\n                           </div>\n                           <div class=\"help-block with-errors\"></div>\n                           <div class=\"col-xl-12\">\n                              <input type=\"text\" class=\"form-control\"  placeholder=\"Objet\" formControlName=\"subject\" required>\n                           </div>\n                          \n                           <div class=\"col-xl-12\">\n                              <textarea placeholder=\"message\" cols=\"30\" rows=\"10\" formControlName=\"message\" required></textarea>\n                              <input id=\"send_email\" class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"contactForm.invalid\" value = \"Envoyer\">\n                           </div>\n                        </div>\n                     </form>\n                  </div>\n                \n            </div>\n         </div>\n      </section>\n","import { Component, OnInit } from '@angular/core';\nimport { RecipeDetails } from 'src/app/models';\nimport { RecettesService } from 'src/app/service';\n\n@Component({\n  selector: 'app-gerer-le-menu',\n  templateUrl: './gerer-le-menu.component.html',\n  styleUrls: ['./gerer-le-menu.component.scss']\n})\nexport class GererLeMenuComponent implements OnInit {\n\n  public petitDej: RecipeDetails;\n  public repas: RecipeDetails;\n  public douceur: RecipeDetails;\n\n  public allRecipes: RecipeDetails[];\n\n  constructor(private recetteService: RecettesService) {\n    this.recetteService.getAllRecipesForMenu().subscribe(recipes => {\n      this.allRecipes = recipes;\n    });\n\n    this.recetteService.getPetitDej().subscribe(data => {\n      this.petitDej = data;\n      this.petitDej.idMenu = 1;\n    });\n\n    this.recetteService.getRepas().subscribe(data => {\n      this.repas = data;\n      this.repas.idMenu = 2;\n    });\n\n    this.recetteService.getDouceur().subscribe(data => {\n      this.douceur = data;\n      this.douceur.idMenu = 3;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  updateMenu(petitDej: RecipeDetails, repas: RecipeDetails, douceur: RecipeDetails) {\n    this.allRecipes.forEach(element => {\n      if (element.nomRecette === petitDej.nomRecette) {\n        console.log(element);\n        this.petitDej = element;\n        this.petitDej.idMenu = 1;\n      }\n      if (element.nomRecette === repas.nomRecette) {\n        this.repas = element;\n        this.repas.idMenu = 1;\n      }\n      if (element.nomRecette === douceur.nomRecette) {\n        this.douceur = element;\n        this.douceur.idMenu = 1;\n      }\n    });\n    this.recetteService.updatePetitDej(this.petitDej).subscribe();\n    this.recetteService.updateRepas(this.repas).subscribe();\n    this.recetteService.updateDouceur(this.douceur).subscribe();\n    window.location.reload();\n  }\n\n}\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside id=\"aside\" class=\"sidebar is-visible\">\n                    <div class=\"”sidebar-content”\">\n                        <ul>\n                            <li><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li class=\"active\">\n                                <a id=\"nav\" href=\"/handleMenu\">Gérer le menu</a>\n                            </li>\n                            <li>\n                                <a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a>\n                            </li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n                            <h1>Gérer les suggestions du moment</h1>\n                        </div>\n\n                        <div class=\"flex-container\">\n                            <form (submit)=\"updateMenu(petitDej, repas, douceur)\">\n                                <div class=\"row\" *ngIf=\"petitDej\">\n                                    <div class=\"col col-sm-6\">\n                                        Petit déjeuner :\n                                    </div>\n                                    <div class=\"col col-sm-6\">\n                                        <input id=\"answerInput\" list=\"brow\" [(ngModel)]=\"petitDej.nomRecette\" [ngModelOptions]=\"{ standalone: true }\" />\n                                        <datalist id=\"brow\">\n                      <option\n                        *ngFor=\"let recette of allRecipes\"\n                        [attr.selected]=\"\n                          recette.nomRecette == petitDej.nomRecette\n                            ? true\n                            : null\n                        \"\n                        [attr.value]=\"recette.nomRecette\"\n                      >\n                        {{ recette.nomRecette }}</option\n                      >\n                    </datalist>\n                                        <input type=\"hidden\" name=\"answer\" id=\"answerInput-hidden\" />\n                                    </div>\n                                </div>\n                                <hr>\n                                <div class=\"row\" *ngIf=\"repas\">\n                                    <div class=\"col col-sm-6\">\n                                        Repas :\n                                    </div>\n                                    <div class=\"col col-sm-6\">\n                                        <input id=\"answerInput\" list=\"brow\" [(ngModel)]=\"repas.nomRecette\" [ngModelOptions]=\"{ standalone: true }\" />\n                                        <datalist id=\"brow\">\n                      <option\n                        *ngFor=\"let recette of allRecipes\"\n                        [attr.selected]=\"\n                          recette.nomRecette == repas.nomRecette ? true : null\n                        \"\n                        [attr.value]=\"recette.nomRecette\"\n                      >\n                        {{ recette.nomRecette }}</option\n                      >\n                    </datalist>\n                                        <input type=\"hidden\" name=\"answer\" id=\"answerInput-hidden\" />\n                                    </div>\n                                </div>\n                                <hr>\n                                <div class=\"row\" *ngIf=\"douceur\">\n                                    <div class=\"col col-sm-6\">\n                                        Douceur :\n                                    </div>\n                                    <div class=\"col col-sm-6\">\n                                        <input id=\"answerInput\" list=\"brow\" [(ngModel)]=\"douceur.nomRecette\" [ngModelOptions]=\"{ standalone: true }\" />\n                                        <datalist id=\"brow\">\n                      <option\n                        *ngFor=\"let recette of allRecipes\"\n                        [attr.selected]=\"\n                          recette.nomRecette == douceur.nomRecette ? true : null\n                        \"\n                        [attr.value]=\"recette.nomRecette\"\n                      >\n                        {{ recette.nomRecette }}</option\n                      >\n                    </datalist>\n                                        <input type=\"hidden\" name=\"answer\" id=\"answerInput-hidden\" />\n                                    </div>\n                                </div>\n                                <div class=\"col-auto\">\n                                    <button id=\"btn\" type=\"submit\" class=\"btn btn-sm btn-warning\">\n                    Modifier\n                  </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, Subscription } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecettesService } from '../../service';\nimport { RecipeDetails } from '../../models';\nimport { Router } from '@angular/router';\nimport { MediaObserver } from '@angular/flex-layout';\n\n@Component({\n  selector: 'app-gerer-les-recettes',\n  templateUrl: './gerer-les-recettes.component.html',\n  styleUrls: ['./gerer-les-recettes.component.scss']\n})\nexport class GererLesRecettesComponent implements OnInit {\n\n  watcher: Subscription;\n\n  opened = true;\n  over = 'side';\n  expandHeight = '42px';\n  collapseHeight = '42px';\n  displayMode = 'flat';\n\n  public recette: RecipeDetails;\n  public recettes$: Observable<RecipeDetails[]>;\n  public filteredRecipe$: Observable<RecipeDetails[]>;\n  public filter: FormControl;\n  public filter$: Observable<string>;\n\n  currentPage: number;\n\n  constructor(private recettesService: RecettesService, private router: Router, media: MediaObserver) {\n    // pour la recherche dynamique\n    this.recettes$ = this.recettesService.getAllRecipes();\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n\n    this.currentPage = 1;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  deleteRecipe(idRecette: any) {\n    this.recettesService.deleteRecipe(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/handleRecipes']).then(() => {\n          window.location.reload();\n        });\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n  onPageChange(page: number) {\n    this.currentPage = page;\n    window.scrollTo(0, 0);\n }\n\n\n}\n\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside class=\"sidebar is-visible\">\n                    <div class=”sidebar-content”>\n                        <ul>\n                            <li class=\"active\"><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li><a id=\"nav\" href=\"/handleMenu\">Gérer les suggestions</a></li>\n                            <li><a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a></li>\n                            <li>\n                                <form id=\"nav\" class=\"form-inline my-2 my-lg-0\">\n                                    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n                                </form>\n                            </li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2 row\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n                            <h1>Gérer les recettes</h1>\n                        </div>\n                        <div id=\"titre\">\n                            <h3>Recettes publiées</h3>\n                        </div>\n\n                        <div class=\"app\">\n\n                            <div class=\"recipesWrapper row\">\n\n                                <div class=\"recipeDiv text-center col-lg-4 col-md-6 col-sm-12 p-3\" *ngFor=\"let recette of filteredRecipe$ | async  | paginate: { id: 'listing_pagination', itemsPerPage:9, currentPage: currentPage}\">\n                                    <img class=\"rounded-circle\" src=\"{{recette.lienImage}}\" />\n                                    <h3>{{recette.nomRecette}}</h3>\n\n                                    <i class=\"badge badge-light\"></i> {{recette.nbVues}} 👁\n\n                                    <i class=\"badge badge-light\"></i>{{recette.nbFavoris}}\n                                    <svg class=\"bi bi-heart-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"red\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fill-rule=\"evenodd\"\n                                                d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n                                                clip-rule=\"evenodd\" />\n                                        </svg>\n\n\n                                    <div class=\"controlBtns\">\n                                        <button class=\"editBtn btn btn-warning\" [routerLink]=\"['/updateRecipe', recette.idRecette]\">\n                                            <i class=\"fa fa-pencil\" aria-hidden=\"true\">\n                                            </i>\n                                        </button>\n\n                                        <button class=\"deleteBtn btn btn-danger\" (click)=\"deleteRecipe(recette.idRecette)\">\n                                            <i class=\"fa fa-trash\" aria-hidden=\"true\">\n                                            </i>\n                                        </button>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                            <div id=\"paginationRecette\" #scrollContainer>\n                                <pagination-controls id='listing_pagination' (pageChange)=\"onPageChange($event)\" previousLabel=\"Précédent\" nextLabel=\"Suivant\"></pagination-controls>\n                            </div>\n\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecettesService, IngredientsService} from '../../service';\nimport { IngredientDetails } from '../../models';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ingredients',\n  templateUrl: './ingredients.component.html',\n  styleUrls: ['./ingredients.component.scss']\n})\nexport class IngredientsComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>;\n  public ingredients: IngredientDetails[];\n\n  public ingredient: IngredientDetails = {\n    idIngredient: null,\n    nomIngredient: '',\n    qte: null,\n    libelleUnite: '',\n  };\n\n  public filteredIngredient$: Observable<IngredientDetails[]>;\n  public filter: FormControl;\n  public filter$: Observable<string>;\n\n\n  constructor(private recettesService: RecettesService, private router: Router, private ingredientsService: IngredientsService) {\n     // pour la recherche dynamique\n     this.ingredients$ = this.ingredientsService.getAllIngredients();\n     this.filter = new FormControl('');\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n     // tslint:disable-next-line: deprecation\n     this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n       .pipe(map(([ingredients, filterString]) =>\n         ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllIngredients() {\n\n    this.ingredients$ = this.ingredientsService.getAllIngredients();\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n\n  }\n\n  deleteIngredient(idIngredient: any) {\n    this.ingredientsService.deleteIngredient(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/ingredient'], {\n          queryParams: {refresh: new Date().getTime()}\n       });\n        }, (err) => {\n          console.log(err);\n        }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n\n  updateIngredient(ingredient: IngredientDetails) {\n    this.ingredientsService.updateIngredient(ingredient).subscribe((res: any) => {\n        window.location.reload();\n      }, (err: any) => {\n        console.error(err);\n      }\n    );\n  }\n\n  addIngredient() {\n    this.ingredientsService.addIngredient(this.ingredient);\n    window.location.reload();\n  }\n\n}\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside class=\"sidebar is-visible\">\n                    <div class=”sidebar-content”>\n                        <ul>\n                            <li><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li class=\"active\"><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li><a id=\"nav\" href=\"/handleMenu\">Gérer le menu</a></li>\n                            <li><a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a></li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n\n                            <h1>Ingrédients</h1>\n\n                        </div>\n\n                        <div class='flex-container'>\n\n                            <div id=\"addIng\">\n                                <h6 id=\"question\"> Ajouter un nouvel ingredient </h6>\n                                <form (submit)=\"addIngredient()\">\n                                    <input type=\"text\" class=\"form-control\" name=\"nomIngredient\" placeholder=\"nom ingredient\" [(ngModel)]=\"ingredient.nomIngredient\">\n\n                                    <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n\n                                </form>\n                            </div>\n\n                            <div>\n                                <form>\n                                    <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher un ingrédient\" aria-label=\"Search\" [formControl]=\"filter\">\n                                </form>\n                                <table class=\"table col-md-12 mx-auto\">\n\n                                    <tr *ngFor=\"let ingredient of filteredIngredient$ | async; let i=index\">\n                                        <td>\n\n                                            <form (submit)=\"updateIngredient(ingredient)\">\n                                                <div class=\"form-row align-items-center\">\n                                                    <div class=\"col-auto\">\n\n                                                        <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"nomIngredient\" value={{ingredient.nomIngredient}} [(ngModel)]=\"ingredient.nomIngredient\">\n                                                    </div>\n                                                    <div class=\"col-auto\">\n                                                        <button id=\"btn\" type=\"submit\" class=\"btn btn-sm btn-warning\"><i class=\"fa fa-pencil\" ></i></button>\n\n\n                                                    </div>\n                                                    <div class=\"col-auto\">\n\n                                                        <button id=\"btn\" class=\"btn btn-sm btn-danger\" (click)=\"deleteIngredient(ingredient.idIngredient)\"><i class=\"fa fa-trash\"></i></button>\n\n                                                    </div>\n                                                </div>\n                                            </form>\n\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>","import { Component, OnInit } from \"@angular/core\";\nimport { AuthentificationService, TokenPayload } from \"../../service\";\nimport { Router } from \"@angular/router\";\nimport {\n  Validators,\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  FormGroupDirective,\n  NgForm,\n} from \"@angular/forms\";\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { Notification } from \"src/app/models\";\nimport { NotificationService } from \"src/app/service/notifications/notification.service\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\n    const invalidParent = !!(\n      control &&\n      control.parent &&\n      control.parent.invalid &&\n      control.parent.dirty\n    );\n\n    return invalidCtrl || invalidParent;\n  }\n}\n\n@Component({\n  selector: \"app-inscrire\",\n  templateUrl: \"./inscrire.component.html\",\n  styleUrls: [\"./inscrire.component.scss\"],\n})\nexport class InscrireComponent implements OnInit {\n  credentials: TokenPayload = {\n    pseudo: \"\",\n    email: \"\",\n    mdp: \"\",\n    mdp2: \"\",\n    admin: false,\n    abonneNews: false,\n    error: \"\",\n  };\n\n  userForm: FormGroup;\n\n  pseudos: any = [];\n  emails: any = [];\n\n  // pour confirm mdp\n  mdpForm: FormGroup;\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    private auth: AuthentificationService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private notifService: NotificationService\n  ) {\n    this.mdpForm = this.formBuilder.group(\n      {\n        password: [\"\", [Validators.required]],\n        confirmPassword: [\"\"],\n      },\n      { validator: this.checkPasswords }\n    );\n\n    this.auth.getAllPseudo().subscribe((res) => {\n      this.pseudos = res;\n    });\n\n    this.auth.getAllEmail().subscribe((res) => {\n      this.emails = res;\n    });\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  // We Init the form with the validators\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      pseudo: [\"\", Validators.required],\n      email: [\"\", [Validators.required, Validators.email]],\n      mdp: [\"\", Validators.required],\n      mdp2: [\"\", Validators.required],\n      abonneNews: [\"\", Validators.required],\n    });\n  }\n\n  checkPseudo() {\n    let res: boolean = false;\n    this.pseudos.forEach((element) => {\n      if (element.pseudo === this.userForm.value.pseudo) {\n        res = true;\n      }\n    });\n    return res;\n  }\n\n  checkEmail() {\n    let res: boolean = false;\n    this.emails.forEach((element) => {\n      if (element.email === this.userForm.value.email) {\n        res = true;\n      }\n    });\n    return res;\n  }\n\n  checkPasswords(group: FormGroup) {\n    // here we have the 'passwords' group\n    const pass = group.controls.password.value;\n    const confirmPass = group.controls.confirmPassword.value;\n\n    return pass === confirmPass ? null : { notSame: true };\n  }\n\n  //inscription\n  register() {\n    const mdpFormValue = this.mdpForm.value;\n    const formValue = this.userForm.value;\n\n    if (formValue.mdp !== formValue.mdp2) {\n      alert(\"Les mots de passe ne sont pas identiques.\");\n      return;\n    }\n\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.email = formValue.email;\n    this.credentials.mdp = mdpFormValue.password;\n    this.credentials.mdp2 = mdpFormValue.confirmPassword;\n    this.credentials.abonneNews = formValue.abonneNews;\n\n    this.auth.register(this.credentials).subscribe(\n      (res) => {\n        if (res.error === \"L'utilisateur existe déjà\") {\n          alert(\"L'utilisateur existe déjà\");\n          return;\n        } else {\n          this.auth.logout();\n          this.notificationInscription(this.credentials.pseudo);\n          if (this.credentials.abonneNews) {\n            this.notificationAbonne(this.credentials.pseudo);\n          }\n          alert(\n            \"Vous pouvez maintenant aller dans votre boîte mail pour confirmer votre adresse mail. Pensez à vérifier dans vos spams !\"\n          );\n          setTimeout(() => this.router.navigate([\"login\"]), 5);\n        }\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n  //notification inscription\n  notificationInscription(pseudo) {\n    let notif: Notification = {\n      pseudo: pseudo,\n      idRecette: null,\n      type: \"user\",\n    };\n    this.notifService.addNotification(notif).subscribe();\n  }\n\n  //notification abonné\n  notificationAbonne(pseudo) {\n    let notif: Notification = {\n      pseudo: pseudo,\n      idRecette: null,\n      type: \"abonne\",\n    };\n    this.notifService.addNotification(notif).subscribe();\n  }\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <form\n          class=\"contact-form\"\n          [formGroup]=\"userForm\"\n          (ngSubmit)=\"register()\"\n          data-toggle=\"validator\"\n          role=\"form\"\n        >\n          <h1 id=\"lien\" class=\"h3 mb-3 font-weight-normal\">S'inscrire</h1>\n          <div class=\"form-group\">\n            <label>Pseudo *</label>\n            <input\n              id=\"pseudo\"\n              pattern=\"[a-zA-Z0-9._%+-]*\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"pseudo\"\n              placeholder=\"pseudo\"\n              required\n            />\n            <mat-error *ngIf=\"checkPseudo()\">\n              Ce pseudo est déjà utilisé\n            </mat-error>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"inputEmail\" class=\"control-label\">Email *</label>\n            <input\n              id=\"to\"\n              type=\"email\"\n              class=\"form-control\"\n              formControlName=\"email\"\n              placeholder=\"nom.prenom@exemple.com\"\n              id=\"inputEmail\"\n              required\n              pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n              data-error=\"Bruh, that email address is invalid\"\n            />\n            <div class=\"help-block with-errors\">\n              <mat-error *ngIf=\"checkEmail()\">\n                Cet email est déjà utilisé\n              </mat-error>\n            </div>\n          </div>\n          <div>\n            <form [formGroup]=\"mdpForm\">\n              <mat-form-field>\n                <label>Mot de passe *</label>\n                <input\n                  matInput\n                  id=\"mdp\"\n                  type=\"password\"\n                  class=\"form-control\"\n                  formControlName=\"password\"\n                  required\n                />\n                <mat-error *ngIf=\"mdpForm.hasError('required', 'password')\">\n                  Entrez un nouveau mot de passe\n                </mat-error>\n              </mat-form-field>\n\n              <mat-form-field>\n                <label>Confirmer le mot de passe *</label>\n                <input\n                  matInput\n                  id=\"mdp2\"\n                  type=\"password\"\n                  class=\"form-control\"\n                  formControlName=\"confirmPassword\"\n                  [errorStateMatcher]=\"matcher\"\n                />\n                <mat-error *ngIf=\"mdpForm.hasError('notSame')\">\n                  Les mots de passes sont différents\n                </mat-error>\n              </mat-form-field>\n            </form>\n          </div>\n\n          <!--<div class=\"form-group\">\n                        <label>Mot de passe *</label>\n                        <input id=\"mdp\" type=\"password\" class=\"form-control\" formControlName=\"mdp\" placeholder=\"****\" onblur=\"verif();\" required>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Confirmer le mot de passe *</label>\n                        <input id=\"mdp2\" type=\"password\" class=\"form-control\" formControlName=\"mdp2\" placeholder=\"****\" onblur=\"verif();\" required>\n                        <svg  class=\"bi bi-check\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"green\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" d=\"M13.854 3.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3.5-3.5a.5.5 0 11.708-.708L6.5 10.293l6.646-6.647a.5.5 0 01.708 0z\" clip-rule=\"evenodd\"/>\n                          </svg>\n                    </div>-->\n\n          <div class=\"form-group\" id=\"abonne\">\n            <label\n              >Voulez vous recevoir un email lorsqu'une nouvelle recette est\n              publiée ?</label\n            >\n            <br />\n            <div class=\"form-row align-items-center\">\n              <div class=\"col-auto\">\n                <input\n                  type=\"radio\"\n                  formControlName=\"abonneNews\"\n                  value=\"true\"\n                  checked\n                />\n                Oui\n              </div>\n              <div class=\"col-auto\">\n                <input\n                  type=\"radio\"\n                  formControlName=\"abonneNews\"\n                  value=\"false\"\n                />\n                Non\n              </div>\n            </div>\n          </div>\n\n          <input\n            id=\"send_email\"\n            class=\"btn btn-lg btn-primary\"\n            type=\"submit\"\n            [disabled]=\"mdpForm.invalid\"\n            value=\"Créer mon compte\"\n          />\n          <br />\n          <p>* Champs obligatoires.</p>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecettesService, AuthentificationService, ShoppingListService, IngredientsService } from '../../service';\nimport { IngredientDetails, ListCourses } from '../../models';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-ma-liste-de-courses',\n  templateUrl: './ma-liste-de-courses.component.html',\n  styleUrls: ['./ma-liste-de-courses.component.scss']\n})\nexport class MaListeDeCoursesComponent implements OnInit {\n  public ingredients$: Observable<ListCourses[]>;\n  public restIngredients$: Observable<ListCourses[]>;\n\n  public allIngredient: IngredientDetails[];\n\n  public filteredIngredient$: Observable<ListCourses[]>;\n  public filter: FormControl;\n  public filter$: Observable<string>;\n\n  public ingredientToDelete: ListCourses = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    idIngredient: null,\n    nomIngredient: '',\n    idIngredientList: null\n  };\n\n  public ingredientToAdd: ListCourses = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    idIngredient: null,\n    nomIngredient: '',\n    idIngredientList: null\n  };\n\n\n  constructor(private recetteService: RecettesService, private router: Router, private auth: AuthentificationService,\n              private modalService: NgbModal, private shoppingListService: ShoppingListService,\n              private ingredientService: IngredientsService) {\n    this.ingredients$ = this.shoppingListService.getListeCourses();\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n\n    this.restIngredients$ = this.shoppingListService.getRestListeCourses();\n\n    this.ingredientService.getAllIngredients().subscribe(res => {\n      this.allIngredient = res;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  getInitData() {\n    this.ingredients$ = this.shoppingListService.getListeCourses();\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n\n    this.restIngredients$ = this.shoppingListService.getRestListeCourses();\n  }\n\n  getListeCourses() {\n    this.ingredients$ = this.shoppingListService.getListeCourses();\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n\n  }\n\n  deleteListeCourse(nomIngredient: any) {\n    this.ingredientToDelete.nomIngredient = nomIngredient;\n    this.shoppingListService.deleteListeCourse(nomIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/refresh'], {\n          queryParams: {url: 'shoppingList'}\n        });\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.allIngredient.forEach(element => {\n          if (element.nomIngredient === this.ingredientToAdd.nomIngredient) {\n            this.ingredientToAdd.idIngredient = element.idIngredient;\n          }\n        });\n        this.shoppingListService.addIngredientShoppingList(this.ingredientToAdd).subscribe(res => {\n          this.getInitData();\n          this.ingredientToAdd.nomIngredient = '';\n          this.ingredientToAdd.idIngredient = null;\n        });\n        this.ingredientToAdd.idIngredient = result.idIngredient;\n        this.shoppingListService.addIngredientShoppingList(this.ingredientToAdd);\n        this.router.navigate(['/refresh'], {\n         queryParams: {url: 'shoppingList'}\n        });\n      });\n  }\n}\n","<div id=\"liste\">\n    <div class=\"app\">\n        <h2>Ma liste de courses</h2>\n        <form>\n            <input type=\"search\" placeholder=\"Recherche\" [formControl]=\"filter\">\n            <button id=\"add\" class=\"btn btn-outline-success\" (click)=\"open(content)\"><i class=\"fa fa-plus-circle\"></i></button>\n\n        </form>\n\n        <i id=\"panier\" class=\"fa fa-shopping-basket fa-3x\" aria-hidden=\"true\"></i>\n        <div class=\"app-body\" *ngFor=\"let ingredient of filteredIngredient$ | async\">\n            <ul class=\"list\">{{ingredient.nomIngredient}}\n                <button id=\"trash\" class=\"btn  btn-outline-danger\" (click)=deleteListeCourse(ingredient.nomIngredient)><i class=\"fa fa-trash\"></i></button>\n            </ul>\n        </div>\n    </div>\n\n</div>\n\n<ng-template #content let-modal>\n    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\"></h4>\n    </div>\n    <div class=\"modal-body\">\n        <form>\n            <div class=\"form-row\">\n                <div class=\"col-md-6\">\n                    <label for=\"validationTooltip04\">Ingrédient</label>\n                    <input type=\"text\" class=\"col-xs-8 col-sm-9\" placeholder=\"\" list=\"brow\" #nomIngredient=\"ngModel\" [(ngModel)]=\"ingredientToAdd.nomIngredient\" [ngModelOptions]=\"{ standalone: true }\" />\n                    <datalist id=\"brow\">\n          <option\n            *ngFor=\"let ingredient of restIngredients$ | async\"\n            [ngValue]=\"ingredient.nomIngredient\"\n          >\n          {{ingredient.nomIngredient}}</option\n          >\n        </datalist>\n                    <div class=\"invalid-tooltip\">\n                        Selectionnez un ingrédient.\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button tyoe=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close(ingredientToAdd)\">Ajouter</button>\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mentions-legales',\n  templateUrl: './mentions-legales.component.html',\n  styleUrls: ['./mentions-legales.component.css']\n})\nexport class MentionsLegalesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-xl-6 mx-auto text-center\">\n                <div class=\"section-title mb-100\">\n\n                    <h4>Conditions générales d'utilisation</h4>\n                </div>\n            </div>\n        </div>\n        <div class=\"row text-center\">\n            <div class=\"col-md-12\">\n                <h5>Comment utiliser les recettes diffusées sur ce site</h5>\n                <p>\n                    Vous ne pouvez pas reproduire ces recettes dans le cadre d’un usage commercial.\n                    <br> Les recettes de ce site sont dans une base de données appartenant à Marine’s recipes, vous ne pouvez ni reproduire cette base de données, ni extraire des données contenues dans cette base autrement que pour votre usage privé.\n                    <ul class=\"a\">\n                        <li>\n                            Vous pouvez utiliser toutes les recettes diffusées sur le site pour votre usage privé : repas entre amis ou en famille. N'hésitez pas à donner votre avis sur les recettes en commentaire. Inscrivez-vous et indiquez que vous souhaitez recevoir un email\n                            lorsqu’une nouvelle recette est publiée si vous souhaitez rater aucune recette. Si vous souhaitez partager une recette à un proche vous pouvez cliquer sur le bouton partager sur la page d’une recette.\n                        </li>\n                        <li>\n                            Si vous êtes cuisinier ou restaurateur, vous pouvez utiliser les recettes sans droit de publier la recette elle-même sous 2 conditions :\n                            <ul class=\"a\">\n                                <li>\n                                    • retour d'expérience : dans les commentaires pouvant être associés à chaque recette.\n                                </li>\n                                <li>\n                                    • visibilité de la source de la recette sur votre menu : \" Cette recette vient du site marinesrecipes.fr \".\n\n                                </li>\n                            </ul>\n                        </li>\n                        <li>\n                            Si vous êtes une Ecole de formation de cuisine, un élève cuisinier ou une association culinaire, vous n'avez pas l'autorisation d'utiliser les recettes sauf accord préalable de Marine. Contactez-nous pour connaître les possibilités de partenariats : marinesrecipes@gmail.com\n                            .\n\n                        </li>\n                    </ul>\n\n                    <h5>Code de conduite</h5>\n                    <p>\n                        <ul class=\"a\">\n                            <li>\n                                Comment utiliser les logos figurant sur le site : Les logos, marques, dessins, illustrations, textes et noms des rubriques figurant sur notre site ne peuvent pas être utilisés, reproduits, modifiés, diffusés, ou empruntés pour créer des œuvres dérivées\n                                sans notre autorisation. Les marques citées sont déposées par leurs propriétaires respectifs et sont protégés par le droit des marques. Ces éléments ne peuvent donc pas être utilisés, reproduits, modifiés, diffusés, ou\n                                empruntés pour créer des œuvres dérivées sans l'autorisation de leurs titulaires respectifs.\n                            </li>\n                            <li>\n                                Marine’s recipes demande aux utilisateurs de ses services de respecter les droits de propriété intellectuelle d'autrui. Dès lors, si vous considérez que votre marque ou votre œuvre a été copiée ou est utilisée d'une manière susceptible de porter atteinte\n                                à vos droits tels que reconnus par la législation française sur le site Marinesrecipes.fr, merci de nous en informer par email : marinesrecipes@gmail.com.\n                            </li>\n                            <li>\n                                Utilisation des espaces de communauté Vous vous engagez à ne pas vous servir du site Marinesrecipes.fr et notamment des commentaires ou de la rubrique « Contact » pour :\n                                <ul>\n                                    <li>\n                                        Télécharger, envoyer, transmettre par e-mail ou de toute autre manière tout contenu qui soit illégal, nuisible, menaçant, abusif, constitutif de harcèlement, diffamatoire, vulgaire, obscène, menaçant pour la vie privée d'autrui, haineux, raciste, ou autrement\n                                        répréhensible ;\n                                    </li>\n                                    <li>\n                                        Porter atteinte d'une quelconque manière aux utilisateurs mineurs. Marine’s recipes se réserve le droit, à ce titre ou lorsqu'une contribution est contraire à la ligne éditoriale de son site (sans que cela ne constitue une obligation) de supprimer tout\n                                        contenu disponible via son site, notamment dans les commentaires.\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n\n\n                        <h5>Responsabilités</h5>\n                        <p>\n                            <ul class=\"a\">\n                                <li>\n                                    Marine’s recipes ne garantit pas le résultat des recettes diffusées sur son site, ni leur qualité. Marinesrecipes.fr ne garantit pas que les recettes répondront aux attentes des internautes ou que leurs résultats seront exacts et fiables. En conséquence,\n                                    la responsabilité de Marinesrecipes.fr ne saurait être engagée en cas d'erreur ou d'omission dans l'une de ces recettes, textes, informations ou illustrations diffusées sur son site. Toutefois, merci de nous faire connaître\n                                    vos commentaires dans la rubrique \" Contact \", ainsi que dans les commentaires pouvant être associés à chaque recette.\n                                </li>\n                                <li>\n                                    Des liens hypertextes peuvent renvoyer vers d'autres sites que le site Marinesrecipes.fr, nous dégageons toute responsabilité dans le cas où le contenu de ces sites serait contraire à la réglementation en vigueur.\n                                </li>\n                                <li>\n                                    Tout contenu téléchargé se fait aux risques et périls de l'utilisateur et sous sa seule responsabilité. En conséquence, Marinesrecipes.fr ne saurait être tenu responsable d'un quelconque dommage subi par l'ordinateur de l'utilisateur ou d'une quelconque\n                                    perte de données consécutives au téléchargement.\n                                </li>\n                                <li>\n                                    Tout utilisateur du site Marinesrecipes.fr s'engage à garantir et indemniser la société Marinesrecipes.fr contre tout dommage, plainte ou demande émanant de tiers consécutif à l'envoi, la diffusion ou la transmission de contenu sur le Marinesrecipes.fr\n                                    .\n                                </li>\n                            </ul>\n\n\n\n            </div>\n\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ListRecipe } from 'src/app/models/listRecipe.model';\nimport { RecettesService, AuthentificationService } from 'src/app/service';\nimport { RecipeDetails } from 'src/app/models';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Notification } from \"src/app/models\";\nimport { NotificationService } from \"src/app/service/notifications/notification.service\";\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  public list: ListRecipe[];\n  public allRecipe: RecipeDetails[] = [];\n  public newRecetteList: ListRecipe = {\n    pseudoUser: '',\n    nomRecette: '',\n    idRecette: null,\n    idRecipeList: null,\n    complet: false\n  };\n\n  public listAdmin: ListRecipe[];\n  public menuAdmin = false;\n\n  constructor(private recetteService: RecettesService, private auth: AuthentificationService, private router: Router,private notifService: NotificationService) {\n    this.getInitData();\n\n    if (this.auth.isLoggedIn()) {\n      this.newRecetteList.pseudoUser = this.auth.getUserDetails().pseudo;\n    }\n\n    this.recetteService.getListRecipesOfAdmin().subscribe(res => {\n      this.listAdmin = res;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  addRecipeToList() {\n    this.allRecipe.forEach(element => {\n      if (element.nomRecette === this.newRecetteList.nomRecette) {\n        this.newRecetteList.idRecette = element.idRecette;\n      }\n    });\n    this.recetteService.addRecipeToList(this.newRecetteList).subscribe(res => {\n      this.getInitData();\n      this.newRecetteList.nomRecette = '';\n      this.newRecetteList.idRecette = null;\n    });\n  }\n\n  getInitData(): void {\n    this.recetteService.getListRecipes().subscribe(data => {\n      this.list = data;\n      console.log(data);\n    });\n\n    this.allRecipe = [];\n\n    this.recetteService.getAllRecipesAsc().subscribe(data => {\n      data.forEach((element: RecipeDetails) => {\n        let res = true;\n        this.list.forEach(element2 => {\n          if (element.idRecette === element2.idRecette) {\n            res = false;\n          }\n        });\n        if (res) {\n          this.allRecipe.push(element);\n        }\n      });\n    });\n  }\n\n  deleteRecipeOfList(recette: ListRecipe) {\n    this.recetteService.deleteRecipeOfList(recette).subscribe(res => {\n      this.getInitData();\n      this.newRecetteList.nomRecette = '';\n      this.newRecetteList.idRecette = null;\n    });\n  }\n\n  deleteAllRecipeOfList() {\n    this.recetteService.deleteAllRecipeOfList().subscribe(res => {\n      this.getInitData();\n      this.newRecetteList.nomRecette = '';\n      this.newRecetteList.idRecette = null;\n    });\n  }\n\n  changeStateOfRecipe(recette: ListRecipe) {\n    this.recetteService.changeStateOfRecipe(recette).subscribe(res => {\n      this.getInitData();\n      this.newRecetteList.nomRecette = '';\n      this.newRecetteList.idRecette = null;\n    });\n  }\n\n  changeMenu() {\n    this.menuAdmin = !this.menuAdmin;\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbViewMenu(recette).subscribe(\n      (res) => {\n        this.notificationVue(recette.idRecette);\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload();\n        });\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Cette recette n\\'existe pas !');\n          }\n        }\n      });\n  }\n   //notification vue\n   notificationVue(idRecette) {\n    let notif: Notification = {\n      pseudo: null,\n      idRecette: idRecette,\n      type: \"vue\",\n    };\n    this.notifService.addNotification(notif).subscribe();\n  }\n}\n","<section id=\"fond\" *ngIf=\"!menuAdmin\">\n    <div id=\"top\">\n        <h1>\n            Menu de la <br /> semaine\n        </h1>\n        <div class=\"center\">\n            <button type=\"button\" class=\"btn btn-success\" (click)=\"changeMenu()\">\n        Afficher le menu de la semaine de Marine\n      </button>\n        </div>\n        <div class=\"container\">\n            <div class=\"row\">\n                <input type=\"text\" class=\"col-xs-8 col-sm-9\" placeholder=\"Nom recette..\" list=\"brow\" #nomRecette=\"ngModel\" [(ngModel)]=\"newRecetteList.nomRecette\" [ngModelOptions]=\"{ standalone: true }\" />\n                <datalist id=\"brow\">\n          <option\n            *ngFor=\"let recette of allRecipe\"\n            [ngValue]=\"recette.nomRecette\"\n            [disabled]=\"recette.disabled\"\n          >\n            {{ recette.nomRecette }}</option\n          >\n        </datalist>\n                <div class=\"input-buttons col-xs-4 col-sm-3\">\n                    <a class=\"clear-text\" (click)=\"deleteAllRecipeOfList()\"><a class=\"picto-item\" aria-label=\"Tout supprimer\"><i class=\"fa fa-trash-o fa-2x\"></i></a>\n                    </a>\n                    <a class=\"add-todo\" (click)=\"addRecipeToList()\"><i class=\"fa fa-plus fa-2x\"></i\n          ></a>\n                </div>\n                <!-- div.input-buttons-->\n            </div>\n            <!-- div.row -->\n            <div class=\"row\">\n                <div class=\"error\">\n                    <a href=\"/menu\"><i class=\"fa fa-times\"></i></a>\n                    <p>\n                        We both know you should be doing something right now. Please enter a task.\n                    </p>\n                </div>\n                <!-- div.error -->\n                <!-- Start to-do list -->\n                <ul class=\"todo-list col-xs-12\">\n                    <li *ngFor=\"let recette of list\" [class.complete]=\"recette.complet\" class=\"todo\">\n                        <a style=\"color:#007bff\" *ngIf=\"recette.idRecette\" (click)=\"updateNbView(recette)\">{{ recette.nomRecette }}</a\n            >\n            <a *ngIf=\"!recette.idRecette\">{{ recette.nomRecette }}</a>\n                        <span>\n              <a class=\"check\">\n                <i\n                  class=\"fa fa-check fa-lg\"\n                  (click)=\"changeStateOfRecipe(recette)\"\n                ></i>\n              </a>\n              <a (click)=\"deleteRecipeOfList(recette)\" class=\"delete-todo\">\n                <i class=\"fa fa-trash-o fa-lg\"></i>\n              </a>\n            </span>\n                    </li>\n                    <hr />\n                </ul>\n            </div>\n            <!-- div.row -->\n        </div>\n    </div>\n</section>\n\n<section id=\"fond\" *ngIf=\"menuAdmin\">\n    <div id=\"top\">\n        <h1>\n            Menu de la <br /> semaine\n        </h1>\n        <div class=\"center\">\n            <button type=\"button\" class=\"btn btn-success\" (click)=\"changeMenu()\">\n        Afficher mon menu de la semaine\n      </button>\n        </div>\n        <div class=\"container\">\n            <!-- div.row -->\n            <div class=\"row\">\n                <div class=\"error\">\n                    <a href=\"/menu\"><i class=\"fa fa-times\"></i></a>\n                    <p>\n                        We both know you should be doing something right now. Please enter a task.\n                    </p>\n                </div>\n                <!-- div.error -->\n                <!-- Start to-do list -->\n                <ul class=\"todo-list col-xs-12\">\n                    <li *ngFor=\"let recette of listAdmin\" [class.complete]=\"recette.complet\" class=\"todo\">\n                        <a style=\"color:#007bff\" *ngIf=\"recette.idRecette\" (click)=\"updateNbView(recette)\">{{ recette.nomRecette }}</a\n            >\n            <a *ngIf=\"!recette.idRecette\">{{ recette.nomRecette }}</a>\n                    </li>\n                    <hr />\n                </ul>\n            </div>\n            <!-- div.row -->\n        </div>\n    </div>\n</section>\n\n<!-- div.container -->\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>\n\n<script src=\"../../../assets/js/custom.js\"></script>","import { Component, OnInit } from '@angular/core';\nimport { RecettesService, AuthentificationService, CommentairesService } from '../../service';\nimport { CommentaireDetails } from '../../models';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\nimport { Notification } from \"src/app/models\";\nimport { NotificationService } from \"src/app/service/notifications/notification.service\";\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-mes-commentaires',\n  templateUrl: './mes-commentaires.component.html',\n  styleUrls: ['./mes-commentaires.component.scss']\n})\nexport class MesCommentairesComponent implements OnInit {\n\n  public commentaires: CommentaireDetails[];\n\n  public commentaireToModify: CommentaireDetails = {\n    ecritPar: this.auth.getUserDetails().pseudo\n  };\n\n  constructor(public auth: AuthentificationService, private recetteService: RecettesService,\n              private modalService: NgbModal, private router: Router, private commentairesService: CommentairesService,private notifService: NotificationService) {\n    this.commentairesService.getCommentaireUser(this.auth.getUserDetails().pseudo).subscribe(\n      commentaires => {\n\n        this.commentaires = commentaires;\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n        this.commentaires.forEach(element => {\n\n          const d = new Date(element.dateCommentaire);\n\n          element.dateCommentaire = d.toLocaleString('FR-fr', options);\n\n          this.recetteService.getRecipeById(element.concerne).subscribe(data => {\n            element.nomRecette = data.nomRecette;\n          });\n        });\n      }\n    );\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.commentaireToModify.message = result.message;\n        this.commentaireToModify.dateCommentaire = result.dateCommentaire;\n        this.commentaireToModify.concerne = result.concerne;\n        this.commentairesService.modifyCommentaire(this.commentaireToModify);\n        this.router.navigate(['/refresh'], {\n          queryParams: {url: 'comment'}\n        });\n      });\n  }\n\n  deleteCommentaire(idCommentaire: any) {\n    this.commentairesService.deleteCommentaire(idCommentaire)\n      .subscribe(res => {\n        this.router.navigate(['/comment']).then(() => {\n          window.location.reload();\n        });\n        }, (err) => {\n          console.log(err);\n        }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n  updateNbView(commentaire: any) {\n    this.recetteService.getRecipeById(commentaire.concerne).subscribe(recipe => {\n      this.recetteService.updateNbView(recipe).subscribe(\n        (res) => {\n          this.notificationVue(recipe.idRecette);\n          console.log(\"2\")\n          this.router.navigate(['/recipe', recipe.idRecette]).then(() => {\n            window.location.reload();\n          });\n        }, err => {\n          if (err instanceof HttpErrorResponse) {\n            if (err.status === 402) {\n              console.log('Cette recette n\\'existe pas !');\n            }\n          }\n        });\n    })\n  }\n   //notification vue\n   notificationVue(idRecette) {\n    let notif: Notification = {\n      pseudo: null,\n      idRecette: idRecette,\n      type: \"vue\",\n    };\n    this.notifService.addNotification(notif).subscribe();\n  }\n}\n\n\n","<section class=\"contact \" id=\"contact\">\n    <article id=\"burger-fourth\">\n\n        <h2 class=\"text-center\" id=\"titre\">Mes commentaires</h2>\n\n        <div class=\"comment-container theme--light\">\n            <div class=\"comments\">\n                <div class=\"card v-card v-sheet theme--light elevation-2\" *ngFor=\"let commentaire of commentaires\">\n                    <div class=\"header\">\n                        <div *ngIf=\"!auth.isAdmin()\" class=\"v-avatar avatar\" style=\"height: 50px; width: 50px;\"><img src=\"../../../assets/img/avatar.png\"></div>\n                        <div *ngIf=\"auth.isAdmin()\" class=\"v-avatar avatar\" style=\"height: 2.5em; width: 3.5em;\"><img src=\"../../../assets/img/logo.jpeg\"></div>\n                        <span class=\"displayName title\"><a (click)=\"updateNbView(commentaire)\">{{commentaire.nomRecette}}</a></span> <span class=\"displayName caption\">{{commentaire.dateCommentaire}}</span></div>\n                    <!---->\n                    <div class=\"wrapper comment\">\n                        <p>{{commentaire.message}}\n                        </p>\n                    </div>\n                    <div class=\"actions\">\n                        <!--<button id=\"btn\" class=\"btn btn-sm btn-danger\" (click)=\"deleteCommentaire(commentaire.idCommentaire)\"><i class=\" fa fa-trash \"></i></button> mettre un bouton modifier\n                   -->\n                        <!---->\n                        <!---->\n                        <button class=\"btn btn-warning\" (click)=\"open(content)\"><i class=\"fa fa-pencil\"></i></button>\n                        <button id=\"poubelle\" type=\"submit\" class=\"btn btn-sm btn-danger\" (click)=\"deleteCommentaire(commentaire.idCommentaire)\"><i class=\"fa fa-trash\"></i></button>\n\n                    </div>\n                    <div class=\"v-dialog__container\" style=\"display: block;\"></div>\n                    <ng-template #content let-modal class=\"modal\">\n                        <div class=\"modal-header\">\n                            <h4 class=\"modal-title\">Modification du commentaire</h4>\n                        </div>\n                        <div class=\"modal-body\">\n                            <textarea #message=\"ngModel\" [(ngModel)]=\"commentaire.message\" [ngModelOptions]=\"{standalone: true}\">\n                                        {{commentaire.message}}\n                                    </textarea>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-outline-warning\" (click)=\"modal.close(commentaire)\">Modifier</button>\n                        </div>\n                    </ng-template>\n                </div>\n\n\n\n                <!---->\n                <div class=\"answers\">\n\n                    <!---->\n                </div>\n            </div>\n            <div>\n\n            </div>\n\n        </div>\n\n    </article>\n</section>","import { Component, OnInit, OnChanges } from \"@angular/core\";\nimport { Observable, combineLatest } from \"rxjs\";\nimport { map, startWith } from \"rxjs/operators\";\nimport { FormControl, FormGroup, FormBuilder } from \"@angular/forms\";\nimport {\n  RecettesService,\n  AuthentificationService,\n  FavorisService,\n  CategoriesService,\n} from \"../../service\";\nimport { RecipeDetails, CategoryDetails } from \"../../models\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { HashTable } from \"../recettes/recettes.component\";\nimport { Notification } from \"src/app/models\";\nimport { NotificationService } from \"src/app/service/notifications/notification.service\";\n\n@Component({\n  selector: \"app-mes-recettes\",\n  templateUrl: \"./mes-recettes.component.html\",\n  styleUrls: [\"./mes-recettes.component.scss\"],\n})\nexport class MesRecettesComponent implements OnInit, OnChanges {\n  page = 1;\n\n  public actualCategory: number = null;\n  public recipeByCategory: HashTable<RecipeDetails[]> = {};\n  public recipeCategory: RecipeDetails[] = [];\n\n  public researchForm: FormGroup;\n\n  public allRecipe: RecipeDetails[];\n  public allRecipe2: RecipeDetails[];\n\n  public recettes$: Observable<RecipeDetails[]>;\n  public categories: CategoryDetails[];\n  public filteredRecipe$: Observable<RecipeDetails[]>;\n  public filter: FormControl;\n  public filter$: Observable<string>;\n\n  constructor(\n    private recetteService: RecettesService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    public auth: AuthentificationService,\n    private favorisService: FavorisService,\n    private categoriesService: CategoriesService,\n    private notifService: NotificationService\n  ) {\n    // pour la recherche dynamique\n    this.recettes$ = this.favorisService.getFavoris();\n    this.filter = new FormControl(\"\");\n    this.filter$ = this.filter.valueChanges.pipe(startWith(\"\"));\n    // tslint:disable-next-line: deprecation\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$).pipe(\n      map(([recipes, filterString]) =>\n        recipes.filter(\n          (recipe) =>\n            recipe.nomRecette\n              .toLowerCase()\n              .indexOf(filterString.toLowerCase()) !== -1\n        )\n      )\n    );\n\n    this.favorisService.getFavoris().subscribe((data) => {\n      this.allRecipe = data;\n      this.allRecipe2 = data;\n    });\n\n    this.categoriesService\n      .getAllCategory()\n      .subscribe((categorie: CategoryDetails[]) => {\n        categorie.forEach((data) => {\n          this.favorisService\n            .getFavorisByCategory(data.idCategorie)\n            .subscribe((recipes) => {\n              this.recipeCategory = recipes;\n              this.recipeByCategory[data.idCategorie] = this.recipeCategory;\n            });\n        });\n        this.categories = categorie;\n      });\n\n    this.initResearchForm();\n  }\n\n  ngOnInit(): void {}\n\n  ngOnChanges() {\n    this.allRecipe = this.allRecipe2;\n    this.initResearchForm();\n  }\n\n  initResearchForm() {\n    this.researchForm = this.formBuilder.group({\n      filter: [\"\"],\n    });\n  }\n\n  research() {\n    const formValue = this.researchForm.value;\n\n    if (this.actualCategory != null) {\n      if (formValue.filter !== \"\") {\n        const researchResult: RecipeDetails[] = [];\n        this.recipeByCategory[this.actualCategory].forEach((recipe) => {\n          if (\n            recipe.nomRecette\n              .toLowerCase()\n              .indexOf(formValue.filter.toLowerCase()) !== -1\n          ) {\n            if (!researchResult.includes(recipe)) {\n              researchResult.push(recipe);\n            }\n          }\n          recipe.ingredients.forEach((ingredient) => {\n            if (\n              ingredient.nomIngredient\n                .toLowerCase()\n                .indexOf(formValue.filter.toLowerCase()) !== -1\n            ) {\n              if (!researchResult.includes(recipe)) {\n                researchResult.push(recipe);\n              }\n            }\n          });\n        });\n        this.allRecipe = researchResult;\n      } else {\n        this.allRecipe = this.allRecipe2;\n      }\n    } else {\n      if (formValue.filter !== \"\") {\n        const researchResult: RecipeDetails[] = [];\n\n        this.allRecipe2.forEach((recipe) => {\n          if (\n            recipe.nomRecette\n              .toLowerCase()\n              .indexOf(formValue.filter.toLowerCase()) !== -1\n          ) {\n            if (!researchResult.includes(recipe)) {\n              researchResult.push(recipe);\n            }\n          }\n          recipe.ingredients.forEach((ingredient) => {\n            if (\n              ingredient.nomIngredient\n                .toLowerCase()\n                .indexOf(formValue.filter.toLowerCase()) !== -1\n            ) {\n              if (!researchResult.includes(recipe)) {\n                researchResult.push(recipe);\n              }\n            }\n          });\n        });\n        this.allRecipe = researchResult;\n      } else {\n        this.allRecipe = this.allRecipe2;\n      }\n    }\n  }\n\n  getFavoris() {\n    this.favorisService.getFavoris().subscribe((data) => {\n      this.allRecipe = data;\n      this.allRecipe2 = data;\n    });\n  }\n\n  getFavorisByCategory(idCategorie: any) {\n    this.actualCategory = idCategorie;\n\n    this.recettes$ = this.recetteService.getRecipeByCategory(idCategorie);\n\n    this.favorisService.getFavorisByCategory(idCategorie).subscribe((data) => {\n      this.allRecipe = data;\n    });\n\n    this.filter = new FormControl(\"\");\n    this.filter$ = this.filter.valueChanges.pipe(startWith(\"\"));\n    // tslint:disable-next-line: deprecation\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$).pipe(\n      map(([recipes, filterString]) =>\n        recipes.filter(\n          (recipe) =>\n            recipe.nomRecette\n              .toLowerCase()\n              .indexOf(filterString.toLowerCase()) !== -1\n        )\n      )\n    );\n  }\n\n  // voir si on peut la récupérer au lieu de la recopier!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.notificationVue(recette.idRecette);\n        this.router.navigate([\"/recipe\", recette.idRecette]).then(() => {\n          window.location.reload();\n        });\n      },\n      (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Cette recette n'existe pas !\");\n          }\n        }\n      }\n    );\n  }\n\n  deleteFavoris(idRecette: any) {\n    this.favorisService.deleteFavoris(idRecette).subscribe(\n      (res) => {\n        this.router.navigate([\"/favorites\"], {\n          queryParams: { refresh: new Date().getTime() },\n        });\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n    this.favorisService.getFavoris().subscribe((data) => {\n      this.allRecipe = data;\n    }); /* rafraichit la page */\n  }\n   //notification vue\n   notificationVue(idRecette) {\n    let notif: Notification = {\n      pseudo: null,\n      idRecette: idRecette,\n      type: \"vue\",\n    };\n    this.notifService.addNotification(notif).subscribe();\n  }\n}\n","<link\n  href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\n  rel=\"stylesheet\"\n  integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\"\n  crossorigin=\"anonymous\"\n/>\n<!--lien pour avoir le petit logo de poubelle-->\n\n<div id=\"titre\" class=\"mt-5\">\n  <h1>Mes recettes ♥</h1>\n</div>\n\n<ul id=\"menu\" class=\"nav justify-content-center\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" routerLink=\"/favorites\" (click)=\"getFavoris()\"\n      >Tous mes favoris</a\n    >\n  </li>\n  <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n    <a\n      class=\"nav-link\"\n      routerLink=\"/favorites\"\n      (click)=\"getFavorisByCategory(categ.idCategorie)\"\n      >{{ categ.libelleCategorie }}</a\n    >\n  </li>\n</ul>\n\n<br />\n\n<ul class=\"nav justify-content-center\">\n  <li>\n    <form\n      class=\"form-inline\"\n      [formGroup]=\"researchForm\"\n      (ngSubmit)=\"research()\"\n    >\n      <div class=\"col text-center\">\n        <input\n          class=\"form-control\"\n          type=\"search\"\n          placeholder=\"Recette, ingrédient..\"\n          aria-label=\"Search\"\n          formControlName=\"filter\"\n          (click)=\"ngOnChanges()\"\n        />\n      </div>\n\n      <div class=\"col text-center\">\n        <button id=\"validateButton\" type=\"submit\" class=\"btn btn-primary\">\n          Rechercher\n        </button>\n      </div>\n    </form>\n  </li>\n</ul>\n\n<br />\n\n<div class=\"row\">\n  <div\n    class=\"col-lg-4 col-md-6 col-sm-12 p-3\"\n    *ngFor=\"\n      let recette of allRecipe\n        | paginate\n          : { id: 'listing_pagination', itemsPerPage: 12, currentPage: page }\n    \"\n  >\n    <article class=\"card wrap\">\n      <div\n        id=\"photo\"\n        [ngStyle]=\"{\n          'background-image': 'url(&quot;' + recette.lienImage + '&quot;)'\n        }\"\n        (click)=\"updateNbView(recette)\"\n        [routerLink]=\"['/recipe', recette.idRecette]\"\n      ></div>\n      <div>\n        <a> </a>\n        <div id=\"titleRecipe\">\n          <h3 class=\"food\">\n            {{ recette.nomRecette }}\n            <a id=\"vege\" *ngIf=\"recette.vege\"\n              ><img\n                src=\"../../../assets/img/logoVegetarien.png\"\n                width=\"20em\"\n                height=\"20em\"\n            /></a>\n          </h3>\n        </div>\n        <div id=\"logoRecette\">\n          <div class=\"logo\">\n            <i class=\"fa fa-clock-o\"></i\n            ><a class=\"picto-item\" aria-label=\"Temps de préparation\"\n              ><i id=\"textlogo\">{{ recette.globalTime }}</i></a\n            >\n          </div>\n          <div class=\"logo\">\n            <i class=\"fa fa-users\"></i\n            ><a class=\"picto-item\" aria-label=\"Nombre de parts\"\n              ><i id=\"textlogo\"\n                >{{ recette.nbrePart }} {{ recette.libellePart }}</i\n              ></a\n            >\n          </div>\n          <div class=\"logo\">\n            <a class=\"picto-item\" aria-label=\"Nombre de vues\"\n              ><i id=\"textlogo\">{{ recette?.nbVues }}</i\n              ><i id=\"vue\"> 👁</i></a\n            >\n          </div>\n          <div id=\"coeur\" class=\"logo\">\n            <a\n              *ngIf=\"this.auth.isLoggedIn()\"\n              id=\"btn\"\n              (click)=\"deleteFavoris(recette.idRecette)\"\n              class=\"picto-item\"\n              aria-label=\"Supprimer des favoris\"\n              ><i id=\"textlogo\">{{ recette?.nbFavoris }} </i\n              ><i class=\"class= fa fa-heart\"></i\n            ></a>\n          </div>\n        </div>\n      </div>\n    </article>\n  </div>\n</div>\n<div id=\"paginationRecette\">\n  <pagination-controls\n    id=\"listing_pagination\"\n    (pageChange)=\"page = $event\"\n    previousLabel=\"Précédent\"\n    nextLabel=\"Suivant\"\n  ></pagination-controls>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport {\n  RecipeDetails,\n  CategoryDetails,\n  IngredientDetails,\n  QuantiteDetails,\n  UniteDetails,\n  ImageRecipe\n} from '../../models';\nimport { RecettesService, IngredientsService, CategoriesService, ImagesService, UnitesService } from '../../service';\nimport { HttpResponse, HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n// la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxImageCompressService } from 'ngx-image-compress';\n\n@Component({\n  selector: 'app-modifier-recette',\n  templateUrl: './modifier-recette.component.html',\n  styleUrls: ['./modifier-recette.component.scss']\n})\nexport class ModifierRecetteComponent implements OnInit {\n\n  constructor(private recetteService: RecettesService, private router: Router, private route: ActivatedRoute,\n              private ingredientsService: IngredientsService, private modalService: NgbModal,\n              private http: HttpClient, private categoriesService: CategoriesService,\n              private unitesService: UnitesService, private imagesService: ImagesService, private imageCompress: NgxImageCompressService) {\n    this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      recette => {\n        this.recette = recette;\n      }\n    );\n\n    this.ingredientsService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      ingredient => {\n        this.ingredients = ingredient;\n      }\n    );\n\n    this.imagesService.getImage(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      res => {\n        if (res.length !== 0) {\n          this.recette.idImage = res[0].idImage;\n          this.image = res[0];\n        }\n      }\n    );\n\n    this.ingredientsService.getRestIngredients(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      ingredients => {\n        this.allIngredients = ingredients;\n      }\n    );\n\n    this.unitesService.getAllUnite().subscribe(\n      unites => {\n        this.allUnites = unites;\n      }\n    );\n\n    this.categoriesService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      categories => {\n        this.allCategories = categories;\n      }\n    );\n\n\n    this.getCategory(parseInt(this.route.snapshot.paramMap.get('id'), 10));\n  }\n\n  public newIngredient: IngredientDetails = {\n    qte: null,\n    idRecette: parseInt(this.route.snapshot.paramMap.get('id'), 10),\n    idIngredient: null,\n    idUnite: null\n  };\n\n  public recette: RecipeDetails = {\n    idRecette: null,\n    nomRecette: 'string',\n    datePublication: null,\n    nbFavoris: null,\n    nbVues: null,\n    idImage: null,\n    lienImage: null,\n    etapes: null,\n    nbrePart: null,\n    libellePart: '',\n    tempsPreparation: null,\n    tempsCuisson: null,\n    astuce: ''\n  };\n  public ingredients: IngredientDetails[];\n  public unite: UniteDetails;\n  public qtes: QuantiteDetails[];\n  public categories: CategoryDetails[];\n\n  public image;\n  public image2;\n  public allIngredients: IngredientDetails[]; // ingredients disponibles\n  public allUnites: UniteDetails[];\n  public allCategories: CategoryDetails[]; // catégories disponibles\n\n  public imageToModify: ImageRecipe = {\n    idImage: null,\n    idRecette: null\n  };\n\n  // pour compresser image\n  file: any;\n  localUrl: any;\n  localCompressedURl: any;\n  sizeOfOriginalImage: number;\n  sizeOFCompressedImage: number;\n  imgResultBeforeCompress: string;\n  imgResultAfterCompress: string;\n\n  ngOnInit(): void {\n  }\n\n\n  selectFile(event: any) {\n    let fileName: any;\n    this.file = event.target.files[0];\n    fileName = this.file.name;\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        this.localUrl = event.target.result;\n        this.compressFile(this.localUrl, fileName);\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  compressFile(image, fileName) {\n    const orientation = -1;\n    this.sizeOfOriginalImage = this.imageCompress.byteCount(image) / (1024 * 1024);\n    console.warn('Size in bytes is now:', this.sizeOfOriginalImage);\n    this.imageCompress.compressFile(image, orientation, 50, 50).then(\n      result => {\n        this.imgResultAfterCompress = result;\n        this.localCompressedURl = result;\n        this.sizeOFCompressedImage = this.imageCompress.byteCount(result) / (1024 * 1024);\n        console.warn('Size in bytes after compression:', this.sizeOFCompressedImage);\n        // create file from byte\n        const imageName = fileName;\n        // call method that creates a blob from dataUri\n        const imageBlob = this.dataURItoBlob(this.imgResultAfterCompress.split(',')[1]);\n        // imageFile created below is the new compressed file which can be send to API in form data\n        const imageFile = new File([imageBlob], imageName, { type: 'image/jpeg' });\n\n        this.image2 = imageFile;\n      });\n  }\n\n  dataURItoBlob(dataURI) {\n    const byteString = window.atob(dataURI);\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const int8Array = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < byteString.length; i++) {\n      int8Array[i] = byteString.charCodeAt(i);\n    }\n    const blob = new Blob([int8Array], { type: 'image/jpeg' });\n    return blob;\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      console.log(file);\n      this.image2 = file;\n    }\n  }\n\n  onSubmit() {\n    const formData = new FormData();\n    console.log(this.image2);\n    formData.append('file', this.image2);\n    if (this.image) {\n      this.imagesService.addImage(formData).subscribe(res => {\n        this.image = res[0];\n        this.imageToModify.idImage = res[0];\n        this.imageToModify.idRecette = this.recette.idRecette;\n        this.http.post<any>(`/server/image/update`, this.imageToModify).subscribe(\n          (res) => {\n            this.image = res[0];\n            window.location.reload();\n          }\n        );\n      });\n    } else {\n      this.imagesService.addImage(formData).subscribe(res => {\n        this.image = res[0];\n        this.imageToModify.idImage = res[0];\n        this.imageToModify.idRecette = this.recette.idRecette;\n        this.imagesService.addImageToRecipe(this.imageToModify);\n        window.location.reload();\n      });\n    }\n  }\n\n  getCategory(id: any): any {\n    this.categoriesService.getCategoryByRecette(id).subscribe(\n      (categories: CategoryDetails[]) => {\n        this.categories = categories;\n      }, err => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log('cette recette n\\'a pas de catégorie!');\n          }\n        }\n      }\n    );\n    return this.categories;\n  }\n\n  updateRecipeName(recette: RecipeDetails) {\n    this.recetteService.updateRecipeName(recette).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n  updateSteps(recette: RecipeDetails) {\n    this.recetteService.updateSteps(recette).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n  updateAstuce(recette: RecipeDetails) {\n    this.recetteService.updateAstuce(recette).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n  updateDescription(recette: RecipeDetails) {\n    this.recetteService.updateDescription(recette).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n  updatePart(recette: RecipeDetails) {\n    this.recetteService.updatePart(recette).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n  updateTemps(recette: RecipeDetails) {\n    this.recetteService.updateTemps(recette).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n  updateRecipeIng(recette: RecipeDetails, ingredient: IngredientDetails) {\n    this.recetteService.updateRecipeIng(recette, ingredient).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n  deleteIngredientRececipe(ingredient: IngredientDetails, recette: RecipeDetails) {\n    this.recetteService.deleteIngredientRecipe(ingredient, recette)\n      .subscribe(res => {\n        this.router.navigate(['updateRecipe/:id']).then(() => {\n          window.location.reload();\n        });\n      }, (err) => {\n        console.log(err);\n      }\n      );\n\n  }\n\n  deleteRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails) {\n\n    this.recetteService.deleteRecipeCategory(categorie, recette)\n      .subscribe(res => {\n        setTimeout(() => {\n          this.categoriesService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n            categories => {\n              this.allCategories = categories;\n            }\n          );\n          this.categoriesService.getCategoryByRecette(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n            categories => {\n              this.categories = categories;\n            }\n          );\n        }, 1000);\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  }\n\n  addRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails) {\n    this.recetteService.addRecipeCategory(categorie, recette)\n      .subscribe(res => {\n        setTimeout(() => {\n          this.categoriesService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n            categories => {\n              this.allCategories = categories;\n            }\n          );\n          this.categoriesService.getCategoryByRecette(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n            categories => {\n              this.categories = categories;\n            }\n          );\n        }, 1000);\n\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  }\n\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        console.log(result);\n        this.allIngredients.forEach(element => {\n          if (result.nomIngredient === element.nomIngredient) {\n            this.newIngredient.idIngredient = element.idIngredient;\n          }\n        });\n        this.newIngredient.qte = result.qte;\n        this.newIngredient.idUnite = result.idUnite;\n        this.recetteService.addIngredientRecette(this.newIngredient);\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      });\n  }\n\n}\n\n","<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>\n\n<script></script>\n\n<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"text-center\">\n            <h1>Modifier la recette</h1>\n        </div>\n\n        <hr />\n\n        <label>\n      <h4><strong>Nom de la recette</strong></h4>\n    </label>\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <td id=\"nomRecette\">\n                    <form (submit)=\"updateRecipeName(recette)\">\n                        <input type=\"text\" class=\"form-control\" name=\"nomRecette\" value=\"(recette?.nomRecette)\" #nomRecette=\"ngModel\" [(ngModel)]=\"recette.nomRecette\" />\n                        <br />\n                        <button class=\"btn btn-primary\" type=\"submit\">Modifier</button>\n                    </form>\n                </td>\n            </tr>\n        </table>\n\n        <hr />\n\n        <label>\n      <h4><strong>Image de la recette</strong></h4>\n    </label>\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <td>\n                    <div *ngIf=\"!image\">\n                        <input type=\"file\" name=\"image\" (change)=\"selectFile($event)\" />\n                        <br />\n                        <br />\n                        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">\n              Modifier\n            </button>\n                    </div>\n\n                    <div *ngIf=\"image\">\n                        <img src=\"{{ image.lienImage }}\" class=\"rounded mx-auto d-block\" alt=\"Responsive image\" id=\"resp\" />\n                        <br />\n                        <button class=\"btn btn-primary\" type=\"submit\" data-toggle=\"modal\" data-target=\"#exampleModal\" data-backdrop=\"false\">\n              Modifier l'image de la recette\n            </button>\n                        <!-- Modal -->\n                        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n                                            Modification de l'image de la recette\n                                        </h5>\n                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        <figcaption class=\"figure-caption\">\n                                            <!--bouton modifier photo à faire-->\n                                            <div style=\"text-align: center;\">\n                                                <form>\n                                                    <div>\n                                                        <input type=\"file\" name=\"image\" (change)=\"selectFile($event)\" />\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </figcaption>\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">\n                      Close\n                    </button>\n                                        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">\n                      Modifier\n                    </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div id=\"modal-backdrop\" class=\"modal-backdrop-transparent modal-transition\"></div>\n                    </div>\n                </td>\n            </tr>\n        </table>\n\n        <hr />\n\n        <label>\n      <h4><strong>Catégories</strong></h4>\n    </label>\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <td>\n                    <!--catégories de la recette-->\n                    <div style=\"text-align: initial;\" *ngFor=\"let categ of categories\">\n                        <button id=\"poubelle\" class=\"btn btn-sm btn-danger\" (click)=\"deleteRecipeCategory(categ, recette)\">\n              <i class=\"fa fa-trash\"></i>\n            </button> {{ categ.libelleCategorie }}\n                    </div>\n                </td>\n                <td>\n                    <!--catégorie dont la recette ne fait pas partie-->\n                    <div style=\"text-align: initial;\" *ngFor=\"let cat of allCategories\">\n                        <button id=\"add\" class=\"btn btn-sm btn-success\" (click)=\"addRecipeCategory(cat, recette)\">\n              <i class=\"fa fa-plus-circle\"></i>\n            </button> {{ cat.libelleCategorie }}\n                    </div>\n                </td>\n            </tr>\n        </table>\n\n        <hr />\n\n        <label>\n      <h4><strong>Parts</strong></h4>\n    </label>\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <ul>\n                    <form (submit)=\"updatePart(recette)\">\n                        <td>\n                            <label>Nombre</label>\n                            <br />\n                            <input type=\"number\" class=\"form-control\" [(ngModel)]=\"recette.nbrePart\" [ngModelOptions]=\"{ standalone: true }\" value=\"{{ recette.nbrePart }}\" required />\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n\n                        <td>\n                            <label>Libellé</label>\n                            <br />\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"recette.libellePart\" [ngModelOptions]=\"{ standalone: true }\" value=\"{{ recette.libellePart }}\" required />\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n\n                        <td>\n                            <div style=\"margin-top: 2em;\">\n                                <button class=\"btn btn-primary\" type=\"submit\">Modifier</button>\n                            </div>\n                        </td>\n                    </form>\n                </ul>\n            </tr>\n        </table>\n\n        <hr />\n\n        <label>\n      <h4><strong>Temps</strong></h4>\n    </label>\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <ul>\n                    <form (submit)=\"updateTemps(recette)\">\n                        <td>\n                            <label>Préparation</label>\n                            <br />\n                            <input type=\"time\" class=\"form-control\" [(ngModel)]=\"recette.tempsPreparation\" [ngModelOptions]=\"{ standalone: true }\" value=\"{{ recette.tempsPreparation }}\" step=\"2\" required />\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n\n                        <td>\n                            <label>Cuisson</label>\n                            <br />\n                            <input type=\"time\" class=\"form-control\" [(ngModel)]=\"recette.tempsCuisson\" [ngModelOptions]=\"{ standalone: true }\" value=\"{{ recette.tempsCuisson }}\" step=\"2\" required />\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n\n                        <td>\n                            <div style=\"margin-top: 2em;\">\n                                <button class=\"btn btn-primary\" type=\"submit\">Modifier</button>\n                            </div>\n                        </td>\n                    </form>\n                </ul>\n            </tr>\n        </table>\n\n        <hr />\n\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <label>\n          <h4><strong>Ingrédients</strong></h4>\n        </label>\n\n                <ul>\n                    <div *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n                        <form (submit)=\"updateRecipeIng(recette, ingredient)\">\n                            <td id=\"nomIng\">\n                                <p>{{ ingredient.nomIngredient }}</p>\n                            </td>\n\n                            <td id=\"qteIng\">\n                                <input type=\"text\" class=\"form-control\" name=\"qte\" value=\"{{ ingredient.qte }}\" #qte=\"ngModel\" [(ngModel)]=\"ingredient.qte\" />\n                            </td>\n                            <td>\n                                <select class=\"custom-select\" #idUnite=\"ngModel\" [(ngModel)]=\"ingredient.idUnite\" [ngModelOptions]=\"{ standalone: true }\" required>\n                  <option\n                    *ngFor=\"let unite of allUnites\"\n                    [attr.selected]=\"\n                      ingredient.libelleUnite == unite.libelleUnite\n                        ? true\n                        : null\n                    \"\n                    [attr.value]=\"unite.idUnite\"\n                  >\n                    {{ unite.libelleUnite }}\n                  </option>\n                </select>\n                            </td>\n                            <td>\n                                <button id=\"crayon\" class=\"btn btn-sm btn-warning\">\n                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                </button>\n                            </td>\n                            <td>\n                                <button id=\"poubelle\" class=\"btn btn-sm btn-danger\" (click)=\"deleteIngredientRececipe(ingredient, recette)\">\n                  <i class=\"fa fa-trash\"></i>\n                </button>\n                            </td>\n                        </form>\n                    </div>\n                    <ng-template #content let-modal>\n                        <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                        <div class=\"modal-header\">\n                            <h4 class=\"modal-title\"></h4>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form>\n                                <div class=\"form-row\">\n                                    <div class=\"col-md-6 mb-3\">\n                                        <label for=\"validationTooltip04\">Ingrédient</label>\n                                        <input id=\"validationTooltip04\" list=\"brow\" #nomIngredient=\"ngModel\" [(ngModel)]=\"newIngredient.nomIngredient\" [ngModelOptions]=\"{ standalone: true }\" required />\n                                        <datalist id=\"brow\">\n                      <option\n                        *ngFor=\"let ingredient of allIngredients\"\n                        [ngValue]=\"ingredient.nomIngredient\"\n                        [disabled]=\"ingredient.disabled\"\n                      >\n                        {{ ingredient.nomIngredient }}</option\n                      >\n                    </datalist>\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez un ingrédient.\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-3 mb-3\">\n                                        <label for=\"validationTooltip05\">Quantité</label>\n                                        <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\" #qte=\"ngModel\" [(ngModel)]=\"newIngredient.qte\" [ngModelOptions]=\"{ standalone: true }\" required />\n                                        <div class=\"invalid-tooltip\">\n                                            Rentrez une quantité correcte.\n                                            <!--Vérifier que c'est pas négatif ou nulle-->\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-3 mb-3\">\n                                        <label for=\"validationTooltip04\">Unité</label>\n                                        <select class=\"custom-select\" id=\"validationTooltip04\" #idUnite=\"ngModel\" [(ngModel)]=\"newIngredient.idUnite\" [ngModelOptions]=\"{ standalone: true }\" required>\n                      <option\n                        *ngFor=\"let unite of allUnites\"\n                        [ngValue]=\"unite.idUnite\"\n                      >\n                        {{ unite.libelleUnite }}\n                      </option>\n                    </select>\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez une unité.\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button tyoe=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close(newIngredient)\">\n                Ajouter\n              </button>\n                        </div>\n                    </ng-template>\n\n                    <!--on appelle le modal-->\n                </ul>\n            </tr>\n\n            <tr>\n                <td>\n                    <button class=\"btn btn-primary\" (click)=\"open(content)\">\n            Ajouter un nouvel ingrédient\n          </button>\n                </td>\n            </tr>\n        </table>\n\n        <hr />\n\n        <label>\n      <h4><strong>Recette</strong></h4>\n    </label>\n\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <ul>\n                    <div class=\"row\">\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 p-3\">\n                            <label>Préparation</label>\n\n                            <td>\n                                <form (submit)=\"updateSteps(recette)\">\n                                    <textarea class=\"form-control\" #etapes=\"ngModel\" rows=\"15em\" name=\"etapes\" [(ngModel)]=\"recette.etapes\" [ngModelOptions]=\"{ standalone: true }\">{{ recette?.etapes }}</textarea\n                  >\n                  <br />\n                  <button id=\"btn\" class=\"btn btn-primary\" type=\"submit\">\n                    Modifier\n                  </button>\n                </form>\n              </td>\n            </div>\n\n            <div class=\"col-lg-6 col-md-6 col-sm-12 p-3\">\n              <label>Astuces</label>\n              <td>\n                <form (submit)=\"updateAstuce(recette)\">\n                  <textarea\n                    class=\"form-control\"\n                    #etapes=\"ngModel\"\n                    rows=\"15em\"\n                    name=\"astuce\"\n                    [(ngModel)]=\"recette.astuce\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    >{{ recette?.astuce }}</textarea\n                  >\n                  <br />\n                  <button id=\"btn\" class=\"btn btn-primary\" type=\"submit\">\n                    Modifier\n                  </button>\n                </form>\n              </td>\n            </div>\n          </div>\n        </ul>\n      </tr>\n    </table>\n    <hr>\n    <table class=\"table col-md-8 mx-auto\">\n      <div class=\"col-lg-12 p-3\">\n            <label>Description</label>\n            <form (submit)=\"updateDescription(recette)\">\n                <textarea\n                  class=\"form-control\"\n                  #mot=\"ngModel\"\n                  rows=\"6em\"\n                  name=\"mot\"\n                  [(ngModel)]=\"recette.mot\"\n                  [ngModelOptions]=\"{ standalone: true }\"\n                  >{{ recette?.mot }}</textarea\n                >\n                <br />\n                <button id=\"btn\" class=\"btn btn-primary\" type=\"submit\">\n                  Modifier\n                </button>\n              </form>\n          </div>\n    </table>\n  </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService } from '../../service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { __param } from 'tslib';\nimport { UserProfile } from 'src/app/models/user.model';\nimport { Notification } from 'src/app/models';\nimport { NotificationService } from 'src/app/service/notifications/notification.service';\n\n@Component({\n  selector: 'app-mon-profile',\n  templateUrl: './mon-profile.component.html',\n  styleUrls: ['./mon-profile.component.css']\n})\nexport class MonProfileComponent implements OnInit {\n\n  credentials: UserProfile = {\n    pseudo: '',\n    email: '',\n    abonneNews: true,\n    success: ''\n  };\n\n  constructor(private auth: AuthentificationService, private router: Router, private route: ActivatedRoute,private notifService: NotificationService) { }\n\n  ngOnInit() {\n    this.auth.profile().subscribe(\n      user => {\n        this.credentials = user;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n    if (this.route.queryParams) {\n      this.route.queryParams\n        .subscribe(params => {\n          this.credentials.success = params.success;\n        });\n    }\n  }\n\n  updateProfile() {\n    this.auth.updateProfile(this.credentials).subscribe((res: any) => {\n      this.credentials.success = res.success;\n      this.router.navigateByUrl('/profile').then(() => {\n        if(this.credentials.abonneNews){\n          this.notificationAbonne(this.credentials.pseudo)\n        }\n        // tslint:disable-next-line: deprecation\n        setTimeout(window.location.reload.bind(window.location), 2500);\n      });\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n//notification abonné\nnotificationAbonne(pseudo){\n  let notif: Notification = {\n    pseudo: pseudo,\n    idRecette: null,\n    type: 'abonne',\n  }\n  this.notifService.addNotification(notif).subscribe();\n}\n\n\n  deleteProfile(pseudo: any) {\n    this.auth.logout();\n    this.auth.deleteProfile(pseudo)\n      .subscribe(res => {\n        this.router.navigate(['/']);\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  }\n\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n       \n            <div class=\"col-sm-10 mx-auto\" ng-controller=\"formCtrl\" ng-app=\"myApp\">\n                <form (submit)=\"updateProfile()\">\n                <h1 class=\"text-center\">Mon profil</h1>\n\n                <div *ngIf=\"credentials.success\" class=\"alert alert-success\" role=\"alert\">\n                    <label>{{credentials.success}}</label>\n                </div>\n\n                <table class=\"table col-md-8 mx-auto\">\n                    <tr>\n                        <td>Pseudo</td>\n                        <td>{{credentials?.pseudo}}</td>\n                    </tr>\n        \n                \n                    \n                    <tr>  \n                        <td><label>Email </label>\n                            <div *ngIf=\"email.errors && (email.invalid || email.touched)\">\n                            <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Entrez une adresse mail valide !</small>\n                        </div>\n                        </td>\n                        <td><input type=\"email\" #email=\"ngModel\" class=\"form-control\" name=\"email\" value= {{credentials?.email}}\n                            [class.is-invalid]=\"email.invalid && email.touched\" required\n                            pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" \n                            [(ngModel)]=\"credentials.email\"></td>\n                        \n                    </tr>\n                \n                    <tr>\n                        <td>Mot de passe</td>\n                        <td><button class=\"btn btn-outline-dark\" routerLink='/update-password'>Modifier</button></td> \n                    </tr>\n                    <tr>\n                        <td><label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label></td> \n                        <div *ngIf=\"credentials?.abonneNews\">\n                            <td>\n                                <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                    checked [(ngModel)]=\"credentials.abonneNews\"> Oui\n                                <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                    [(ngModel)]=\"credentials.abonneNews\"> Non\n                            </td>\n                        </div>\n                        <div *ngIf=\"!credentials?.abonneNews\">\n                            <td>\n                                <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                    [(ngModel)]=\"credentials.abonneNews\"> Oui\n                                <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                    checked [(ngModel)]=\"credentials.abonneNews\"> Non\n                            </td>\n                        </div>\n                        \n                        \n                    </tr>\n                </table>\n                <div class=\"text-center\">\n                <button class=\"btn btn-light\" *ngIf=\"!email.errors\" type=\"submit\">Enregistrer les modifications</button>\n                <button class=\"btn btn-light\"  *ngIf=\"email.errors\" type=\"submit\" disabled>Enregistrer les modifications</button>\n            </div>\n            <br>\n            <div class=\"text-center\">\n                <button class=\"btn btn-outline-danger \" (click)=\"deleteProfile(credentials?.pseudo)\" \n                    type=\"submit\">Supprimer mon compte</button>\n                </div>\n                </form>\n            \n        </div>\n    </div>\n</section>","import { Component, OnInit } from \"@angular/core\";\nimport {\n  RecettesService,\n  AuthentificationService,\n  ImagesService,\n  CommentairesService,\n  IngredientsService,\n  FavorisService,\n  UnitesService,\n  ShoppingListService,\n} from \"../../service\";\nimport {\n  RecipeDetails,\n  IngredientDetails,\n  UniteDetails,\n  QuantiteDetails,\n  FavorisDetails,\n  ListeCoursesDetails,\n  CommentaireDetails,\n} from \"../../models\";\nimport { HttpResponse, HttpErrorResponse } from \"@angular/common/http\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { addHours, roundDecimal } from \"../../utils/Utils\";\nimport { ListRecipe } from \"src/app/models/listRecipe.model\";\nimport { Notification } from \"src/app/models\";\nimport { NotificationService } from \"src/app/service/notifications/notification.service\";\n\n@Component({\n  selector: \"app-recette\",\n  templateUrl: \"./recette.component.html\",\n  styleUrls: [\"./recette.component.scss\"],\n})\nexport class RecetteComponent implements OnInit {\n  public title;\n  public images;\n\n  public image;\n  public recette: RecipeDetails;\n  public ingredients: Observable<IngredientDetails[]>;\n  public unite: UniteDetails;\n  public qtes: QuantiteDetails[];\n  public newFavori: FavorisDetails = {\n    pseudo: \"\",\n    idRecette: parseInt(this.route.snapshot.paramMap.get(\"id\"), 10),\n  };\n\n  public newListeCourses: ListeCoursesDetails = {\n    pseudo: \"\",\n    listIngredients: null,\n  };\n\n  public commentaires: CommentaireDetails[];\n  public newCommentaire: CommentaireDetails = {\n    message: \"\",\n    dateCommentaire: null,\n    ecritPar: \"\",\n    concerne: parseInt(this.route.snapshot.paramMap.get(\"id\"), 10),\n  };\n\n  public newResponse: CommentaireDetails = {\n    message: \"\",\n    dateCommentaire: null,\n    ecritPar: \"\",\n    concerne: parseInt(this.route.snapshot.paramMap.get(\"id\"), 10),\n    parent: null,\n  };\n\n  public nbrePartInitial: number;\n  public ingredientQteInitial: IngredientDetails[];\n  public recipeList: ListRecipe = {\n    idRecette: parseInt(this.route.snapshot.paramMap.get(\"id\"), 10),\n    nomRecette: \"\",\n    pseudoUser: \"\",\n    idRecipeList: null,\n    complet: false,\n  };\n\n  public element: any;\n\n  public isFavori = false;\n  public isInMenu = false;\n\n  public latestRecipes: RecipeDetails[];\n\n  public allRecipeList: ListRecipe[];\n\n  public notif: Notification = {\n    pseudo: \"\",\n    idRecette: parseInt(this.route.snapshot.paramMap.get(\"id\"), 10),\n    type: \"commentaire\",\n  };\n\n  constructor(\n    public auth: AuthentificationService,\n    private recetteService: RecettesService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private imagesService: ImagesService,\n    private commentairesService: CommentairesService,\n    private ingredientsService: IngredientsService,\n    private favorisService: FavorisService,\n    private unitesService: UnitesService,\n    private shoppingListService: ShoppingListService,\n    private notifService: NotificationService\n  ) {\n    this.recetteService\n      .getRecipeById(parseInt(this.route.snapshot.paramMap.get(\"id\"), 10))\n      .subscribe((recette) => {\n        this.recette = recette;\n        this.recette.tempsCuisson = addHours(this.recette.tempsCuisson);\n        this.recette.tempsPreparation = addHours(this.recette.tempsPreparation);\n        this.nbrePartInitial = this.recette.nbrePart;\n        this.recipeList.nomRecette = recette.nomRecette;\n        console.log(recette.categories);\n      });\n\n    this.recetteService.getLatestReceipes().subscribe((data) => {\n      this.latestRecipes = data;\n    });\n\n    this.imagesService\n      .getImage(parseInt(this.route.snapshot.paramMap.get(\"id\"), 10))\n      .subscribe((res) => {\n        console.log(res);\n        this.image = res;\n      });\n\n    this.ingredientsService\n      .getIngredientsByIdRecette(\n        parseInt(this.route.snapshot.paramMap.get(\"id\"), 10)\n      )\n      .subscribe((ingredient) => {\n        ingredient.forEach((element) => {\n          element.qte = roundDecimal(element.qte);\n        });\n\n        this.ingredients = ingredient;\n        this.recette.ingredients = ingredient;\n        this.ingredientQteInitial = ingredient;\n      });\n\n    this.commentairesService\n      .getCommentaireRecipe(\n        parseInt(this.route.snapshot.paramMap.get(\"id\"), 10)\n      )\n      .subscribe((commentaires) => {\n        if (commentaires[0]) {\n          this.commentaires = commentaires;\n        }\n      });\n\n    if (this.auth.isLoggedIn()) {\n      this.favorisService.getFavoris().subscribe((data) => {\n        data.forEach((element) => {\n          if (\n            element.idRecette ===\n            parseInt(this.route.snapshot.paramMap.get(\"id\"), 10)\n          ) {\n            this.isFavori = true;\n          }\n        });\n        this.recetteService.getListRecipes().subscribe((data) => {\n          data.forEach((element) => {\n            console.log(element);\n            if (element.idRecette === this.recipeList.idRecette) {\n              this.isInMenu = true;\n              this.recipeList = element;\n            }\n          });\n          this.allRecipeList = data;\n        });\n      });\n      this.newFavori.pseudo = this.auth.getUserDetails().pseudo;\n      this.newListeCourses.pseudo = this.auth.getUserDetails().pseudo;\n      this.newCommentaire.ecritPar = this.auth.getUserDetails().pseudo;\n      this.newResponse.ecritPar = this.auth.getUserDetails().pseudo;\n      this.recipeList.pseudoUser = this.auth.getUserDetails().pseudo;\n      this.notif.pseudo = this.auth.getUserDetails().pseudo;\n    }\n  }\n\n  onClick() {}\n\n  ngOnInit(): void {}\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate([\"/recipe\", recette.idRecette]).then(() => {\n          window.location.reload();\n        });\n      },\n      (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Cette recette n'existe pas !\");\n          }\n        }\n      }\n    );\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.images = file;\n    }\n  }\n\n  getUtiliserIngredientsByIdRecette(id: any): QuantiteDetails[] {\n    this.ingredientsService.getUtiliserIngredientsByIdRecette(id).subscribe(\n      (qtes: QuantiteDetails[]) => {\n        this.qtes = qtes;\n      },\n      (err) => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log(\"Il n'y a pas d'ingrédients !\");\n          }\n        }\n      }\n    );\n    return this.qtes;\n  }\n\n  getUniteByIdUnite(id: any): UniteDetails {\n    this.unitesService.getUniteById(id).subscribe(\n      (unite: UniteDetails) => {\n        this.unite = unite;\n      },\n      (err) => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log(\"Il n'y a pas d'ingrédients !\");\n          }\n        }\n      }\n    );\n    return this.unite;\n  }\n\n  addFavoris() {\n    this.favorisService.addFavoris(this.newFavori).subscribe();\n    this.isFavori = true;\n    this.notificationFavori(\n      this.auth.getUserDetails().pseudo,\n      this.newFavori.idRecette\n    );\n    window.location.reload();\n  }\n\n  addToMenu() {\n    this.recetteService.addRecipeToList(this.recipeList).subscribe();\n    window.location.reload();\n    alert(\"Vous avez bien ajouté cette recette à votre menu de la semaine !\");\n  }\n\n  deleteToMenu() {\n    this.recetteService.deleteRecipeOfList(this.recipeList).subscribe();\n    window.location.reload();\n    alert(\n      \"Vous avez bien supprimé cette recette de votre menu de la semaine !\"\n    );\n  }\n\n  deleteFavoris() {\n    this.favorisService.deleteFavoris(this.newFavori.idRecette).subscribe();\n    this.isFavori = false;\n    window.location.reload();\n  }\n\n  addListeCourses() {\n    this.newListeCourses.listIngredients = this.ingredients;\n    this.shoppingListService.addListeCourses(this.newListeCourses);\n\n    this.router.navigate([\"/shoppingList\"]).then(() => {\n      window.location.reload();\n    });\n  }\n  deleteCommentaire(idCommentaire: any) {\n    this.commentairesService.deleteCommentaire(idCommentaire).subscribe(\n      (res) => {\n        this.router\n          .navigate([\n            \"/recipe/\" + parseInt(this.route.snapshot.paramMap.get(\"id\"), 10),\n          ])\n          .then(() => {\n            window.location.reload();\n          });\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n  addCommentaire(message: any) {\n    if (this.images) {\n      const formData = new FormData();\n      formData.append(\"file\", this.images);\n      this.newCommentaire.message = message;\n      this.imagesService.addImage(formData).subscribe((res) => {\n        this.newCommentaire.idImage = res[0];\n        this.commentairesService\n          .addCommentaire(this.newCommentaire)\n          .subscribe((res2) => {\n            this.newCommentaire.idCommentaire = res2.idCommentaire;\n            this.commentairesService\n              .addImageToCommentaire(this.newCommentaire)\n              .subscribe();\n            window.location.reload();\n          });\n      });\n    } else {\n      this.newCommentaire.message = message;\n      this.commentairesService.addCommentaire(this.newCommentaire).subscribe();\n      this.notificationCommentaire(\n        this.auth.getUserDetails().pseudo,\n        this.recette.idRecette\n      );\n      window.location.reload();\n    }\n\n    // window.location.reload()\n  }\n\n  addReponse(event, idCommentaire) {\n    if (this.images) {\n      const formData = new FormData();\n      formData.append(\"file\", this.images);\n      this.newResponse.message = event.target.message.value;\n      this.newResponse.parent = idCommentaire;\n      this.imagesService.addImage(formData).subscribe((res) => {\n        this.newResponse.idImage = res[0];\n        this.commentairesService\n          .addCommentaire(this.newResponse)\n          .subscribe((res2) => {\n            this.newResponse.idCommentaire = res2.idCommentaire;\n            this.commentairesService\n              .addImageToCommentaire(this.newResponse)\n              .subscribe();\n            window.location.reload();\n          });\n      });\n    } else {\n      this.newResponse.message = event.target.message.value;\n      this.newResponse.parent = idCommentaire;\n      this.commentairesService.addCommentaire(this.newResponse).subscribe();\n      this.notificationCommentaire(\n        this.auth.getUserDetails().pseudo,\n        this.recette.idRecette\n      );\n      window.location.reload();\n    }\n    // window.location.reload()\n  }\n\n  onProportionChange(searchValue: string): void {\n    this.recette.ingredients.forEach((element) => {\n      element.updateQte =\n        (element.qte * parseInt(searchValue, 10)) / this.nbrePartInitial;\n    });\n    this.recette.nbrePart = parseInt(searchValue, 10);\n  }\n\n  onProportionLess(value: number): void {\n    this.recette.ingredients.forEach((element) => {\n      element.updateQte = roundDecimal(\n        (element.qte * value) / this.nbrePartInitial\n      );\n    });\n    this.recette.nbrePart = this.recette.nbrePart - 1;\n  }\n\n  onProportionMore(value: number): void {\n    this.recette.ingredients.forEach((element) => {\n      element.updateQte = roundDecimal(\n        (element.qte * value) / this.nbrePartInitial\n      );\n    });\n    this.recette.nbrePart = this.recette.nbrePart + 1;\n  }\n\n  //notification commentaire\n  notificationCommentaire(pseudo, idRecette) {\n    let notif: Notification = {\n      pseudo: pseudo,\n      idRecette: idRecette,\n      type: \"commentaire\",\n    };\n    this.notifService.addNotification(notif).subscribe();\n  }\n\n  //notification favori\n  notificationFavori(pseudo, idRecette) {\n    let notif: Notification = {\n      pseudo: pseudo,\n      idRecette: idRecette,\n      type: \"favori\",\n    };\n    this.notifService.addNotification(notif).subscribe();\n  }\n}\n","<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>\n\n<header class=\"site-header\">\n  <div id=\"titreRecette\" class=\"header-content\">\n    <div class=\"title-area\">\n      <h1>\n        {{ recette?.nomRecette }}\n        <a id=\"vege\" *ngIf=\"recette?.vege\"\n          ><img\n            src=\"../../../assets/img/logoVegetarien.png\"\n            width=\"50em\"\n            height=\"50em\"\n            style=\"vertical-align: text-top;\"\n        /></a>\n        <a\n          *ngIf=\"this.auth.isLoggedIn() && !isInMenu\"\n          style=\"font-size: inherit; margin-left: 1em;\"\n          id=\"btn\"\n          (click)=\"addToMenu()\"\n          class=\"picto-item\"\n          aria-label=\"Ajouter la recettes au menu de la semaine\"\n        >\n          <i\n            class=\"fa fa-bookmark-o\"\n            style=\"vertical-align: text-top;\"\n            aria-hidden=\"true\"\n          ></i\n        ></a>\n        <a\n          *ngIf=\"this.auth.isLoggedIn() && isInMenu\"\n          style=\"font-size: inherit; margin-left: 1em;\"\n          id=\"btn\"\n          (click)=\"deleteToMenu()\"\n          class=\"picto-item\"\n          aria-label=\"Supprimer la recettes au menu de la semaine\"\n        >\n          <i\n            class=\"fa fa-bookmark\"\n            style=\"vertical-align: text-top;\"\n            aria-hidden=\"true\"\n          ></i\n        ></a>\n      </h1>\n      <p id=\"timer\">\n        {{ recette?.nbVues }} 👁\n\n        <a\n          *ngIf=\"this.auth.isLoggedIn() && !isFavori\"\n          id=\"btn\"\n          (click)=\"addFavoris()\"\n          class=\"picto-item\"\n          aria-label=\"Ajouter aux favoris\"\n          ><i id=\"textlogo\"> {{ recette?.nbFavoris }} </i\n          ><i class=\"fa fa-heart-o\"></i\n        ></a>\n\n        <a\n          *ngIf=\"this.auth.isLoggedIn() && isFavori\"\n          id=\"btn\"\n          (click)=\"deleteFavoris()\"\n          class=\"picto-item\"\n          aria-label=\"Supprimer des favoris\"\n          ><i id=\"textlogo\">{{ recette?.nbFavoris }} </i\n          ><i class=\"class= fa fa-heart\"></i\n        ></a>\n\n        <a *ngIf=\"!this.auth.isLoggedIn()\" id=\"btn\"\n          ><i id=\"textlogo\">{{ recette?.nbFavoris }} </i\n          ><i class=\"class= fa fa-heart\"></i\n        ></a>\n      </p>\n\n      <h2></h2>\n\n      <div\n        id=\"timer\"\n        class=\"wprm-recipe-servings-container wprm-recipe-block-container wprm-recipe-block-container-separate wprm-block-text-normal\"\n      >\n        <div id=\"logoRecette\">\n          <img\n            *ngIf=\"recette?.tempsPreparation != null\"\n            src=\"../../../assets/img/preparation.png\"\n            width=\"50em\"\n            height=\"50em\"\n          />\n          {{ recette?.tempsPreparation }}\n        </div>\n\n        <div id=\"logoRecette\">\n          <img\n            *ngIf=\"recette?.tempsCuisson != null\"\n            src=\"../../../assets/img/cuisson.png\"\n            width=\"50em\"\n            height=\"50em\"\n          />\n          {{ recette?.tempsCuisson }}\n        </div>\n\n        <div id=\"logoRecette\">\n          <span id=\"part\" class=\"wprm-recipe-icon wprm-recipe-servings-icon\"\n            ><svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n              x=\"0px\"\n              y=\"0px\"\n              width=\"32px\"\n              height=\"32px\"\n              viewBox=\"0 0 24 24\"\n            >\n              <g>\n                <path\n                  fill=\"#333333\"\n                  d=\"M10,0C9.4,0,9,0.4,9,1v4H7V1c0-0.6-0.4-1-1-1S5,0.4,5,1v4H3V1c0-0.6-0.4-1-1-1S1,0.4,1,1v8c0,1.7,1.3,3,3,3v10c0,1.1,0.9,2,2,2s2-0.9,2-2V12c1.7,0,3-1.3,3-3V1C11,0.4,10.6,0,10,0z\"\n                ></path>\n                <path\n                  data-color=\"color-2\"\n                  fill=\"#333333\"\n                  d=\"M19,0c-3.3,0-6,2.7-6,6v9c0,0.6,0.4,1,1,1h2v6c0,1.1,0.9,2,2,2s2-0.9,2-2V1C20,0.4,19.6,0,19,0z\"\n                ></path>\n              </g>\n            </svg> </span\n          >{{ recette?.nbrePart }} {{ recette?.libellePart }}\n          <span\n            class=\"wprm-recipe-servings-unit wprm-recipe-details-unit wprm-block-text-normal\"\n          >\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"hero-graphic\" *ngFor=\"let img of image\">\n    <img\n      id=\"hero-graphic\"\n      src=\"{{ img.lienImage }}\"\n      alt=\"Photo de la recette\"\n    />\n\n    <!-- always, right? -->\n  </div>\n</header>\n\n<main class=\"main-content\">\n  <article id=\"hamburger-juicy\">\n    <h2 id=\"no-hamburger-juicy\">\n      Ingrédients\n      <a\n        *ngIf=\"this.auth.isLoggedIn()\"\n        id=\"btn\"\n        (click)=\"addListeCourses()\"\n        class=\"picto-item\"\n        aria-label=\"Ajouter les ingrédients à ma liste de course\"\n        style=\"float: right; font-size: inherit;\"\n      >\n        <span class=\"fa fa-shopping-cart\" style=\"color: #cea0af;\"></span>\n      </a>\n    </h2>\n\n    <p id=\"nbrePart\">Nombre de {{ recette?.libellePart }}</p>\n\n    <div class=\"recipe-ingredients__qt-counter\">\n      <div\n        class=\"recipe-ingredients__qt-counter__increment recipe-ingredients__qt-counter__increment-minus\"\n        (click)=\"onProportionLess(recette?.nbrePart - 1)\"\n      >\n        -\n      </div>\n      <input\n        class=\"recipe-ingredients__qt-counter__value title-5\"\n        type=\"text\"\n        name=\"\"\n        value=\"{{ recette?.nbrePart }}\"\n      />\n      <div\n        class=\"recipe-ingredients__qt-counter__increment recipe-ingredients__qt-counter__increment-plus\"\n        (click)=\"onProportionMore(recette?.nbrePart + 1)\"\n      >\n        +\n      </div>\n    </div>\n\n    <div id=\"no-hamburger-juicy\">\n      <p>\n        <li *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n          <span *ngIf=\"ingredient.updateQte != null\">\n            {{ ingredient.updateQte }} {{ ingredient.libelleUnite }}\n            {{ ingredient.nomIngredient }}\n          </span>\n          <span *ngIf=\"ingredient.updateQte == null\">\n            {{ ingredient.qte }} {{ ingredient.libelleUnite }}\n            {{ ingredient.nomIngredient }}\n          </span>\n        </li>\n      </p>\n    </div>\n  </article>\n\n  <article id=\"burger-fourth\">\n    <h2>Préparation</h2>\n\n    <pre>{{ recette?.etapes }}</pre>\n  </article>\n\n  <article>\n    <div *ngIf=\"recette?.astuce\" class=\"byline\">\n      <h2>Astuces</h2>\n\n      <pre>{{ recette?.astuce }}</pre>\n\n      <span>By</span> Marine\n    </div>\n    <div id=\"partage\">\n      <p>\n        <i class=\"fa fa-lg fa-instagram\" style=\"color: #053477;\"></i> Partagez\n        moi votre résultat 😍 Mentionnez\n        <a href=\"https://www.instagram.com/marineteroitin/?hl=fr\"\n          >@marineteroitin</a\n        >\n        ou taguez\n        <a href=\"https://www.instagram.com/explore/tags/marinesrecipes/?hl=fr\">\n          #marinesrecipes</a\n        >!\n      </p>\n    </div>\n  </article>\n\n  <article id=\"burger-fourth\">\n    <h2>Commentaires</h2>\n    <div *ngIf=\"!auth.isLoggedIn()\" class=\"blog-text-color\">\n      <span class=\"blog-button-color\" routerLink=\"/register\">Connexion</span>\n      pour rédiger un commentaire.\n    </div>\n    <div\n      *ngIf=\"auth.isLoggedIn()\"\n      class=\"card v-card v-sheet theme--light elevation-2\"\n    >\n      <span class=\"headline\">Laisser un commentaire</span>\n      <div class=\"sign-in-wrapper\">\n        <div class=\"caption disclaimer\">\n          <textarea\n            class=\"form-control\"\n            #message=\"ngModel\"\n            [(ngModel)]=\"newCommentaire.message\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            id=\"exampleFormControlTextarea1\"\n            cols=\"45\"\n            rows=\"8\"\n            aria-required=\"true\"\n            required\n          ></textarea>\n          <form>\n            <div id=\"image\">\n              <input\n                type=\"file\"\n                id=\"file\"\n                name=\"file\"\n                class=\"inputfile\"\n                name=\"image\"\n                (change)=\"selectImage($event)\"\n              />\n              <label id=\"positionImage\" for=\"file\" style=\"font-size: 16px;\"\n                >Choisir une image</label\n              >\n            </div>\n            <br />\n          </form>\n        </div>\n        <p class=\"error-message\"></p>\n        <button id=\"envoyer\" (click)=\"addCommentaire(newCommentaire.message)\">\n          Envoyer\n        </button>\n      </div>\n    </div>\n\n    <div *ngIf=\"commentaires\" id=\"comments\" class=\"post-comments elevation-2\">\n      <div>\n        <ol class=\"comment-list\">\n          <li\n            class=\"comment even thread-even depth-1 parent\"\n            *ngFor=\"let commentaire of commentaires\"\n          >\n            <article class=\"comment-body\">\n              <footer class=\"comment-meta\">\n                <div *ngIf=\"!commentaire.admin\" class=\"comment-author vcard\">\n                  <img\n                    alt=\"\"\n                    src=\"../../../assets/img/avatar.png\"\n                    class=\"avatar avatar-60 photo grav-hashed grav-hijack\"\n                    height=\"60\"\n                    width=\"60\"\n                  />\n                  <b class=\"fn\">{{ commentaire.ecritPar }}</b>\n                </div>\n                <div *ngIf=\"commentaire.admin\" class=\"comment-author vcard\">\n                  <img\n                    id=\"logo\"\n                    src=\"../../../assets/img/logo.jpeg\"\n                    class=\"avatar avatar-60 photo grav-hashed grav-hijack\"\n                    height=\"60\"\n                    width=\"auto\"\n                  />\n                  <b class=\"fn\">{{ commentaire.ecritPar }}</b>\n                </div>\n                <!-- .comment-author -->\n\n                <div class=\"comment-metadata\">\n                  <a>\n                    <time datetime=\"2020-04-09T16:20:54+02:00\">\n                      {{ commentaire.dateCommentaire }}</time\n                    >\n                  </a>\n                </div>\n                <!-- .comment-metadata -->\n              </footer>\n              <!-- .comment-meta -->\n\n              <div class=\"comment-content row\">\n                <div class=\"column1\">\n                  <div class=\"row\">\n                    <p>{{ commentaire.message }}</p>\n                    <div>\n                      <img\n                        id=\"imageCommentaire\"\n                        src=\"{{ commentaire.lienImage }}\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"column2\">\n                  <button\n                    id=\"btnCancel\"\n                    *ngIf=\"auth.isAdmin()\"\n                    class=\"btn btn-sm btn-danger\"\n                    (click)=\"deleteCommentaire(commentaire.idCommentaire)\"\n                  >\n                    <i class=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n              <!-- .comment-content -->\n\n              <div\n                class=\"comment-btn\"\n                *ngIf=\"commentaire.children && auth.isLoggedIn()\"\n              >\n                <form\n                  class=\"formCommentaire\"\n                  (ngSubmit)=\"addReponse($event, commentaire.idCommentaire)\"\n                >\n                  <textarea\n                    name=\"message\"\n                    type=\"textarea\"\n                    class=\"text\"\n                    rows=\"3\"\n                  ></textarea>\n                  <form>\n                    <div id=\"image\">\n                      <input\n                        type=\"file\"\n                        id=\"{{ commentaire.idCommentaire }}\"\n                        name=\"file\"\n                        class=\"inputfile\"\n                        name=\"image\"\n                        (change)=\"selectImage($event)\"\n                      />\n                      <label\n                        id=\"positionImage\"\n                        for=\"{{ commentaire.idCommentaire }}\"\n                        >Choisir une image</label\n                      >\n                    </div>\n                    <br />\n                  </form>\n                  <div id=\"envoyerCommentaire\">\n                    <button type=\"submit\">Répondre</button>\n                  </div>\n                </form>\n              </div>\n            </article>\n            <!-- .comment-body -->\n            <div *ngIf=\"commentaire.children\" id=\"children\">\n              <ol class=\"children\">\n                <li\n                  class=\"comment byuser comment-author-healthyclemsy bypostauthor odd alt depth-2\"\n                  *ngFor=\"let children of commentaire.children; last as isLast\"\n                >\n                  <article class=\"comment-body\">\n                    <footer class=\"comment-meta\">\n                      <div *ngIf=\"!children.admin\" class=\"comment-author vcard\">\n                        <img\n                          alt=\"\"\n                          src=\"../../../assets/img/avatar.png\"\n                          class=\"avatar avatar-60 photo grav-hashed grav-hijack\"\n                          height=\"60\"\n                          width=\"60\"\n                        />\n                        <b class=\"fn\">{{ children.ecritPar }}</b>\n                      </div>\n                      <div *ngIf=\"children.admin\" class=\"comment-author vcard\">\n                        <img\n                          alt=\"\"\n                          src=\"../../../assets/img/logo.jpeg\"\n                          id=\"logo\"\n                          class=\"avatar avatar-60 photo grav-hashed grav-hijack\"\n                          height=\"60\"\n                          width=\"auto\"\n                        />\n                        <b class=\"fn\">{{ children.ecritPar }}</b>\n                      </div>\n                      <!-- .comment-author -->\n\n                      <div class=\"comment-metadata\">\n                        <a>\n                          <time datetime=\"2020-04-12T10:36:28+02:00\">\n                            {{ children.dateCommentaire }}</time\n                          >\n                        </a>\n                      </div>\n                      <!-- .comment-metadata -->\n                    </footer>\n                    <!-- .comment-meta -->\n\n                    <div class=\"comment-content row\">\n                      <div class=\"column1\">\n                        <div class=\"row\">\n                          <p>{{ children.message }}</p>\n                          <div>\n                            <img\n                              id=\"imageCommentaire\"\n                              src=\"{{ children.lienImage }}\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"column2\">\n                        <button\n                          id=\"btnCancel\"\n                          *ngIf=\"auth.isAdmin()\"\n                          class=\"btn btn-sm btn-danger\"\n                          (click)=\"deleteCommentaire(children.idCommentaire)\"\n                        >\n                          <i class=\"fa fa-trash\"></i>\n                        </button>\n                      </div>\n                    </div>\n                    <!-- .comment-content -->\n\n                    <div class=\"reply\"></div>\n                    <!-- #respond -->\n\n                    <div\n                      class=\"comment-btn\"\n                      *ngIf=\"isLast && auth.isLoggedIn()\"\n                    >\n                      <form\n                        class=\"formCommentaire\"\n                        (ngSubmit)=\"\n                          addReponse($event, commentaire.idCommentaire)\n                        \"\n                      >\n                        <textarea\n                          name=\"message\"\n                          type=\"textarea\"\n                          class=\"text\"\n                          rows=\"3\"\n                        ></textarea>\n                        <form>\n                          <div id=\"image\">\n                            <input\n                              type=\"file\"\n                              id=\"{{ children.idCommentaire }}\"\n                              name=\"file\"\n                              class=\"inputfile\"\n                              name=\"image\"\n                              (change)=\"selectImage($event)\"\n                            />\n                            <label\n                              id=\"positionImage\"\n                              for=\"{{ children.idCommentaire }}\"\n                              >Choisir une image</label\n                            >\n                          </div>\n                          <br />\n                        </form>\n                        <div id=\"envoyerCommentaire\">\n                          <button type=\"submit\">Répondre</button>\n                        </div>\n                      </form>\n                    </div>\n                  </article>\n                  <!-- .comment-body -->\n                </li>\n                <!-- #comment-## -->\n              </ol>\n              <!-- .children -->\n            </div>\n          </li>\n          <!-- #comment-## -->\n        </ol>\n        <!-- .comment-list -->\n      </div>\n    </div>\n  </article>\n\n  <h2>Post récents</h2>\n</main>\n\n<div id=\"recentPost\">\n  <div class=\"container marketing\">\n    <!-- Three columns of text below the carousel -->\n    <div class=\"row\">\n      <div class=\"col-lg-4\" *ngFor=\"let recette of latestRecipes\">\n        <div id=\"imgSize\">\n          <div class=\"box\">\n            <img\n              id=\"imgCard\"\n              class=\"bd-placeholder-img\"\n              width=\"180\"\n              height=\"auto\"\n              src=\"{{ recette.lienImage }}\"\n              preserveAspectRatio=\"xMidYMid slice\"\n              focusable=\"false\"\n              role=\"img\"\n            />\n          </div>\n        </div>\n        <ul class=\"post-categories2\">\n          <li *ngFor=\"let category of recette.categories\">\n            <a rel=\"category tag\">{{ category.libelleCategorie }}</a>\n          </li>\n        </ul>\n        <h3 id=\"cardTitle\">{{ recette.nomRecette }}</h3>\n        <div id=\"container\">\n          <div class=\"centre\">\n            {{ recette.mot }}\n          </div>\n          <!-- centre -->\n        </div>\n        <p>\n          <a\n            (click)=\"updateNbView(recette)\"\n            [routerLink]=\"['/recipe', recette.idRecette]\"\n            class=\"btn btn-primary btn-effect top\"\n          >\n            <span>Voir »</span>\n            <span><i class=\"fa fa-long-arrow-right\"></i></span>\n          </a>\n        </p>\n      </div>\n      <!-- /.col-lg-4 -->\n    </div>\n    <!-- /.row -->\n  </div>\n</div>\n","import { Component, OnInit, OnChanges } from \"@angular/core\";\nimport { Observable, combineLatest } from \"rxjs\";\nimport { map, startWith } from \"rxjs/operators\";\nimport { FormControl, FormGroup, FormBuilder } from \"@angular/forms\";\nimport {\n  RecettesService,\n  AuthentificationService,\n  ImagesService,\n  CategoriesService,\n  FavorisService,\n} from \"../../service\";\nimport { RecipeDetails, CategoryDetails, FavorisDetails } from \"../../models\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Notification } from \"src/app/models\";\nimport { NotificationService } from \"src/app/service/notifications/notification.service\";\n\n@Component({\n  selector: \"app-recettes\",\n  templateUrl: \"./recettes.component.html\",\n  styleUrls: [\"./recettes.component.scss\"],\n})\nexport class RecettesComponent implements OnInit, OnChanges {\n  page = 1;\n\n  public actualCategory: number = null;\n  public recipeByCategory: HashTable<RecipeDetails[]> = {};\n  public recipeCategory: RecipeDetails[] = [];\n\n  public recettes$: Observable<RecipeDetails[]>;\n  public categories: CategoryDetails[];\n  public filteredRecipe$: Observable<RecipeDetails[]>;\n  public filter: FormControl;\n  public filter$: Observable<string>;\n\n  public newFavori: FavorisDetails = {\n    pseudo: \"\",\n    idRecette: null,\n  };\n  public favoris: number[] = [];\n\n  public researchForm: FormGroup;\n\n  public allRecipe: RecipeDetails[];\n  public allRecipe2: RecipeDetails[];\n  currentPage: number;\n\n  constructor(\n    private recetteService: RecettesService,\n    private router: Router,\n    public auth: AuthentificationService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private imagesService: ImagesService,\n    private categoriesService: CategoriesService,\n    private favorisService: FavorisService,\n    private notifService: NotificationService\n  ) {\n    // pour la recherche dynamique\n    this.recettes$ = this.recetteService.getAllRecipesAndIngredients();\n\n    if (this.route.snapshot.paramMap.get(\"id\")) {\n      this.getRecipeByCategory(this.route.snapshot.paramMap.get(\"id\"));\n    } else {\n      this.recetteService.getAllRecipesAndIngredients().subscribe((data) => {\n        this.allRecipe = data;\n        this.allRecipe2 = data;\n      });\n    }\n\n    this.filter = new FormControl(\"\");\n    this.filter$ = this.filter.valueChanges.pipe(startWith(\"\"));\n    // tslint:disable-next-line: deprecation\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$).pipe(\n      map(([recipes, filterString]) => {\n        return recipes.filter(\n          (recipe) =>\n            recipe.ingredients.filter(\n              (ingredient) =>\n                ingredient.nomIngredient\n                  .toLowerCase()\n                  .indexOf(filterString.toLowerCase()) !== -1\n            ) &&\n            recipe.nomRecette\n              .toLowerCase()\n              .indexOf(filterString.toLowerCase()) !== -1\n        );\n      })\n    );\n\n    if (this.auth.isLoggedIn()) {\n      this.newFavori.pseudo = this.auth.getUserDetails().pseudo;\n      this.getFavoris();\n    }\n\n    this.categoriesService\n      .getAllCategory()\n      .subscribe((categorie: CategoryDetails[]) => {\n        this.categories = categorie;\n        categorie.forEach((data) => {\n          this.recetteService\n            .getRecipeByCategory(data.idCategorie)\n            .subscribe((recipes) => {\n              this.recipeCategory = recipes;\n              this.recipeByCategory[data.idCategorie] = this.recipeCategory;\n            });\n        });\n      });\n    this.initResearchForm();\n    this.currentPage = 1;\n  }\n\n  // dans ngOnInit on récupère les données à afficher au lancement de la page\n  ngOnInit(): void {}\n\n  ngOnChanges() {\n    this.allRecipe = this.allRecipe2;\n    this.initResearchForm();\n    document.body.scrollTop = 0;\n  }\n\n  onPageChange(page: number) {\n    this.currentPage = page;\n    window.scrollTo(0, 0);\n  }\n\n  initResearchForm() {\n    this.researchForm = this.formBuilder.group({\n      filter: [\"\"],\n    });\n  }\n\n  research() {\n    const formValue = this.researchForm.value;\n\n    if (this.actualCategory != null) {\n      if (formValue.filter !== \"\") {\n        const researchResult: RecipeDetails[] = [];\n        this.recipeByCategory[this.actualCategory].forEach((recipe) => {\n          if (\n            recipe.nomRecette\n              .toLowerCase()\n              .indexOf(formValue.filter.toLowerCase()) !== -1\n          ) {\n            if (!researchResult.includes(recipe)) {\n              researchResult.push(recipe);\n            }\n          }\n          recipe.ingredients.forEach((ingredient) => {\n            if (\n              ingredient.nomIngredient\n                .toLowerCase()\n                .indexOf(formValue.filter.toLowerCase()) !== -1\n            ) {\n              if (!researchResult.includes(recipe)) {\n                researchResult.push(recipe);\n              }\n            }\n          });\n        });\n        this.allRecipe = researchResult;\n      } else {\n        this.allRecipe = this.allRecipe2;\n      }\n    } else {\n      if (formValue.filter !== \"\") {\n        const researchResult: RecipeDetails[] = [];\n\n        this.allRecipe2.forEach((recipe) => {\n          if (\n            recipe.nomRecette\n              .toLowerCase()\n              .indexOf(formValue.filter.toLowerCase()) !== -1\n          ) {\n            if (!researchResult.includes(recipe)) {\n              researchResult.push(recipe);\n            }\n          }\n          recipe.ingredients.forEach((ingredient) => {\n            if (\n              ingredient.nomIngredient\n                .toLowerCase()\n                .indexOf(formValue.filter.toLowerCase()) !== -1\n            ) {\n              if (!researchResult.includes(recipe)) {\n                researchResult.push(recipe);\n              }\n            }\n          });\n        });\n        this.allRecipe = researchResult;\n      } else {\n        this.allRecipe = this.allRecipe2;\n      }\n    }\n  }\n\n  getAllRecipes() {\n    this.actualCategory = null;\n\n    this.recettes$ = this.recetteService.getAllRecipesAndIngredients();\n\n    this.recetteService.getAllRecipesAndIngredients().subscribe((data) => {\n      this.allRecipe = data;\n    });\n\n    this.filter = new FormControl(\"\");\n    this.filter$ = this.filter.valueChanges.pipe(startWith(\"\"));\n    // tslint:disable-next-line: deprecation\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$).pipe(\n      map(([recipes, filterString]) =>\n        recipes.filter(\n          (recipe) =>\n            recipe.nomRecette\n              .toLowerCase()\n              .indexOf(filterString.toLowerCase()) !== -1\n        )\n      )\n    );\n  }\n\n  getImageByIdRecipe(id: number): any {\n    this.imagesService.getImage(id).subscribe((res) => {\n      return res.lienImage;\n    });\n  }\n\n  getAllCategory() {\n    this.categoriesService.getAllCategory().subscribe(\n      (categorie: CategoryDetails[]) => {\n        this.categories = categorie;\n      },\n      (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Il n'y a pas de catégorie.\");\n          }\n        }\n      }\n    );\n  }\n\n  getRecipeByCategory(idCategorie: any) {\n    this.actualCategory = idCategorie;\n\n    this.recettes$ = this.recetteService.getRecipeByCategory(idCategorie);\n\n    this.recetteService.getRecipeByCategory(idCategorie).subscribe((data) => {\n      this.allRecipe = data;\n    });\n\n    this.filter = new FormControl(\"\");\n    this.filter$ = this.filter.valueChanges.pipe(startWith(\"\"));\n    // tslint:disable-next-line: deprecation\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$).pipe(\n      map(([recipes, filterString]) =>\n        recipes.filter(\n          (recipe) =>\n            recipe.nomRecette\n              .toLowerCase()\n              .indexOf(filterString.toLowerCase()) !== -1\n        )\n      )\n    );\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.notificationVue(recette.idRecette);\n        this.router.navigate([\"/recipe\", recette.idRecette]).then(() => {\n          window.location.reload();\n        });\n      },\n      (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Cette recette n'existe pas !\");\n          }\n        }\n      }\n    );\n  }\n\n  addFavoris(id: number) {\n    this.newFavori.idRecette = id;\n    this.notificationFavori(this.auth.getUserDetails().pseudo,id);\n    this.favorisService.addFavoris(this.newFavori).subscribe((res) => {\n      this.getFavoris();\n      this.recetteService.getAllRecipesAndIngredients().subscribe((data) => {\n        this.allRecipe = data;\n      });\n    });\n  }\n\n  getFavoris() {\n    this.favoris = [];\n    this.favorisService.getFavoris().subscribe(\n      (favoris: RecipeDetails[]) => {\n        favoris.forEach((element) => {\n          this.favoris.push(element.idRecette);\n        });\n      },\n      (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Cette user n'a pas de favoris\");\n          }\n        }\n      }\n    );\n  }\n\n  deleteFavoris(idRecette: any) {\n    this.favorisService.deleteFavoris(idRecette).subscribe((res) => {\n      this.getFavoris();\n      this.recetteService.getAllRecipesAndIngredients().subscribe((data) => {\n        this.allRecipe = data;\n      });\n    }); /* rafraichit la page */\n  }\n   //notification vue\n   notificationVue(idRecette) {\n    let notif: Notification = {\n      pseudo: null,\n      idRecette: idRecette,\n      type: \"vue\",\n    };\n    this.notifService.addNotification(notif).subscribe();\n  }\n\n    //notification favori\n    notificationFavori(pseudo,idRecette) {\n      let notif: Notification = {\n        pseudo: pseudo,\n        idRecette: idRecette,\n        type: \"favori\",\n      };\n      this.notifService.addNotification(notif).subscribe();\n    }\n}\n\nexport interface HashTable<T> {\n  [key: number]: T;\n}\n","<ul id=\"menu\" class=\"nav justify-content-center\">\n  <li class=\"nav justify-content-center\">\n    <a\n      class=\"nav-link active\"\n      routerLink=\"/allRecipes\"\n      (click)=\"getAllRecipes()\"\n      >Toutes les recettes</a\n    >\n  </li>\n\n  <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n    <a\n      class=\"nav-link\"\n      routerLink=\"/allRecipes\"\n      (click)=\"getRecipeByCategory(categ.idCategorie)\"\n      >{{ categ.libelleCategorie }}</a\n    >\n  </li>\n  <!--<li>\n        <form class=\"form-inline my-2 my-lg-0\">\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recette..\" aria-label=\"Search\"\n                [formControl]=\"filter\">\n        </form>\n    </li>-->\n</ul>\n\n<br />\n\n<ul class=\"nav justify-content-center\">\n  <li>\n    <form\n      class=\"form-inline\"\n      [formGroup]=\"researchForm\"\n      (ngSubmit)=\"research()\"\n    >\n      <div class=\"col text-center\">\n        <input\n          class=\"form-control\"\n          type=\"search\"\n          placeholder=\"Recette, ingrédient..\"\n          aria-label=\"Search\"\n          formControlName=\"filter\"\n          (click)=\"ngOnChanges()\"\n        />\n      </div>\n      <div class=\"col text-center\">\n        <button id=\"validateButton\" type=\"submit\" class=\"btn btn-primary\">\n          Rechercher\n        </button>\n      </div>\n    </form>\n  </li>\n</ul>\n\n<br />\n\n<div class=\"row\">\n  <div\n    class=\"col-lg-4 col-md-6 col-sm-12 p-3\"\n    *ngFor=\"\n      let recette of allRecipe\n        | paginate\n          : {\n              id: 'listing_pagination',\n              itemsPerPage: 12,\n              currentPage: currentPage\n            }\n    \"\n  >\n    <article class=\"card wrap\">\n      <div\n        id=\"photo\"\n        [ngStyle]=\"{\n          'background-image': 'url(&quot;' + recette.lienImage + '&quot;)'\n        }\"\n        (click)=\"updateNbView(recette)\"\n        [routerLink]=\"['/recipe', recette.idRecette]\"\n      ></div>\n      <div>\n        <div id=\"titleRecipe\">\n          <h3 class=\"food\">\n            {{ recette.nomRecette }}\n            <a id=\"vege\" *ngIf=\"recette.vege\"\n              ><img\n                src=\"../../../assets/img/logoVegetarien.png\"\n                width=\"20em\"\n                height=\"20em\"\n            /></a>\n          </h3>\n        </div>\n        <div id=\"logoRecette\">\n          <div class=\"logo\">\n            <i class=\"fa fa-clock-o\"></i\n            ><a class=\"picto-item\" aria-label=\"Temps de préparation\"\n              ><i id=\"textlogo\">{{ recette.globalTime }}</i></a\n            >\n          </div>\n          <div class=\"logo\">\n            <i class=\"fa fa-users\"></i\n            ><a class=\"picto-item\" aria-label=\"Nombre de parts\"\n              ><i id=\"textlogo\"\n                >{{ recette.nbrePart }} {{ recette.libellePart }}</i\n              ></a\n            >\n          </div>\n          <div class=\"logo\">\n            <a class=\"picto-item\" aria-label=\"Nombre de vues\"\n              ><i id=\"textlogo\">{{ recette?.nbVues }}</i\n              ><i id=\"vue\"> 👁</i></a\n            >\n          </div>\n          <div id=\"coeur\" class=\"logo\">\n            <a\n              *ngIf=\"\n                this.auth.isLoggedIn() &&\n                !this.favoris.includes(recette.idRecette)\n              \"\n              id=\"btn\"\n              (click)=\"addFavoris(recette?.idRecette)\"\n              class=\"picto-item\"\n              aria-label=\"Ajouter aux favoris\"\n              ><i id=\"textlogo\">{{ recette?.nbFavoris }} </i\n              ><i class=\"fa fa-heart-o\"></i\n            ></a>\n            <a\n              *ngIf=\"\n                this.auth.isLoggedIn() &&\n                this.favoris.includes(recette.idRecette)\n              \"\n              id=\"btn\"\n              (click)=\"deleteFavoris(recette.idRecette)\"\n              class=\"picto-item\"\n              aria-label=\"Supprimer des favoris\"\n              ><i id=\"textlogo\">{{ recette?.nbFavoris }} </i\n              ><i class=\"class= fa fa-heart\"></i\n            ></a>\n            <!--si je suis pas connectée afficher le nb de favoris avec un petit coeur rose rempli-->\n            <a *ngIf=\"!this.auth.isLoggedIn()\" id=\"btn\"\n              ><i id=\"textlogo\">{{ recette?.nbFavoris }} </i\n              ><i class=\"class= fa fa-heart\"></i\n            ></a>\n          </div>\n        </div>\n      </div>\n    </article>\n  </div>\n</div>\n<div id=\"paginationRecette\" #scrollContainer>\n  <pagination-controls\n    id=\"listing_pagination\"\n    (pageChange)=\"onPageChange($event)\"\n    previousLabel=\"Précédent\"\n    nextLabel=\"Suivant\"\n  ></pagination-controls>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-refresh',\n  templateUrl: './refresh.component.html',\n  styleUrls: ['./refresh.component.css']\n})\n\nexport class RefreshComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute, private route: Router) { }\n\n  ngOnInit() {\n    this.activatedRoute\n        .queryParams\n        .subscribe(params => {\n          if (params.url) {\n            this.route.navigate([params.url]);\n          }\n        });\n  }\n\n}\n","<p>refresh works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\n\n@Component({\n  selector: 'app-request-reset',\n  templateUrl: './request-reset.component.html',\n  styleUrls: ['./request-reset.component.css']\n})\n\nexport class RequestResetComponent implements OnInit {\n  RequestResetForm: FormGroup;\n  forbiddenEmails: any;\n  errorMessage: string;\n  successMessage: string;\n  IsvalidForm = true;\n\n  constructor(\n    private authService: AuthentificationService,\n    private router: Router,\n   ) {\n\n  }\n\n\n  ngOnInit() {\n\n    this.RequestResetForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email], this.forbiddenEmails),\n    });\n  }\n\n\n  RequestResetUser(form) {\n    if (form.valid) {\n      this.IsvalidForm = true;\n      this.authService.requestReset(this.RequestResetForm.value).subscribe(\n        data => {\n          this.RequestResetForm.reset();\n          this.successMessage = 'Un email vous a été envoyé pour changer votre mot de passe.';\n          setTimeout(() => {\n            this.successMessage = null;\n            this.router.navigate(['login']);\n          }, 3000);\n        },\n        err => {\n\n          if (err.error.message) {\n            this.errorMessage = err.error.message;\n          }\n        }\n      );\n    } else {\n      this.IsvalidForm = false;\n    }\n  }\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 mt-5 mx-auto\">\n\n                <h1 id=\"lien\" class=\"h3 mb-3 font-weight-normal\">Mot de passe oublié</h1>\n\n                <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n                    <span>{{errorMessage}}</span>\n                </div>\n                <div id=\"successMsg\" *ngIf=\"successMessage\">\n                    <span>{{successMessage}}</span>\n                </div>\n                <form class=\"contact-form\" [formGroup]=\"RequestResetForm\" (ngSubmit)=\"RequestResetUser(RequestResetForm)\" data-toggle=\"validator\" role=\"form\">\n\n                    <div class=\"form-group\">\n                        <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\" placeholder=\"exemple@exemple.fr\" type=\"text\" id=\"email\" formControlName=\"email\" />\n                        <span *ngIf=\"!RequestResetForm.get('email').valid && !IsvalidForm\" class=\"help-block\">Entrer une adresse valide!</span>\n                    </div>\n                    <div class=\"form-group\">\n\n                        <input id=\"send_email\" class=\"btn btn-lg btn-primary\" type=\"submit\" value=\"Valider\">\n\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-response-reset',\n  templateUrl: './response-reset.component.html',\n  styleUrls: ['./response-reset.component.css']\n})\n\nexport class ResponseResetComponent implements OnInit {\n  ResponseResetForm: FormGroup;\n  errorMessage: string;\n  successMessage: string;\n  resetToken: null;\n  CurrentState: any;\n  IsResetFormValid = true;\n  constructor(\n    private authService: AuthentificationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder ) {\n\n    this.CurrentState = 'Wait';\n    this.route.params.subscribe(params => {\n      this.resetToken = params.token;\n      this.VerifyToken();\n    });\n  }\n\n\n  ngOnInit() {\n\n    this.Init();\n  }\n\n  VerifyToken() {\n    this.authService.ValidPasswordToken({ resettoken: this.resetToken }).subscribe(\n      data => {\n        this.CurrentState = 'Verified';\n      },\n      err => {\n        this.CurrentState = 'NotVerified';\n      }\n    );\n  }\n\n  Init() {\n    this.ResponseResetForm = this.fb.group(\n      {\n        resettoken: [this.resetToken],\n        newPassword: ['', [Validators.required, Validators.minLength(4)]],\n        confirmPassword: ['', [Validators.required, Validators.minLength(4)]]\n      }\n    );\n  }\n\n  Validate(passwordFormGroup: FormGroup) {\n    const newPassword = passwordFormGroup.controls.newPassword.value;\n    const confirmPassword = passwordFormGroup.controls.confirmPassword.value;\n\n    if (confirmPassword.length <= 0) {\n      return null;\n    }\n\n    if (confirmPassword !== newPassword) {\n      return {\n        doesNotMatch: true\n      };\n    }\n\n    return null;\n  }\n\n\n  ResetPassword(form) {\n    if (form.valid) {\n      this.IsResetFormValid = true;\n      this.authService.newPassword(this.ResponseResetForm.value).subscribe(\n        data => {\n          this.ResponseResetForm.reset();\n          this.successMessage = data.message;\n          setTimeout(() => {\n            this.successMessage = null;\n            this.router.navigate(['login']);\n          }, 3000);\n        },\n        err => {\n          if (err.error.message) {\n            this.errorMessage = err.error.message;\n          }\n        }\n      );\n    } else { this.IsResetFormValid = false; }\n  }\n}\n","<div class=\"container-fluid form\">\n  <div class=\"row\" *ngIf=\"CurrentState == 'Wait'\">\n    <div class=\"col-md-12 close-form\">\n      <h2>Please Wait...</h2>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"CurrentState == 'NotVerified'\">\n    <div class=\"col-md-12\">\n      <h2>Invalid URL.</h2>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"CurrentState == 'Verified'\">\n    <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n      <div class=\"card card-signin my-5\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title text-center\">Nouveau mot de passe</h5>\n          <div>\n            <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n              <span>{{ errorMessage }}</span>\n            </div>\n            <div id=\"successMsg\" *ngIf=\"successMessage\">\n              <span>{{ successMessage }}</span>\n            </div>\n            <form\n              action=\"\"\n              [formGroup]=\"ResponseResetForm\"\n              (ngSubmit)=\"ResetPassword(ResponseResetForm)\"\n            >\n              <div class=\"form-group\">\n                <input\n                  _ngcontent-c0=\"\"\n                  class=\"form-control form-control-lg\"\n                  placeholder=\"Mot de passe\"\n                  type=\"password\"\n                  id=\"password\"\n                  formControlName=\"newPassword\"\n                />\n                <span\n                  *ngIf=\"\n                    !ResponseResetForm.get('newPassword').valid &&\n                    !IsResetFormValid\n                  \"\n                  class=\"help-block\"\n                  >Password is required with atleast 4 characters.</span\n                >\n              </div>\n              <div class=\"form-group\">\n                <input\n                  _ngcontent-c0=\"\"\n                  class=\"form-control form-control-lg\"\n                  placeholder=\"Confirmer mot de passe\"\n                  type=\"password\"\n                  id=\"cpassword\"\n                  formControlName=\"confirmPassword\"\n                />\n                <span\n                  *ngIf=\"\n                    !ResponseResetForm.get('confirmPassword').valid &&\n                    !IsResetFormValid\n                  \"\n                  class=\"help-block\"\n                  >.\n                </span>\n                <span\n                  *ngIf=\"\n                    ResponseResetForm.get('confirmPassword').valid &&\n                    ResponseResetForm.get('confirmPassword').value !=\n                      ResponseResetForm.get('newPassword').value &&\n                    !IsResetFormValid\n                  \"\n                  class=\"help-block\"\n                  >Confirm Password does not match with password.</span\n                >\n              </div>\n              <div class=\"form-group\">\n                <div style=\"text-align: center; margin-top: 2em;\">\n                  <button type=\"submit\" class=\"btn btn-primary\">\n                    Modifier\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { AuthentificationService, TokenPayload } from \"../../service\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\nimport { AlertService } from \"src/app/_alert\";\n\n@Component({\n  selector: \"app-se-connecter\",\n  templateUrl: \"./se-connecter.component.html\",\n  styleUrls: [\"./se-connecter.component.css\"],\n})\nexport class SeConnecterComponent implements OnInit {\n  options = {\n    autoClose: false,\n    keepAfterRouteChange: false,\n  };\n\n  loginForm: FormGroup;\n\n  credentials: TokenPayload = {\n    pseudo: \"\",\n    email: \"\",\n    mdp: \"\",\n    mdp2: \"\",\n    admin: false,\n    abonneNews: true,\n    error: \"\",\n  };\n\n  constructor(\n    private auth: AuthentificationService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    public alertService: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      pseudo: [\"\", Validators.required],\n      mdp: [\"\", Validators.required],\n    });\n  }\n\n  login() {\n    const formValue = this.loginForm.value;\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.mdp = formValue.mdp;\n\n    this.auth.login(this.credentials).subscribe(\n      (res) => {\n        console.log(res);\n        if (\n          res.error === \"Mot de passe et/ou pseudo incorrect\" ||\n          res.error ===\n            \"Vous devez vérifier votre adresse mail avant de pouvoir vous connecter ! :)\"\n        ) {\n          this.alertService.error(res.error, this.options);\n          this.initForm();\n        } else {\n          this.router.navigateByUrl(\"/\");\n          alert(\"Bienvenue sur Marine's Recipe\");\n        }\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n  // Fonction appelée lors du clic\n  clicSurBouton() {\n    this.alertService.warn(\n      \"Si vous n'avez pas reçu de mail pour la confirmation de votre adresse mail,\" +\n        \"veuillez consulter vos mails indésirables. Si le problème persiste, veuillez nous contacter via l'onglet Contact.\",\n      this.options\n    );\n  }\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-5 mx-auto\">\n        <alert></alert>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"contact-form\">\n          <h1 id=\"lien\" class=\"h3 mb-3 font-weight-normal\">Se connecter</h1>\n          <hr />\n          <div class=\"form-group\">\n            <label>Pseudo</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              required\n              name=\"pseudo\"\n              placeholder=\"pseudo\"\n              formControlName=\"pseudo\"\n            />\n          </div>\n          <hr />\n          <div class=\"form-group\">\n            <label>Mot de passe</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              required\n              name=\"mdp\"\n              placeholder=\"****\"\n              formControlName=\"mdp\"\n            />\n          </div>\n          <hr />\n\n          <input\n            class=\"btn btn-lg btn-primary\"\n            type=\"submit\"\n            value=\"Se connecter\"\n          />\n        </form>\n        <hr />\n        <div id=\"lien\">\n          <a href=\"request-reset-password\">Mot de passe oublié</a>\n        </div>\n        <hr />\n        <div id=\"lien\">\n          <button type=\"button\" id=\"btnemail\" (click)=\"clicSurBouton()\">\n            Je n'ai pas reçu de mail pour la confirmation de mon adresse mail\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from \"@angular/core\";\nimport { StatistiquesService } from \"src/app/service/statistiques/statistiques.service\";\nimport { UserProfile } from \"src/app/models/user.model\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Notification } from \"src/app/models\";\nimport { NotificationService } from \"src/app/service/notifications/notification.service\";\nimport { RecettesService } from \"src/app/service\";\nimport { take } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-statistiques\",\n  templateUrl: \"./statistiques.component.html\",\n  styleUrls: [\"./statistiques.component.css\"],\n})\nexport class StatistiquesComponent implements OnInit {\n  public nbVuesTot: any;\n  public nbCommentairesTot: any;\n  public nbUsers: any;\n  public nbAbonnes: any;\n  public users: UserProfile[];\n  public notifs: Notification[];\n\n  constructor(\n    private statService: StatistiquesService,\n    private toastr: ToastrService,\n    public notifService: NotificationService,\n    public recetteService: RecettesService\n  ) {\n    this.notifService.getEnabledNotifs().subscribe((data) => {\n      this.notifs = data;\n      data.forEach((element) => {\n        if (element.type === \"vue\") {\n          this.recetteService\n            .getRecipeById(element.idRecette)\n            .subscribe((recipe) => {\n              this.showInfo(\n                \"Une nouvelle vue sur la recette \" + recipe.nomRecette,\n                element.idNotification,\n                \"view-class\"\n              );\n            });\n        } else if (element.type === \"user\") {\n          this.showInfo(\n            \"Un nouvel abonné : \" + element.pseudo,\n            element.idNotification,\n            \"user-class\"\n          );\n        } else if (element.type === \"abonne\") {\n          this.showInfo(\n            \"Un nouvel inscrit : \" + element.pseudo,\n            element.idNotification,\n            \"toast-success\"\n          );\n        } else if (element.type === \"commentaire\") {\n          this.recetteService\n            .getRecipeById(element.idRecette)\n            .subscribe((recipe) => {\n              this.showInfo(\n                \"Un nouveau commentaire sur la recette '\" +\n                  recipe.nomRecette +\n                  \"' de la part de \" +\n                  element.pseudo,\n                element.idNotification,\n                \"toast-info\"\n              );\n            });\n        } else if (element.type === \"favori\") {\n          this.recetteService\n            .getRecipeById(element.idRecette)\n            .subscribe((recipe) => {\n              this.showInfo(\n                element.pseudo +\n                  \" a rajouté une nouvelle recette dans ses favoris : \" +\n                  recipe.nomRecette,\n                element.idNotification,\n                \"toast-error\"\n              );\n            });\n        }\n      });\n    });\n  }\n\n  ngOnInit(): void {\n    this.statService.getNbVuesTot().subscribe((data) => {\n      this.nbVuesTot = data[0].nbVuesTot; //data[0] car donnée récupérée sous format json\n    });\n\n    this.statService.getNbCommentairesTot().subscribe((data) => {\n      this.nbCommentairesTot = data[0].nbCommentairesTot;\n    });\n\n    this.statService.getNbUsers().subscribe((data) => {\n      this.nbUsers = data[0].nbUsers;\n    });\n\n    this.statService.getNbAbonnes().subscribe((data) => {\n      this.nbAbonnes = data[0].nbAbonnes;\n    });\n\n    this.statService.getUsers().subscribe((data) => {\n      this.users = data;\n    });\n  }\n\n  showInfo(text, id, css) {\n    this.toastr\n      .show(text, null, {\n        toastClass: css + \" ngx-toastr\",\n      })\n      .onTap.pipe(take(1))\n      .subscribe(() => this.cleanNotif(id));\n  }\n\n  showSuccess(text, id) {\n    this.toastr\n      .show(text, null, {\n        toastClass: \"toast-success ngx-toastr\",\n      })\n      .onTap.pipe(take(1))\n      .subscribe(() => this.cleanNotif(id));\n  }\n\n  showWarning(text, id) {\n    this.toastr\n      .warning(text)\n      .onTap.pipe(take(1))\n      .subscribe(() => this.cleanNotif(id));\n  }\n\n  cleanNotif(id) {\n    this.notifService.updateNotif(id).subscribe();\n  }\n}\n","<body class=\"color-b\">\n\n    <div id=\"hammerElement\" style=\"touch-action: pan-y; user-select: none; -webkit-user-drag: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\">\n        <div class=\"container-section construct\">\n            <section id=\"webmarketing\" class=\"section\">\n\n\n                <section class=\"group-article\">\n                    <header class=\"group-header\">\n                        <h1 class=\"titre\">Statistiques</h1>\n                    </header>\n                    <article>\n                        <h2 class=\"titre\">Nombre de vues total</h2>\n                        <p class=\"tags\">\n                            <span class=\"tag-item\">bilan</span> </p>\n                        <p class=\"descript\">{{nbVuesTot}}</p>\n                        <a href=\"https://wearesocial.com/fr/\" class=\"link\" target=\"_blank\"></a>\n                        <div class=\"action-link-list\">\n                            <a href=\"#\" class=\"action-link\">C</a>\n                            <a href=\"#\" class=\"action-link\">O</a>\n                            <a href=\"#\" class=\"action-link\">D</a>\n                            <a href=\"#\" class=\"action-link\">E</a>\n                        </div>\n                    </article>\n                    <article>\n                        <h2 class=\"titre\">Nombre de commentaires total</h2>\n                        <p class=\"tags\">\n                            <span class=\"tag-item\">statistiques</span> </p>\n                        <p class=\"descript\">{{nbCommentairesTot}}</p>\n                        <a href=\"https://fr.statista.com/\" class=\"link\" target=\"_blank\"></a>\n                        <div class=\"action-link-list\">\n                            <a href=\"#\" class=\"action-link\">C</a>\n                            <a href=\"#\" class=\"action-link\">O</a>\n                            <a href=\"#\" class=\"action-link\">D</a>\n                            <a href=\"#\" class=\"action-link\">E</a>\n                        </div>\n                    </article>\n                    <article>\n                        <h2 class=\"titre\">Nombre de personnes inscrites</h2>\n                        <p class=\"tags\">\n                            <span class=\"tag-item\">statistiques</span> </p>\n                        <p class=\"descript\">{{nbUsers}}</p>\n\n                        <a class=\"link\" target=\"_blank\"> dont {{nbAbonnes}} abonnés à la newsletter.</a>\n                        <div class=\"action-link-list\">\n\n                            <a href=\"#\" class=\"action-link\">C</a>\n                            <a href=\"#\" class=\"action-link\">O</a>\n                            <a href=\"#\" class=\"action-link\">D</a>\n                            <a href=\"#\" class=\"action-link\">E</a>\n                        </div>\n                    </article>\n\n\n                    <article>\n                        <h2 class=\"titre\">Users</h2>\n                        <p class=\"tags\">\n                            <span class=\"tag-item\">statistiques</span> </p>\n                        <p class=\"descript\" *ngFor=\"let user of users \">{{user.pseudo}}\n                            <span *ngIf=\"user.abonneNews == 1\"> <i class=\"fa fa-lg fa-envelope\"></i> </span>\n                        </p>\n\n                        <a href=\"https://wearesocial.com/fr/\" class=\"link\" target=\"_blank\"></a>\n                        <div class=\"action-link-list\">\n\n                            <a href=\"#\" class=\"action-link\">C</a>\n                            <a href=\"#\" class=\"action-link\">O</a>\n                            <a href=\"#\" class=\"action-link\">D</a>\n                            <a href=\"#\" class=\"action-link\">E</a>\n                        </div>\n                    </article>\n\n                    <article>\n                        <h2 class=\"titre\">Statistiques du mois : recettes</h2>\n                        <p class=\"tags\">\n                            <span class=\"tag-item\">statistiques</span> </p>\n                        <p class=\"descript\">lààààààààààà\n                        </p>\n\n                        <a href=\"https://wearesocial.com/fr/\" class=\"link\" target=\"_blank\"></a>\n                        <div class=\"action-link-list\">\n\n                            <a href=\"#\" class=\"action-link\">C</a>\n                            <a href=\"#\" class=\"action-link\">O</a>\n                            <a href=\"#\" class=\"action-link\">D</a>\n                            <a href=\"#\" class=\"action-link\">E</a>\n                        </div>\n                    </article>\n\n                    <article>\n                        <h2 class=\"titre\">Source trafic par appareil</h2>\n                        <p class=\"tags\">\n                            <span class=\"tag-item\">statistiques</span> </p>\n                        <p class=\"descript\">lààààààààààààà\n                        </p>\n\n                        <a href=\"https://wearesocial.com/fr/\" class=\"link\" target=\"_blank\"></a>\n                        <div class=\"action-link-list\">\n\n                            <a href=\"#\" class=\"action-link\">C</a>\n                            <a href=\"#\" class=\"action-link\">O</a>\n                            <a href=\"#\" class=\"action-link\">D</a>\n                            <a href=\"#\" class=\"action-link\">E</a>\n                        </div>\n                    </article>\n\n                    <article>\n                        <h2 class=\"titre\">Statistiques du mois : users</h2>\n                        <p class=\"tags\">\n                            <span class=\"tag-item\">statistiques</span> </p>\n                        <p class=\"descript\">lààààààààààà\n                        </p>\n\n\n                        <a href=\"https://wearesocial.com/fr/\" class=\"link\" target=\"_blank\"></a>\n                        <div class=\"action-link-list\">\n\n                            <a href=\"#\" class=\"action-link\">C</a>\n                            <a href=\"#\" class=\"action-link\">O</a>\n                            <a href=\"#\" class=\"action-link\">D</a>\n                            <a href=\"#\" class=\"action-link\">E</a>\n                        </div>\n                    </article>\n\n                    <article>\n                        <h2 class=\"titre\">Recettes les plus consultées du mois</h2>\n                        <p class=\"tags\">\n                            <span class=\"tag-item\">statistiques</span> </p>\n                        <p class=\"descript\"> lààààààààààààà\n                        </p>\n\n                        <a href=\"https://wearesocial.com/fr/\" class=\"link\" target=\"_blank\"></a>\n                        <div class=\"action-link-list\">\n\n                            <a href=\"#\" class=\"action-link\">C</a>\n                            <a href=\"#\" class=\"action-link\">O</a>\n                            <a href=\"#\" class=\"action-link\">D</a>\n                            <a href=\"#\" class=\"action-link\">E</a>\n                        </div>\n                    </article>\n\n\n                    <article>\n                        <h2 class=\"titre\">Les meilleures recettes</h2>\n                        <p class=\"tags\">\n                            <span class=\"tag-item\">statistiques</span> </p>\n                        <p class=\"descript\">lààààààààààà\n                        </p>\n\n                        <a href=\"https://wearesocial.com/fr/\" class=\"link\" target=\"_blank\"></a>\n                        <div class=\"action-link-list\">\n\n                            <a href=\"#\" class=\"action-link\">C</a>\n                            <a href=\"#\" class=\"action-link\">O</a>\n                            <a href=\"#\" class=\"action-link\">D</a>\n                            <a href=\"#\" class=\"action-link\">E</a>\n                        </div>\n                    </article>\n\n                </section>\n            </section>\n        </div>\n    </div>\n</body>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecettesService, UnitesService} from '../../service';\nimport { UniteDetails } from '../../models';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-unite',\n  templateUrl: './unite.component.html',\n  styleUrls: ['./unite.component.scss']\n})\nexport class UniteComponent implements OnInit {\n\n  public unites$: Observable<UniteDetails[]>;\n  public unites: UniteDetails[];\n\n  public unite: UniteDetails = {\n    idUnite: null,\n    libelleUnite: ''\n  };\n\n  public filteredUnite$: Observable<UniteDetails[]>;\n  public filter: FormControl;\n  public filter$: Observable<string>;\n\n  constructor(private recettesService: RecettesService, private router: Router, private unitesService: UnitesService) {\n     // pour la recherche dynamique\n     this.unites$ = this.unitesService.getAllUnite();\n     this.filter = new FormControl('');\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n     // tslint:disable-next-line: deprecation\n     this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n       .pipe(map(([unites, filterString]) =>\n         unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllUnite() {\n\n    this.unites$ = this.unitesService.getAllUnite();\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n      .pipe(map(([unites, filterString]) =>\n        unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n\n  }\n\n  deleteUnite(idUnite: any) {\n    this.unitesService.deleteUnite(idUnite)\n      .subscribe(res => {\n        this.router.navigate(['/unite'], {\n          queryParams: {refresh: new Date().getTime()}\n       });\n        }, (err) => {\n          console.log(err);\n        }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n\n  updateUnite(unite: UniteDetails) {\n    this.unitesService.updateUnite(unite).subscribe((res: any) => {\n        window.location.reload();\n      }, (err: any) => {\n        console.error(err);\n      }\n    );\n  }\n\n  addUnite() {\n    this.unitesService.addUnite(this.unite);\n    window.location.reload();\n  }\n\n\n}\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside id=\"aside\" class=\"sidebar is-visible\">\n                    <div class=”sidebar-content”>\n                        <ul>\n                            <li><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li class=\"active\"><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li><a id=\"nav\" href=\"/handleMenu\">Gérer le menu</a></li>\n                            <li><a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a></li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n                            <h1>Unités</h1>\n\n                        </div>\n\n                        <div class='flex-container'>\n\n                            <div id=\"addUnite\">\n                                <h6 id=\"question \"> Ajouter une nouvelle unité </h6>\n                                <form (submit)=\"addUnite() \">\n                                    <input type=\"text \" class=\"form-control \" name=\"libelleUnite \" placeholder=\"libelle unité \" [(ngModel)]=\"unite.libelleUnite \">\n\n                                    <button id=\"btn\" class=\"btn btn-outline-info \" type=\"submit \">Valider</button>\n\n                                </form>\n                            </div>\n\n                            <div>\n                                <form class=\"form-inline my-2 my-lg-0\">\n                                    <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher une unité\" aria-label=\"Search\" [formControl]=\"filter\">\n                                </form>\n                                <table class=\"table col-md-12 mx-auto\" *ngFor=\"let unite of filteredUnite$ | async\">\n\n                                    <tr>\n                                        <td>\n\n                                            <form (submit)=\"updateUnite(unite)\">\n                                                <div class=\"form-row align-items-center\">\n                                                    <div class=\"col-auto\">\n                                                        <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"libelleUnite\" value={{unite.libelleUnite}} [(ngModel)]=\"unite.libelleUnite\">\n                                                    </div>\n\n                                                    <div class=\"col-auto\">\n                                                        <button id=\"btn\" type=\"submit\" class=\"btn btn-sm btn-warning\"><i class=\"fa fa-pencil\" ></i></button>\n\n\n                                                    </div>\n                                                    <div class=\"col-auto\">\n\n                                                        <button id=\"btn\" class=\"btn btn-sm btn-danger\" (click)=\"deleteUnite(unite.idUnite)\"><i class=\" fa fa-trash \"></i></button>\n\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserMdp } from '../../service';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-update-password',\n  templateUrl: './update-password.component.html',\n  styleUrls: ['./update-password.component.css']\n})\nexport class UpdatePasswordComponent implements OnInit {\n\n  credentials: UserMdp = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    mdp: '',\n    newmdp: '',\n    mdp2: '',\n    error: '',\n    success: ''\n  };\n\n  public updatePasswordForm: FormGroup;\n\n  constructor(private auth: AuthentificationService, private router: Router, private modalService: NgbModal,\n              private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initUpdatePasswordForm();\n  }\n\n  initUpdatePasswordForm() {\n    this.updatePasswordForm = this.formBuilder.group({\n      mdp: ['', Validators.required],\n      newmdp: ['', [Validators.required]],\n      mdp2: ['', Validators.required]\n    });\n  }\n\n  updatePassword() {\n\n    const formValue = this.updatePasswordForm.value;\n\n    this.credentials.mdp = formValue.mdp;\n    this.credentials.newmdp = formValue.newmdp;\n    this.credentials.mdp2 = formValue.mdp2;\n\n    this.initUpdatePasswordForm();\n\n    if (formValue.newmdp !== formValue.mdp2) {\n      alert('Les nouveaux mots de passe ne sont pas identiques.');\n      return;\n    }\n\n    this.auth.updatePassword(this.credentials).subscribe((res: any) => {\n      if (res.error === 'Mot de passe incorrect!') {\n        alert('L\\'ancien mot de passe n\\'est pas correct.');\n        return;\n      } else {\n        this.router.navigateByUrl('/profile');\n      }\n    }, (err: any) => {\n      console.log(err);\n    }\n    );\n  }\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form [formGroup]=\"updatePasswordForm\" (ngSubmit)=\"updatePassword()\">\n                <h1 class=\"h3 mb-3 font-weight-normal\">Modifier mon mot de passe</h1>\n                \n                <div class=\"form-group\">\n                    <label>Ancien mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp\" placeholder=\"****\" formControlName=\"mdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Nouveau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"newmdp\" placeholder=\"****\" formControlName=\"newmdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Confirmer le nouveaau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp2\" placeholder=\"****\" formControlName=\"mdp2\">\n                </div>\n                <div class=\"text-center\">\n                    <button class=\"btn btn-outline-info\" type=\"submit\">Enregistrer</button>\n                </div>\n                \n            </form>\n        </div>\n    </div>\n</div>\n</section>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthentificationService } from './authentification.service';\n\n@Injectable()\nexport class AdminAuthService implements CanActivate {\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate() {\n        if (!this.auth.isAdmin()) {\n            this.router.navigateByUrl('/');\n            return false;\n        }\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthentificationService } from './authentification.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    private token: string;\n\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate() {\n        if (!this.auth.isLoggedIn()) {\n            this.router.navigateByUrl('/');\n            return false;\n        }\n        return true;\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Observable, of } from \"rxjs\";\nimport { map, tap, catchError } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { ContactDetail } from \"../pages/contact/contact.component\";\nimport { UserProfile } from \"../models/user.model\";\n\n// login\nexport interface UserDetails {\n  pseudo: string;\n  email: string;\n  mdp: string;\n  admin: boolean;\n  emailConfirmed?: boolean;\n  abonneNews: boolean;\n  exp: number;\n  iat: number;\n}\n\ninterface TokenResponse {\n  token: string;\n  error: string;\n}\n\ninterface Response {\n  error: string;\n}\n\n// inscription\nexport interface TokenPayload {\n  pseudo: string;\n  email: string;\n  mdp: string;\n  mdp2: string;\n  admin: boolean;\n  abonneNews: boolean;\n  error: string;\n}\n\n// changement mdp\nexport interface UserMdp {\n  pseudo: string;\n  mdp: string;\n  newmdp: string;\n  mdp2: string;\n  error: string;\n  success: string;\n}\n\n@Injectable()\nexport class AuthentificationService {\n  private token: string;\n  private error: string;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  private saveToken(token: string): void {\n    localStorage.setItem(\"userToken\", token);\n    this.token = token;\n  }\n\n  private getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem(\"userToken\");\n    }\n    return this.token;\n  }\n\n  public getUserDetails(): UserDetails {\n    const token = this.getToken();\n    let payload;\n    if (token) {\n      payload = token.split(\".\")[1];\n      payload = window.atob(payload);\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n\n  public emailConfirmed(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.emailConfirmed;\n    } else {\n      return false;\n    }\n  }\n\n  public isAdmin(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.admin;\n    } else {\n      return false;\n    }\n  }\n\n  public register(user: TokenPayload): Observable<any> {\n    const base = this.http.post(\"/server/register\", user);\n\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if (data.token) {\n          this.saveToken(data.token);\n        }\n        return data;\n      })\n    );\n    return request;\n  }\n\n  public login(user: TokenPayload): Observable<any> {\n    const base = this.http.post(\"/server/login\", user);\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        // map permet de récupérer des données\n        if (data.token) {\n          this.saveToken(data.token);\n        }\n        return data;\n      })\n    );\n    return request;\n  }\n\n  public profile(): Observable<any> {\n    return this.http.get(\"/server/profile\", {\n      headers: { Authorization: `${this.getToken()}` },\n    });\n  }\n\n  public logout(): void {\n    this.token = \"\";\n    window.localStorage.removeItem(\"userToken\");\n    this.router.navigateByUrl(\"/\");\n  }\n\n  private handleError<T>(operation = \"operation\", result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  public updatePassword(user: UserMdp): Observable<any> {\n    const base = this.http.put(`/server/update-password/${user.pseudo}`, user);\n\n    return base.pipe(\n      map((data: Response) => {\n        return data;\n      })\n    );\n  }\n\n  public deleteProfile(pseudo: string): Observable<any> {\n    const url = `/server/delete-profile/${pseudo}`;\n    return this.http.delete<any>(url).pipe(\n      tap((_) => console.log(`deleted ${pseudo}`)),\n      catchError(this.handleError<any>(\"deleteProfile\"))\n    );\n  }\n\n  public updateProfile(user: UserProfile): Observable<any> {\n    const base = this.http.put(`/server/mon-profile/${user.pseudo}`, user);\n\n    return base.pipe(\n      tap((_) => console.log(`updated ${user.pseudo}`)),\n      catchError(this.handleError<any>(\"updateProfile\"))\n    );\n  }\n\n  public getAbonneNews(): any {\n    return this.http.get(`/server/abonneNews`);\n  }\n\n  public getAllEmail(): any {\n    return this.http.get(`/server/users/email`);\n  }\n\n  public getAllPseudo(): any {\n    return this.http.get(`/server/users/pseudo`);\n  }\n\n  public sentEmailToNewRecipe(to: any, idRecette: number): any {\n    return this.http.get(`/server/newRecipe/${to.pseudo}/${idRecette}`);\n  }\n\n  public requestReset(body): Observable<any> {\n    return this.http.post(`/server/req-reset-password`, body);\n  }\n\n  public newPassword(body): Observable<any> {\n    return this.http.post(`/server/new-password`, body);\n  }\n\n  public ValidPasswordToken(body): Observable<any> {\n    return this.http.post(`/server/valid-password-token`, body);\n  }\n\n  public sendEmailContact(infos: ContactDetail): any {\n    let params = new HttpParams();\n\n    params = params.append(`name`, infos.nameUser);\n    params = params.append(`email`, infos.emailUser);\n    params = params.append(`subject`, infos.subject);\n    params = params.append(`message`, infos.message);\n\n    return this.http.get(`/server/contact/send`, { params });\n  }\n\n  public getUser(pseudo: string): any {\n    return this.http.get(`/server/user/${pseudo}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CategoryDetails } from 'src/app/models';\nimport { map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  constructor(private http: HttpClient) { }\n\n  public getCategoryByRecette(idRecette: any): Observable<CategoryDetails[]> {\n    const base = this.http.get(`/server/category/recipe/${idRecette}`);\n    return base.pipe(map((data: CategoryDetails[]) => {\n      return data;\n    }));\n  }\n\n  public getAllCategory(): Observable<CategoryDetails[]> {\n    return this.http.get<any>(`/server/category`)\n      .pipe(map((data: CategoryDetails[]) => {\n        return data;\n      }));\n  }\n\n  public deleteCategory(id: any): Observable<any> {\n    const url = `/server/category/delete/${id}`;\n    return this.http.delete<any>(url).pipe(\n      tap(_ => console.log(`deleted ${id}`)),\n    );\n  }\n\n  public updateCategory(categorie: CategoryDetails): Observable<any> {\n    return this.http.put(`/server/category/update`, categorie)\n      .pipe(map((data: CategoryDetails[]) => {\n        return data;\n      }));\n  }\n\n  public addCategory(categorie: CategoryDetails): any {\n    this.http.post('/server/category/add', categorie).subscribe(res => {\n      {\n        return res;\n      }\n    });\n  }\n\n  public getRestCategory(idRecette: any): any {\n    return this.http.get<any>(`/server/category/rest/recipe/${idRecette}`)\n      .pipe(map((data: CategoryDetails[]) => {\n        return data;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CommentaireDetails } from 'src/app/models';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { AuthentificationService } from '../authentification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentairesService {\n\n  constructor(private http: HttpClient, private auth: AuthentificationService) { }\n\n  public addCommentaire(commentaire: CommentaireDetails): Observable<any> {\n    return this.http.post(`/server/commentaires/add`, commentaire)\n      .pipe(map((data: any) => {\n        return data;\n      }));\n  }\n\n  public addImageToCommentaire(commentaire: CommentaireDetails): Observable<any> {\n    return this.http.post<any>(`/server/image/commentaires/addImage`, commentaire)\n      .pipe(map((data: any) => {\n        return data;\n      }));\n  }\n\n  public modifyCommentaire(commentaire: CommentaireDetails): any {\n    this.http.post<any>(`/server/commentaires/update`, commentaire)\n      .subscribe((data: any) => {\n        return data;\n      });\n  }\n\n  public getCommentaireRecipe(id: any): Observable<any> {\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n    return this.http.get<any>(`/server/commentaires/recipe/${id}`)\n      .pipe(map((data: any) => {\n        data.forEach(element => {\n          this.http.get(`/server/image/commentaire/${element.idCommentaire}`).subscribe((data: any) => {\n            element.lienImage = data[0]?.lienImage;\n          });\n\n          const d = new Date(element.dateCommentaire);\n\n          element.dateCommentaire = d.toLocaleString('FR-fr', options);\n\n          this.auth.getUser(element.ecritPar).subscribe(data => {\n            element.admin = data.admin;\n          });\n          let element2 = element;\n          let bool = true;\n\n          while (bool) {\n            this.getReponseCommentaireRecipe(id, element.idCommentaire).subscribe(commentaire => {\n              element.children = commentaire;\n            });\n            if (element2.children) {\n              element2 = element2.children;\n            } else {\n              bool = false;\n            }\n\n          }\n        });\n        return data;\n      }));\n  }\n\n  public getReponseCommentaireRecipe(id: any, idCommentaire: any): Observable<any> {\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n    return this.http.get<any>(`/server/commentaires/recipe/${id}/reponse/${idCommentaire}`)\n      .pipe(map((commentaire: any) => {\n        commentaire.forEach(element => {\n          this.http.get(`/server/image/commentaire/${element.idCommentaire}`).subscribe((data: any) => {\n            element.lienImage = data[0]?.lienImage;\n          });\n\n          const d = new Date(element.dateCommentaire);\n\n          element.dateCommentaire = d.toLocaleString('FR-fr', options);\n\n          this.auth.getUser(element.ecritPar).subscribe(data => {\n            element.admin = data.admin;\n          });\n          this.getReponseCommentaireRecipe(id, element.idCommentaire).subscribe(commentaire => {\n            element.children = commentaire;\n          });\n        });\n        return commentaire;\n      }));\n  }\n\n  public deleteCommentaire(id: any): Observable<any> {\n    const url = `/server/commentaires/commentaire/${id}/delete`;\n    return this.http.delete<any>(url).pipe(\n      tap(_ => console.log(`deleted ${id}`)),\n    );\n  }\n\n  public getCommentaireUser(pseudo: any): Observable<any> {\n    return this.http.get<any>(`/server/commentaires/${pseudo}/mescommentaires`)\n      .pipe(map((data: any) => {\n        return data;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FavorisDetails, RecipeDetails } from 'src/app/models';\nimport { Observable } from 'rxjs';\nimport { IngredientsService } from '../ingredients/ingredients.service';\nimport { map } from 'rxjs/operators';\nimport { AuthentificationService } from '../authentification.service';\nimport { addTimes, addHours } from '../../utils/Utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FavorisService {\n\n  constructor(private http: HttpClient, private ingredientService: IngredientsService, private auth: AuthentificationService) { }\n\n  public addFavoris(newFavori: FavorisDetails): Observable<any> {\n    return this.http.post(`/server/favorites/add`, newFavori).pipe(res => {\n      return res;\n    });\n  }\n\n  public getFavoris(): Observable<RecipeDetails[]> {\n    const pseudo = this.auth.getUserDetails().pseudo;\n    const base = this.http.get(`/server/favorites/recipe/${pseudo}`);\n    return base.pipe(map((data: RecipeDetails[]) => {\n      data.forEach(element => {\n        this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n          element.lienImage = data[0]?.lienImage;\n        });\n        this.ingredientService.getIngredientsByIdRecette(element.idRecette).subscribe(data => {\n          element.ingredients = data;\n        });\n        element.globalTime = addHours(addTimes(element.tempsPreparation, element.tempsCuisson));\n      });\n      return data;\n    }));\n  }\n\n  public getFavorisByCategory(idCategorie: number): Observable<RecipeDetails[]> {\n    const pseudo = this.auth.getUserDetails().pseudo;\n    const base = this.http.get(`/server/favorites/recipe/${pseudo}/${idCategorie}`);\n    return base.pipe(map((data: RecipeDetails[]) => {\n      data.forEach(element => {\n        this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n          element.lienImage = data[0]?.lienImage;\n        });\n        this.ingredientService.getIngredientsByIdRecette(element.idRecette).subscribe(data => {\n          element.ingredients = data;\n        });\n        element.globalTime = addHours(addTimes(element.tempsPreparation, element.tempsCuisson));\n      });\n      return data;\n    }));\n  }\n\n  public deleteFavoris(id: any): Observable<any> {\n    const pseudo = this.auth.getUserDetails().pseudo;\n    const url = `/server/favorites/${pseudo}/delete/${id}`;\n    return this.http.delete<any>(url).pipe(res => {\n      return res;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImagesService {\n\n  constructor(private http: HttpClient) { }\n\n  public addImage(file: any): Observable<any> {\n    return this.http.post(`/server/image/uploads`, file).pipe(map((data: any) => {\n      return data;\n    }));\n  }\n\n  public getImage(id: number): any {\n    return this.http.get(`/server/image/${id}`).pipe(map((data: any) => {\n      return data;\n    }));\n  }\n\n  public addImageToRecipe(imageToModify: any): any {\n    this.http.post<any>(`/server/image/recipe/update/image`, imageToModify)\n      .subscribe((data: any) => {\n        return data;\n      });\n  }\n}\n","export * from './admin-auth.service';\nexport * from './auth-guard.service';\nexport * from './authentification.service';\nexport * from './recettes/recettes.service';\nexport * from './ingredients/ingredients.service';\nexport * from './categories/categories.service';\nexport * from './unites/unites.service';\nexport * from './commentaires/commentaires.service';\nexport * from './favoris/favoris.service';\nexport * from './images/images.service';\nexport * from './shoppingList/shopping-list.service';\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { QuantiteDetails, IngredientDetails } from 'src/app/models';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngredientsService {\n\n  constructor(private http: HttpClient) { }\n\n  public getIngredientsByIdRecette(id: any): any {\n    return this.http.get<any>('/server/recipe/' + id + '/ingredients');\n  }\n\n  public getUtiliserIngredientsByIdRecette(id: any): Observable<QuantiteDetails[]> {\n    const base = this.http.get('/server/recipe/' + id + '/utiliserIngredients');\n    const utiliserIngredients = base.pipe(map((data: QuantiteDetails[]) => {\n      return data;\n    }));\n    return utiliserIngredients;\n  }\n\n  public getIngredientById(idIngredient: any): Observable<IngredientDetails> {\n    const base = this.http.get('/server/ingredient/' + idIngredient);\n    return base.pipe(map((data: IngredientDetails) => {\n      return data;\n    }));\n  }\n\n  public getAllIngredients(): Observable<IngredientDetails[]> {\n    return this.http.get<any>(`/server/ingredient`)\n      .pipe(map((data: IngredientDetails[]) => {\n        return data;\n      }));\n  }\n\n  public getRestIngredients(idRecette: any): any {\n    return this.http.get<any>(`/server/ingredient/recipe/${idRecette}/rest`)\n      .pipe(map((data: IngredientDetails[]) => {\n        return data;\n      }));\n  }\n\n  public deleteIngredient(id: any): Observable<any> {\n    const url = `/server/ingredient/delete/${id}`;\n    return this.http.delete<any>(url).pipe(\n      tap(_ => console.log(`deleted ${id}`)),\n    );\n  }\n\n  public updateIngredient(ingredient: IngredientDetails): Observable<any> {\n    return this.http.put(`/server/ingredient/update`, ingredient)\n      .pipe(map((data: IngredientDetails[]) => {\n        return data;\n      }));\n  }\n\n  public addIngredient(ingredient: any): any {\n    this.http.post('/server/ingredient/add', ingredient).subscribe(res => {\n      {\n        return res;\n      }\n    });\n  }\n\n  public getRestOfIngredients(ingredients: number[]): any {\n    let params = new HttpParams();\n\n    ingredients.forEach((idIngredient: number) => {\n        params = params.append(`ingredients[]`, idIngredient.toString());\n    });\n    return this.http.get<any>(`/server/ingredient/rest`, { params })\n        .pipe(map((data: IngredientDetails[]) => {\n            return data;\n        }));\n}\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { Notification } from \"src/app/models\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NotificationService {\n  constructor(private http: HttpClient) {}\n\n  public addNotification(notif: Notification): Observable<any> {\n    return this.http.post(`/server/notifications/add`, notif).pipe(\n      map((data: any) => {\n        return data;\n      })\n    );\n  }\n\n  public getAllNotifs(): Observable<Notification[]> {\n    return this.http.get(`/server/notifications/allNotifs`).pipe(\n      map((data: Notification[]) => {\n        return data;\n      })\n    );\n  }\n\n  public getEnabledNotifs(): Observable<Notification[]> {\n    return this.http.get(`/server/notifications/notifs/enabled`).pipe(\n      map((data: Notification[]) => {\n        return data;\n      })\n    );\n  }\n\n  public updateNotif(idNotif): Observable<any> {\n    return this.http.put(`/server/notifications/update/` + idNotif, false).pipe(\n      map((data: any) => {\n        console.log(data);\n        return data;\n      })\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { map, tap } from \"rxjs/operators\";\nimport { AuthentificationService } from \"../authentification.service\";\nimport { addTimes, addHours } from \"../../utils/Utils\";\nimport {\n  CategoryDetails,\n  CreateRecipe,\n  IngredientDetails,\n  RecipeDetails,\n  Menu,\n  CommentaireDetails,\n} from \"../../models\";\nimport { CategoriesService } from \"../categories/categories.service\";\nimport { IngredientsService } from \"../ingredients/ingredients.service\";\nimport { ListRecipe } from \"src/app/models/listRecipe.model\";\n\n@Injectable()\nexport class RecettesService {\n  constructor(\n    private http: HttpClient,\n    private auth: AuthentificationService,\n    private ingredientService: IngredientsService,\n    private categoryService: CategoriesService\n  ) {}\n\n  public getAllRecipes(): Observable<RecipeDetails[]> {\n    const base = this.http.get(`/server/recipe/allRecipes`);\n    return base.pipe(\n      map((data: RecipeDetails[]) => {\n        data.forEach((element) => {\n          this.http\n            .get(`/server/image/${element.idRecette}`)\n            .subscribe((data: any) => {\n              element.lienImage = data[0]?.lienImage;\n            });\n          this.categoryService\n            .getCategoryByRecette(element.idRecette)\n            .subscribe((data: any) => {\n              data.forEach((categ) => {\n                if (categ?.libelleCategorie === \"Végétariennes\") {\n                  element.vege = true;\n                }\n              });\n              element.categories = data;\n            });\n        });\n        return data;\n      })\n    );\n  }\n\n  public getAllRecipesAsc(): Observable<RecipeDetails[]> {\n    const base = this.http.get(`/server/recipe/allRecipes/asc`);\n    return base.pipe(\n      map((data: RecipeDetails[]) => {\n        data.forEach((element) => {\n          this.http\n            .get(`/server/image/${element.idRecette}`)\n            .subscribe((data: any) => {\n              element.lienImage = data[0]?.lienImage;\n            });\n          this.categoryService\n            .getCategoryByRecette(element.idRecette)\n            .subscribe((data: any) => {\n              data.forEach((categ) => {\n                if (categ?.libelleCategorie === \"Végétariennes\") {\n                  element.vege = true;\n                }\n              });\n              element.categories = data;\n            });\n        });\n        return data;\n      })\n    );\n  }\n\n  public getAllRecipesAndIngredients(): Observable<RecipeDetails[]> {\n    const base = this.http.get(`/server/recipe/allRecipes`);\n    return base.pipe(\n      map((data: RecipeDetails[]) => {\n        data.forEach((element) => {\n          this.http\n            .get(`/server/image/${element.idRecette}`)\n            .subscribe((data: any) => {\n              element.lienImage = data[0]?.lienImage;\n            });\n\n          element.ingredients = [];\n          this.ingredientService\n            .getIngredientsByIdRecette(element.idRecette)\n            .subscribe((data) => {\n              element.ingredients = data;\n            });\n          element.globalTime = addHours(\n            addTimes(element.tempsPreparation, element.tempsCuisson)\n          );\n          this.categoryService\n            .getCategoryByRecette(element.idRecette)\n            .subscribe((data: any) => {\n              data.forEach((categ) => {\n                if (categ?.libelleCategorie === \"Végétariennes\") {\n                  element.vege = true;\n                }\n              });\n              element.categories = data;\n            });\n        });\n        return data;\n      })\n    );\n  }\n\n  public getRecipeById(id: any): Observable<any> {\n    return this.http.get<any>(\"/server/recipe/get/\" + id).pipe(\n      map((element: RecipeDetails) => {\n        this.http\n          .get(`/server/image/${element.idRecette}`)\n          .subscribe((data: any) => {\n            element.lienImage = data[0]?.lienImage;\n          });\n        this.categoryService\n          .getCategoryByRecette(element.idRecette)\n          .subscribe((data: any) => {\n            data.forEach((categ) => {\n              if (categ?.libelleCategorie === \"Végétariennes\") {\n                element.vege = true;\n              }\n            });\n            element.categories = data;\n          });\n        return element;\n      })\n    );\n  }\n\n  public getLatestReceipes(): Observable<RecipeDetails[]> {\n    const base = this.http.get(`/server/recipe/latestRecipes`);\n    return base.pipe(\n      map((data: RecipeDetails[]) => {\n        data.forEach((element) => {\n          this.http\n            .get(`/server/image/${element.idRecette}`)\n            .subscribe((data: any) => {\n              element.lienImage = data[0]?.lienImage;\n              element.globalTime = addHours(\n                addTimes(element.tempsPreparation, element.tempsCuisson)\n              );\n            });\n          this.categoryService\n            .getCategoryByRecette(element.idRecette)\n            .subscribe((data: any) => {\n              data.forEach((categ) => {\n                if (categ?.libelleCategorie === \"Végétariennes\") {\n                  element.vege = true;\n                }\n              });\n              element.categories = data;\n            });\n        });\n        return data;\n      })\n    );\n  }\n\n  public getMostPopularRecipes(): Observable<RecipeDetails[]> {\n    const base = this.http.get(`/server/recipe/mostPopularRecipes`);\n    return base.pipe(\n      map((data: RecipeDetails[]) => {\n        data.forEach((element) => {\n          this.http\n            .get(`/server/image/${element.idRecette}`)\n            .subscribe((data: any) => {\n              element.lienImage = data[0]?.lienImage;\n              element.globalTime = addHours(\n                addTimes(element.tempsPreparation, element.tempsCuisson)\n              );\n            });\n          this.categoryService\n            .getCategoryByRecette(element.idRecette)\n            .subscribe((data: any) => {\n              data.forEach((categ) => {\n                if (categ?.libelleCategorie === \"Végétariennes\") {\n                  element.vege = true;\n                }\n              });\n              element.categories = data;\n            });\n        });\n        return data;\n      })\n    );\n  }\n\n  public deleteRecipe(id: any): Observable<any> {\n    const url = `/server/recipe/delete-recipe/${id}`;\n    return this.http\n      .delete<any>(url)\n      .pipe(tap((_) => console.log(`deleted ${id}`)));\n  }\n\n  public getRecipeByCategory(idCategorie: any): Observable<RecipeDetails[]> {\n    const base = this.http.get(`/server/recipe/category/${idCategorie}`);\n    return base.pipe(\n      map((data: RecipeDetails[]) => {\n        data.forEach((element) => {\n          this.http\n            .get(`/server/image/${element.idRecette}`)\n            .subscribe((data: any) => {\n              element.lienImage = data[0]?.lienImage;\n            });\n          this.ingredientService\n            .getIngredientsByIdRecette(element.idRecette)\n            .subscribe((data) => {\n              element.ingredients = data;\n            });\n          element.globalTime = addHours(\n            addTimes(element.tempsCuisson, element.tempsPreparation)\n          );\n        });\n        return data;\n      })\n    );\n  }\n\n  public updateNbView(recette: RecipeDetails): Observable<any> {\n    return this.http.put<any>(\n      `/server/recipe/update-nbView/${recette.idRecette}`,\n      recette\n    );\n  }\n\n  public updateNbViewMenu(recette: RecipeDetails): Observable<any> {\n    return this.http.put<any>(\n      `/server/recipeList/update-nbView/${recette.idRecette}`,\n      recette\n    );\n  }\n\n  public updateRecipeIng(\n    recette: RecipeDetails,\n    ingredient: IngredientDetails\n  ): Observable<any> {\n    return this.http\n      .put(`/server/recipe/${recette.idRecette}/ingredient/update`, ingredient)\n      .pipe(\n        map((res) => {\n          return res;\n        })\n      );\n  }\n\n  public createRecipe(recipe: CreateRecipe): Observable<any> {\n    const res = this.http.post(\"/server/recipe/add-recipe\", recipe);\n    return res.pipe(\n      map((res) => {\n        return res;\n      })\n    );\n  }\n\n  public addIngredientsAndCategoryToNewRecipe(\n    recipe: CreateRecipe\n  ): Observable<any> {\n    const res = this.http.post(\n      \"/server/recipe/addIngredientAndCategorie\",\n      recipe\n    );\n    return res.pipe(\n      map((res) => {\n        return res;\n      })\n    );\n  }\n\n  public addRecipeCategory(\n    categorie: CategoryDetails,\n    recette: RecipeDetails\n  ): Observable<any> {\n    return this.http\n      .post(`/server/recipe/${recette.idRecette}/category/add`, categorie)\n      .pipe(\n        map((res) => {\n          return res;\n        })\n      );\n  }\n\n  public getCategory(id: any): any {\n    return this.http.get<any>(`/server/recipe/${id}/category`).pipe(\n      map((data: any) => {\n        return data;\n      })\n    );\n  }\n\n  public updateRecipeName(recette: RecipeDetails): Observable<any> {\n    return this.http.put(`/server/recipe/name/update`, recette).pipe(\n      map((data: RecipeDetails) => {\n        return data;\n      })\n    );\n  }\n\n  public updateSteps(recette: RecipeDetails): Observable<any> {\n    return this.http.put(`/server/recipe/step/update`, recette).pipe(\n      map((data: RecipeDetails) => {\n        return data;\n      })\n    );\n  }\n\n  public updateAstuce(recette: RecipeDetails): Observable<any> {\n    return this.http.put(`/server/recipe/astuce/update`, recette).pipe(\n      map((data: RecipeDetails) => {\n        return data;\n      })\n    );\n  }\n\n  public updateDescription(recette: RecipeDetails): Observable<any> {\n    return this.http.put(`/server/recipe/description/update`, recette).pipe(\n      map((data: RecipeDetails) => {\n        return data;\n      })\n    );\n  }\n\n  public updatePart(recette: RecipeDetails): Observable<any> {\n    return this.http.put(`/server/recipe/part/update`, recette).pipe(\n      map((data: RecipeDetails) => {\n        return data;\n      })\n    );\n  }\n\n  public updateTemps(recette: RecipeDetails): Observable<any> {\n    return this.http.put(`/server/recipe/temps/update`, recette).pipe(\n      map((data: RecipeDetails) => {\n        return data;\n      })\n    );\n  }\n\n  public deleteIngredientRecipe(\n    ingredient: IngredientDetails,\n    recette: RecipeDetails\n  ): Observable<any> {\n    const url = `/server/recipe/${recette.idRecette}/ingredient/${ingredient.idIngredient}/delete`;\n    return this.http\n      .delete<any>(url)\n      .pipe(\n        tap((_) =>\n          console.log(\n            `deleted ${ingredient.idIngredient} from recipe ${recette.idRecette}`\n          )\n        )\n      );\n  }\n\n  public addIngredientRecette(newIngredient: IngredientDetails): any {\n    this.http\n      .post(\n        `/server/recipe/${newIngredient.idRecette}/add/ingredient/${newIngredient.idIngredient}`,\n        newIngredient\n      )\n      .subscribe((res) => {\n        {\n          return res;\n        }\n      });\n  }\n\n  public deleteRecipeCategory(\n    categorie: CategoryDetails,\n    recette: RecipeDetails\n  ): Observable<any> {\n    const url = `/server/recipe/${recette.idRecette}/category/${categorie.idCategorie}/delete`;\n    return this.http\n      .delete<any>(url)\n      .pipe(\n        tap((_) =>\n          console.log(\n            `deleted ${categorie.idCategorie} from recipe ${recette.idRecette}`\n          )\n        )\n      );\n  }\n\n  public getMenu(): Observable<any> {\n    return this.http.get<any>(\"/server/menu/recipe\").pipe(\n      map((data: any) => {\n        return data;\n      })\n    );\n  }\n\n  public getAllRecipesForMenu(): Observable<RecipeDetails[]> {\n    const base = this.http.get(`/server/menu/allRecipes`);\n    return base.pipe(\n      map((data: RecipeDetails[]) => {\n        data.forEach((element) => {\n          this.http\n            .get(`/server/image/${element.idRecette}`)\n            .subscribe((data: any) => {\n              element.lienImage = data[0]?.lienImage;\n            });\n          this.categoryService\n            .getCategoryByRecette(element.idRecette)\n            .subscribe((data: any) => {\n              data.forEach((categ) => {\n                if (categ?.libelleCategorie === \"Végétariennes\") {\n                  element.vege = true;\n                }\n              });\n              element.categories = data;\n            });\n        });\n        return data;\n      })\n    );\n  }\n\n  public getPetitDej(): Observable<any> {\n    return this.http.get<any>(\"/server/menu/petitDej\").pipe(\n      map((element: any) => {\n        this.http\n          .get(`/server/image/${element[0].idRecette}`)\n          .subscribe((data: any) => {\n            element[0].lienImage = data[0]?.lienImage;\n          });\n        this.categoryService\n          .getCategoryByRecette(element[0].idRecette)\n          .subscribe((data: any) => {\n            data.forEach((categ) => {\n              if (categ?.libelleCategorie === \"Végétariennes\") {\n                element.vege = true;\n              }\n            });\n            element[0].categories = data;\n          });\n        return element[0];\n      })\n    );\n  }\n\n  public getRepas(): Observable<any> {\n    return this.http.get<any>(\"/server/menu/repas\").pipe(\n      map((element: any) => {\n        this.http\n          .get(`/server/image/${element[0].idRecette}`)\n          .subscribe((data: any) => {\n            element[0].lienImage = data[0]?.lienImage;\n          });\n        this.categoryService\n          .getCategoryByRecette(element[0].idRecette)\n          .subscribe((data: any) => {\n            data.forEach((categ) => {\n              if (categ?.libelleCategorie === \"Végétariennes\") {\n                element.vege = true;\n              }\n            });\n            element[0].categories = data;\n          });\n        return element[0];\n      })\n    );\n  }\n\n  public getDouceur(): Observable<any> {\n    return this.http.get<any>(\"/server/menu/douceur\").pipe(\n      map((element: any) => {\n        this.http\n          .get(`/server/image/${element[0].idRecette}`)\n          .subscribe((data: any) => {\n            element[0].lienImage = data[0]?.lienImage;\n          });\n        this.categoryService\n          .getCategoryByRecette(element[0].idRecette)\n          .subscribe((data: any) => {\n            data.forEach((categ) => {\n              if (categ?.libelleCategorie === \"Végétariennes\") {\n                element.vege = true;\n              }\n            });\n            element[0].categories = data;\n          });\n        return element[0];\n      })\n    );\n  }\n\n  public updatePetitDej(petitDej: RecipeDetails): Observable<any> {\n    console.log(petitDej);\n    return this.http.post<any>(\"/server/menu/petitDej/update\", petitDej).pipe(\n      map((element: any) => {\n        return element;\n      })\n    );\n  }\n\n  public updateRepas(repas: RecipeDetails): Observable<any> {\n    return this.http.post<any>(\"/server/menu/repas/update\", repas).pipe(\n      map((element: any) => {\n        return element;\n      })\n    );\n  }\n\n  public updateDouceur(douceur: RecipeDetails): Observable<any> {\n    return this.http.post<any>(\"/server/menu/douceur/update\", douceur).pipe(\n      map((element: any) => {\n        return element;\n      })\n    );\n  }\n\n  public getListRecipes(): Observable<ListRecipe[]> {\n    const base = this.http.get(\n      `/server/recipeList/${this.auth.getUserDetails().pseudo}`\n    );\n    return base.pipe(\n      map((data: ListRecipe[]) => {\n        console.log(data);\n        return data;\n      })\n    );\n  }\n\n  public getListRecipesOfAdmin(): Observable<ListRecipe[]> {\n    const base = this.http.get(`/server/recipeList/marine`);\n    return base.pipe(\n      map((data: ListRecipe[]) => {\n        return data;\n      })\n    );\n  }\n\n  public addRecipeToList(recipe: ListRecipe): Observable<any> {\n    return this.http.post(`/server/recipeList/add`, recipe).pipe(\n      map((res) => {\n        return res;\n      })\n    );\n  }\n\n  public deleteRecipeOfList(recipe: ListRecipe): Observable<any> {\n    return this.http.post(`/server/recipeList/delete`, recipe).pipe(\n      map((res) => {\n        return res;\n      })\n    );\n  }\n\n  public deleteAllRecipeOfList(): Observable<any> {\n    return this.http\n      .post(`/server/recipeList/delete/all`, this.auth.getUserDetails().pseudo)\n      .pipe(\n        map((res) => {\n          return res;\n        })\n      );\n  }\n\n  public changeStateOfRecipe(recipe: ListRecipe): Observable<any> {\n    recipe.complet = !recipe.complet;\n    return this.http.post(`/server/recipeList/update`, recipe).pipe(\n      map((res) => {\n        return res;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ListeCoursesDetails, IngredientDetails, ListCourses } from 'src/app/models';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { AuthentificationService } from '../authentification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingListService {\n\n  constructor(private http: HttpClient, private auth: AuthentificationService) { }\n\n  public addListeCourses(newListeCourses: ListeCoursesDetails) {\n    this.http.post(`/server/shoppingList/add`, newListeCourses).subscribe(res => {\n      {\n        return res;\n      }\n\n    });\n  }\n\n  public getListeCourses(): Observable<ListCourses[]> {\n    const pseudo = this.auth.getUserDetails().pseudo;\n    const base = this.http.get(`/server/shoppingList/${pseudo}`);\n    return base.pipe(map((data: ListCourses[]) => {\n      console.log(data);\n      return data;\n    }));\n\n  }\n\n  public getRestListeCourses(): Observable<ListCourses[]> {\n    const pseudo = this.auth.getUserDetails().pseudo;\n    const base = this.http.get(`/server/shoppingList/rest/${pseudo}`);\n    return base.pipe(map((data: ListCourses[]) => {\n      console.log(data);\n      return data;\n    }));\n  }\n\n  public addIngredientShoppingList(ingredient: ListCourses): Observable<any> {\n    return this.http.post(`/server/shoppingList/add/ingredient`, ingredient).pipe(map((res) => {\n      {\n        return res;\n      }\n    }));\n\n  }\n\n  public deleteListeCourse(id: any): Observable<any> {\n    const pseudo = this.auth.getUserDetails().pseudo;\n    const url = `/server/shoppingList/delete/${id}/${pseudo}`;\n    return this.http.delete<any>(url).pipe(\n      tap(_ => console.log(`deleted ${id}`)),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatistiquesService {\n\n  constructor(private http: HttpClient) { }\n\n  public getNbVuesTot(): any {\n    return this.http.get<any>(`/server/statistique/nbVuesTot`)\n      .pipe(map((data:any) => {\n        return data;\n        \n      }));\n  }\n\n  public getNbCommentairesTot(): any {\n    return this.http.get<any>(`/server/statistique/nbCommentairesTot`)\n    .pipe(map((data:any) => {\n      return data;\n    }));\n  }\n\n  public getNbUsers(): any {\n    return this.http.get<any>(`/server/statistique/nbUsers`)\n    .pipe(map((data:any) => {\n      return data;\n    }));\n  }\n\n  public getNbAbonnes(): any {\n    return this.http.get<any>(`/server/statistique/nbAbonnes`)\n    .pipe(map((data:any) => {\n      return data;\n    }));\n  }\n\n  public getUsers(): any{\n    return this.http.get<any>(`/server/statistique/users`)\n    .pipe(map((data:any) => {\n      return data;\n    }));\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\nimport { UniteDetails } from 'src/app/models';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnitesService {\n\n  constructor(private http: HttpClient) { }\n\n  public getAllUnite(): Observable<UniteDetails[]> {\n    return this.http.get<any>('/server/unite')\n      .pipe(map((data: UniteDetails[]) => {\n        return data;\n      }));\n  }\n\n  public deleteUnite(id: any): Observable<any> {\n    const url = `/server/unite/delete/${id}`;\n    return this.http.delete<any>(url).pipe(\n      tap(_ => console.log(`deleted ${id}`)),\n    );\n  }\n\n  public updateUnite(unite: UniteDetails): Observable<any> {\n    return this.http.put(`/server/unite/update`, unite)\n      .pipe(map((data: UniteDetails[]) => {\n        return data;\n      }));\n  }\n\n  public addUnite(unite: any): any {\n    this.http.post('/server/unite/add', unite).subscribe(res => {\n      {\n        return res;\n      }\n    });\n  }\n\n  public getUniteById(idUnite: any): Observable<UniteDetails> {\n    const base = this.http.get('/server/recipe/unite/' + idUnite);\n    return base.pipe(map((data: UniteDetails) => {\n        return data;\n    }));\n}\n}\n","//on met ici les fonctions qui vont servir à plusieurs endroits\n\nexport function roundDecimal(nombre, precision) {\n    var precision = precision || 2;\n    var tmp = Math.pow(10, precision);\n    return Math.round(nombre * tmp) / tmp;\n}\n\nexport function addTimes(startTime, endTime) {\n    var times = [0, 0, 0]\n    var max = times.length\n\n    var a = (startTime || '').split(':')\n    var b = (endTime || '').split(':')\n\n    // normalize time values\n    for (var i = 0; i < max; i++) {\n        a[i] = isNaN(parseInt(a[i])) ? 0 : parseInt(a[i])\n        b[i] = isNaN(parseInt(b[i])) ? 0 : parseInt(b[i])\n    }\n\n    // store time values\n    for (var i = 0; i < max; i++) {\n        times[i] = a[i] + b[i]\n    }\n\n    var hours = times[0]\n    var minutes = times[1]\n    var seconds = times[2]\n\n    if (seconds >= 60) {\n        var m = (seconds / 60) << 0\n        minutes += m\n        seconds -= 60 * m\n    }\n\n    if (minutes >= 60) {\n        var h = (minutes / 60) << 0\n        hours += h\n        minutes -= 60 * h\n    }\n\n    return ('0' + hours).slice(-2) + ':' + ('0' + minutes).slice(-2) + ':' + ('0' + seconds).slice(-2)\n}\n\nexport function addHours(time) {\n    let dateTime = new Date();\n    let temps = time.toString().split(':');\n    dateTime.setHours(parseInt(temps[0]));\n    dateTime.setMinutes(parseInt(temps[1]));\n    dateTime.setSeconds(parseInt(temps[2]));\n    if (dateTime.getHours() > 1) {\n        if (dateTime.getMinutes() > 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min\"\n            }\n        } else if (dateTime.getMinutes() == 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min\"\n            }\n        } else {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes.toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h\"\n            }\n        }\n    } else if (dateTime.getHours() == 1) {\n        if (dateTime.getMinutes() > 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min\"\n            }\n        } else if (dateTime.getMinutes() == 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min et \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min\"\n            }\n        } else {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h\"\n            }\n        }\n    } else {\n        if (dateTime.getMinutes() > 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString()\n            } else {\n                return dateTime.getMinutes().toString() + \" min\"\n            }\n        } else if (dateTime.getMinutes() == 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString()\n            } else {\n                return dateTime.getMinutes().toString() + \" min\"\n            }\n        } else {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return null\n            }\n        }\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}