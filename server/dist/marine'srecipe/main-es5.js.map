{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/accueil/accueil.component.ts","webpack:///src/app/accueil/accueil.component.html","webpack:///src/app/ajout-recette/ajout-recette.component.ts","webpack:///src/app/ajout-recette/ajout-recette.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/apropos/apropos.component.ts","webpack:///src/app/apropos/apropos.component.html","webpack:///src/app/categories/categories.component.ts","webpack:///src/app/categories/categories.component.html","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/gerer-les-recettes/gerer-les-recettes.component.ts","webpack:///src/app/gerer-les-recettes/gerer-les-recettes.component.html","webpack:///src/app/ingredients/ingredients.component.ts","webpack:///src/app/ingredients/ingredients.component.html","webpack:///src/app/inscrire/inscrire.component.ts","webpack:///src/app/inscrire/inscrire.component.html","webpack:///src/app/ma-liste-de-courses/ma-liste-de-courses.component.ts","webpack:///src/app/ma-liste-de-courses/ma-liste-de-courses.component.html","webpack:///src/app/mes-commentaires/mes-commentaires.component.ts","webpack:///src/app/mes-commentaires/mes-commentaires.component.html","webpack:///src/app/mes-recettes/mes-recettes.component.ts","webpack:///src/app/mes-recettes/mes-recettes.component.html","webpack:///src/app/modal-add-ingredient/modal-add-ingredient.component.ts","webpack:///src/app/modal-add-ingredient/modal-add-ingredient.component.html","webpack:///src/app/modifier-recette/modifier-recette.component.ts","webpack:///src/app/modifier-recette/modifier-recette.component.html","webpack:///src/app/mon-profile/mon-profile.component.ts","webpack:///src/app/mon-profile/mon-profile.component.html","webpack:///src/app/recette/recette.component.ts","webpack:///src/app/recette/recette.component.html","webpack:///src/app/recettes/recettes.component.ts","webpack:///src/app/recettes/recettes.component.html","webpack:///src/app/se-connecter/se-connecter.component.ts","webpack:///src/app/se-connecter/se-connecter.component.html","webpack:///src/app/service/admin-auth.service.ts","webpack:///src/app/service/auth-guard.service.ts","webpack:///src/app/service/authentification.service.ts","webpack:///src/app/service/recettes.service.ts","webpack:///src/app/unite/unite.component.ts","webpack:///src/app/unite/unite.component.html","webpack:///src/app/update-password/update-password.component.ts","webpack:///src/app/update-password/update-password.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccueilComponent","recetteService","router","getLatestReceipes","getMostPopularRecipes","subscribe","latestRecipes","err","status","console","log","mostPopularRecipes","recette","updateNbView","res","navigate","idRecette","selector","templateUrl","styleUrls","AjoutRecetteComponent","formBuilder","modalService","recipe","nomRecette","categories","ingredients","etapes","newIngredient","nomIngredient","dropdownList","selectedItems","getAllIngredients","getAllUnite","unites","getAllCategory","dropdownSettings","singleSelection","idField","textField","enableCheckAll","itemsShowLimit","allowSearchFilter","searchPlaceholderText","createIngredientForm","addIngredient","refreshIngredients","setInterval","ingredientForm","value","createRecipe","addIngredientsAndCategoryToNewRecipe","navigateByUrl","recipeForm","group","array","fg","Ingredient","ingFormArray","push","content","open","ariaLabelledBy","result","get","idIngredient","quantite","idUnite","routes","AppRoutingModule","forRoot","imports","auth","AppComponent","path","component","canActivate","AppModule","declarations","providers","bootstrap","AProposComponent","CategoriesComponent","recettesService","categorie","idCategorie","libelleCategorie","deleteCategory","queryParams","refresh","Date","getTime","window","location","reload","updateCategory","error","addCategory","ContactComponent","GererLesRecettesComponent","recettes$","getAllRecipes","filter","filter$","valueChanges","pipe","filteredRecipe$","recipes","filterString","toLowerCase","indexOf","deleteRecipe","IngredientsComponent","ingredient","qte","libelleUnite","ingredients$","filteredIngredient$","deleteIngredient","updateIngredient","InscrireComponent","credentials","pseudo","email","mdp","mdp2","admin","abonneNews","initForm","userForm","required","formValue","alert","register","MaListeDeCoursesComponent","ingredientToDelete","getUserDetails","getListeCourses","deleteListeCourse","MesCommentairesComponent","MesRecettesComponent","getFavoris","getFavorisByCategory","deleteFavoris","ModalAddIngredientComponent","ModifierRecetteComponent","route","parseInt","snapshot","paramMap","getRecipeById","getIngredientsByIdRecette","getRestIngredients","allIngredients","allUnites","getRestCategory","allCategories","getCategory","refreshCategory","refreshCategory2","updateRecipeName","updateSteps","updateRecipeIng","deleteIngredientRececipe","deleteRecipeCategory","addRecipeCategory","addIngredientRecette","MonProfileComponent","success","profile","user","params","updateProfile","logout","deleteProfile","RecetteComponent","newFavori","newListeCourses","listIngredients","getUtiliserIngredientsByIdRecette","qtes","getUniteById","unite","addFavoris","addListeCourses","RecettesComponent","getRecipeByCategory","SeConnecterComponent","loginForm","login","AdminAuthService","isAdmin","AuthGuardService","isLoggedIn","AuthentificationService","http","token","localStorage","setItem","getItem","getToken","payload","split","atob","JSON","parse","exp","now","base","post","request","data","saveToken","headers","Authorization","removeItem","operation","put","url","delete","_","handleError","RecettesService","utiliserIngredients","UniteComponent","unites$","filteredUnite$","deleteUnite","updateUnite","addUnite","UpdatePasswordComponent","newmdp","updatePassword","queryParamsHandling","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RecipeDetails, RecettesService } from '../service/recettes.service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.css']\n})\nexport class AccueilComponent implements OnInit {\n\n  public latestRecipes: RecipeDetails[]\n  public mostPopularRecipes: RecipeDetails[]\n\n  constructor(private recetteService: RecettesService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getLatestReceipes()\n    this.getMostPopularRecipes()\n  }\n\n  getLatestReceipes() {\n\n    this.recetteService.getLatestReceipes().subscribe(\n      (latestRecipes: RecipeDetails[]) => {\n        this.latestRecipes = latestRecipes\n    },err => {\n      if(err instanceof HttpErrorResponse){\n        if(err.status === 402) {\n          console.log(\"Il n'y a pas encore de recettes.\")\n        }\n      }\n    })\n  }\n\n  getMostPopularRecipes() {\n\n    this.recetteService.getMostPopularRecipes().subscribe(\n      (mostPopularRecipes: RecipeDetails[]) => {\n        this.mostPopularRecipes = mostPopularRecipes\n    },err => {\n      if(err instanceof HttpErrorResponse){\n        if(err.status === 402) {\n          console.log(\"Il n'y a pas encore de recettes.\")\n        }\n      }\n    })\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        console.log(res)\n        this.router.navigate(['/recipe', recette.idRecette])\n      }, err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 402) {\n          console.log(\"Cette recette n'existe pas !\")\n        }\n      }\n    })\n  }\n\n}\n","<div class=\"media\">\n    <img src=\"../../assets/img/AroundMyWorld.jpeg\" class=\"img-fluid\" alt=\"Image Around my world, eat good feel good\">\n</div>\n\n<h5>Les plus vues</h5>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of this.mostPopularRecipes\"> <!--Pour chaque recette on représente sa carte-->\n            <div class=\"card h-100\">\n                <img class=\"card-img-top img-fluid\" src=\"//via.placeholder.com/350x150\" alt=\"Photo de la recette\"><!--mettre image ici-->\n                <div class=\"card-body\">\n                    <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                    <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                    <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                </div>\n                <div class=\"card-footer text-center bg-white\">\n                    <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                    \n            </div>\n        </div>\n    </div>\n</div>\n\n\n<h5>Les Nouveautés</h5>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of this.latestRecipes\"> <!--Pour chaque recette on représente sa carte-->\n            <div class=\"card h-100\">\n                <img class=\"card-img-top img-fluid\" src=\"//via.placeholder.com/350x150\" alt=\"Photo de la recette\"><!--mettre image ici-->\n                <div class=\"card-body\">\n                    <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                    <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                    <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                </div>\n                <div class=\"card-footer text-center bg-white\">\n                    <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                    \n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CategoryDetails, IngredientDetails, UniteDetails, RecettesService } from '../service/recettes.service';\nimport { FormGroup, FormArray, Validator, FormBuilder } from '@angular/forms';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'; //la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\n\n@Component({\n  selector: 'app-ajout-recette',\n  templateUrl: './ajout-recette.component.html',\n  styleUrls: ['./ajout-recette.component.css']\n})\nexport class AjoutRecetteComponent implements OnInit {\n\n  recipe: CreateRecipe = {\n    idRecette: null,\n    nomRecette: '',\n    categories: null,\n    ingredients: null,\n    etapes: ''\n\n  }\n\n  public ingredients: IngredientDetails[]\n  public unites: UniteDetails[]\n  public categories: CategoryDetails[]\n\n  public recipeForm: FormGroup\n  public ingredientForm: FormGroup\n\n  public newIngredient: IngredientDetails = {\n    nomIngredient: ''\n  }\n\n  //pour multiple select\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings: IDropdownSettings;\n\n  constructor(private recetteService: RecettesService, private formBuilder: FormBuilder, private router: Router, private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n    //on récupère tous les ingrédients, unités, catégories pour les réponses possibles à notre formulaire\n    this.recetteService.getAllIngredients().subscribe(\n      ingredients => {\n        this.ingredients = ingredients\n      }\n    )\n\n    this.recetteService.getAllUnite().subscribe(\n      unites => {\n        this.unites = unites\n      }\n    )\n\n    this.recetteService.getAllCategory().subscribe(\n      categories => {\n        this.categories = categories\n      }\n    )\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'idCategorie',\n      textField: 'libelleCategorie',\n      enableCheckAll: false,\n      itemsShowLimit: 3,\n      allowSearchFilter: true,\n      searchPlaceholderText: \"Rechercher\"\n    };\n\n    this.createIngredientForm()\n\n    this.addIngredient()\n\n    this.refreshIngredients()\n  }\n\n  //on rafraitchit la liste des ingrédients et pas la page grâce à un timer toutes les 2 secondes\n  refreshIngredients(): void {\n    setInterval(() => {\n      this.recetteService.getAllIngredients().subscribe(\n        ingredients => {\n          this.ingredients = ingredients\n        }\n      )\n    }, 2000)\n  }\n\n  createRecipe() {\n    this.recipe.ingredients = this.ingredientForm.value //je récupère les info sur l'ingrédient\n    this.recipe.categories = this.selectedItems\n    this.recetteService.createRecipe(this.recipe).subscribe(res => {\n      this.recipe.idRecette = res[0] // je récupère l'id de l'adresse que je viens de créer\n      this.recetteService.addIngredientsAndCategoryToNewRecipe(this.recipe).subscribe(res => {\n       \n      })\n    })\n    //this.router.navigate(['/recipe/'], { queryParams: { id: this.recipe.idRecette } })\n    this.router.navigateByUrl('allRecipes')\n  }\n\n\n  createRecipeForm() {\n    this.recipeForm = this.formBuilder.group({\n\n    })\n  }\n\n  /******  création formulaire pour ajouter autant de lignes ingrédient (qté, nom, unite) qu'on veut *****/\n  //création initiale formulaire ingredients\n  createIngredientForm() {\n    this.ingredientForm = this.formBuilder.group({\n      ingredients: this.formBuilder.array([])\n    })\n  }\n\n  get ingFormArray(): FormArray {\n    return this.ingredientForm.get(\"ingredients\") as FormArray\n  }\n\n  //pour ajouter un ingrédient\n  addIngredient() {\n    let fg = this.formBuilder.group(new Ingredient())\n    this.ingFormArray.push(fg)\n  }\n  /*****************************/\n\n  //récupérer le nom du new ingrédient et l'enregistrer dans la bd\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.nomIngredient = result\n        this.recetteService.addIngredient(this.newIngredient)\n        //window.location.reload() ?????? voir car si on fait ça on perd tout les champs du questionnaire et sinon on a pas le new ingredient dans les choix -> utiliser cookie?\n      })\n  }\n\n}\nexport class Ingredient {\n  idIngredient = '';\n  quantite = '';\n  idUnite = '';\n}\n\n\nexport interface CreateRecipe {\n  idRecette: number\n  nomRecette: string\n  categories: any[]\n  ingredients: any[]\n  etapes: string\n}","<script>\n    $(document).ready(function () {\n        $('select').formSelect();\n        $('select.select_all').siblings('ul').prepend('<li id=sm_select_all><span>Select All</span></li>');\n        $('li#sm_select_all').on('click', function () {\n            var jq_elem = $(this),\n                jq_elem_span = jq_elem.find('span'),\n                select_all = jq_elem_span.text() == 'Select All',\n                set_text = select_all ? 'Select None' : 'Select All';\n            jq_elem_span.text(set_text);\n            jq_elem.siblings('li').filter(function () {\n                return $(this).find('input').prop('checked') != select_all;\n            }).click();\n        });\n    })\n</script>\n\n<div id=\"header\">\n    <h2>Ajout d'une nouvelle recette</h2>\n</div>\n\n\n<form (submit)=\"createRecipe()\">\n\n    <div id=\"conteneur\">\n        <div class=\"element 1 text-center col-md-6\">\n            <label for=\"validationTooltip05\">Nom de la recette</label>\n            <input type=\"text\" #nomRecette=\"ngModel\" class=\"form-control\" id=\"validationTooltip05\"\n                [(ngModel)]=\"recipe.nomRecette\" [ngModelOptions]=\"{standalone: true}\" required>\n            <div class=\"invalid-tooltip\">\n                Rentrez un nom correcte.\n            </div>\n        </div>\n\n        <div class=\"element 2 custom-file col-md-6\">\n            <input type=\"file\" class=\"custom-file-input\" id=\"validatedCustomFile\">\n            <label class=\"custom-file-label\" for=\"validatedCustomFile\">Choisir une image...</label>\n            <!--A FAIRE-->\n        </div>\n\n        <div class=\"element 3 card border-secondary col-md-6\">\n            <div class=\"card-header\">Catégorie</div>\n            <br>\n            <form>\n                <div id=\"ingrForm\" class=\"form-row\">\n                    <div class=\"col-md-4 mb-4\">\n                        <ng-multiselect-dropdown [data]=\"categories\" placeholder=\"sélectionner\" \n                            [(ngModel)]=\"selectedItems\" [settings]=\"dropdownSettings\" [ngModelOptions]=\"{standalone: true}\">\n                        </ng-multiselect-dropdown>\n                        <div class=\"invalid-tooltip\">\n                            Selectionnez une catégorie.\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n        <div class=\"element 4 card border-secondary col-md-6\">\n            <div class=\"card-header\">Ingrédients</div>\n            <form [formGroup]=\"ingredientForm\">\n                <!--formulaire ingrédients-->\n                <div formArrayName=\"ingredients\">\n                    <div *ngFor=\"let ing of ingFormArray.controls; let idx = index\" [formGroupName]=\"idx\"\n                        class=\"ingredient\">\n                        <!--idx = indexe d'une ligne ingrédient du formulaire-->\n                        <div id=\"ingrForm\" class=\"form-row\">\n                            <div class=\"col-md-3 mb-3\">\n                                <label for=\"validationTooltip04\">Ingrédient</label>\n                                <select class=\"custom-select\" id=\"validationTooltip04\" formControlName=\"idIngredient\"\n                                    required>\n                                    <option *ngFor=\"let ingredient of ingredients\" [ngValue]=\"ingredient.idIngredient\">\n                                        {{ingredient.nomIngredient}}</option>\n                                </select>\n                                <div class=\"invalid-tooltip\">\n                                    Selectionnez un ingrédient.\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-3 mb-3\">\n                                <label for=\"validationTooltip05\">Quantité</label>\n                                <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\"\n                                    formControlName=\"quantite\" required>\n                                <div class=\"invalid-tooltip\">\n                                    Rentrez une quantité correcte.\n                                    <!--Vérifier que c'est pas négatif ou nulle-->\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-3 mb-3\">\n                                <label for=\"validationTooltip04\">Unité</label>\n                                <select class=\"custom-select\" id=\"validationTooltip04\" formControlName=\"idUnite\"\n                                    required>\n                                    <option *ngFor=\"let unite of unites\" [ngValue]=\"unite.idUnite\">\n                                        {{unite.libelleUnite}}\n                                    </option>\n                                </select>\n                                <div class=\"invalid-tooltip\">\n                                    Selectionnez une unité.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"buttonIngredient\" class=\"form-row\">\n                    <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"addIngredient()\">Ajouter un nouvel ingrédient</button>\n                        <ng-template #content let-modal> <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                            <div class = \"modal-header\">\n                                <h4 class=\"modal-title\"></h4>\n                            </div>\n                            <div class=\"modal-body\">\n                                <form>\n                                    <div class=\"form-group\">\n                                        <label for=\"nomIngredient\"> Nom de l'ingrédient </label>\n                                        <div class=\"input-group\">\n                                            <input id=\"nomIngredient\" class=\"form-control\" placeholder=\"Cacahuète\" \n                                            #nomIngredient=\"ngModel\" [(ngModel)]=\"newIngredient.nomIngredient\"\n                                            [ngModelOptions]=\"{standalone: true}\">\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button tyoe=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close(newIngredient.nomIngredient)\">Ajouter</button>\n                            </div>\n                        </ng-template>\n                        \n                        <button class=\"btn btn-outline-primary\" (click)=\"open(content)\">Créer un nouvel ingrédient</button>\n                        <!--on appelle le modal-->\n                </div>\n\n            </form>\n            <!--fin du formulaire ingrédients-->\n\n        </div>\n        <div class=\"element 5 card border-secondary col-md-6\">\n            <div class=\"card-header\">Préparation</div>\n            <div class=\"card-body\">\n                <textarea class=\"form-control\" #etapes=\"ngModel\" id=\"exampleFormControlTextarea1\" rows=\"8\"\n                    [(ngModel)]=\"recipe.etapes\" [ngModelOptions]=\"{standalone: true}\"></textarea>\n            </div>\n        </div>\n    </div>\n    <div class=\"col text-center\">\n        <button id=\"validateButton\" [disabled]=\"ingredientForm.invalid\" type=\"submit\"\n            class=\"col-ld-6 btn btn-outline-success\">Valider</button>\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthentificationService } from './service/authentification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(public auth: AuthentificationService){ }\n}\n","<script>\n//pour que la navbar responsive se referme lorsqu'on sélectionne un ongle\n$(document).on('click','.navbar-collapse.show',function(e) {\n  $(this).collapse('hide');\n});\n</script>\n\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\"  role=\"navigation\">\n  <button class=\"navbar-toggler\" \n  type=\"button\"\n  data-toggle=\"collapse\"\n  data-target=\"#navbarNavDropdown\"\n  aria-controls=\"navbarNavDropdown\"\n  aria-expanded=\"false\"\n  aria-label=\"Toogle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n\n  </button>\n  <img src=\"../assets/img/logo.jpeg\" class=\"rounded float-left\" alt=\"logo\" id=\"logo\">\n  <div class=\"collapse navbar-collapse justify-content-md-center\"\n    id=\"navbarNavDropdown\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/\">Accueil </a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/allRecipes\">Recettes</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/aboutMe\">A propos</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/contact\">Contact</a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/login\">Se connecter</a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/register\">S'inscrire</a>\n      </li>\n\n      <li class=\"nav-item dropdown\" *ngIf=\"auth.isLoggedIn()\">\n          <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            {{auth.getUserDetails()?.pseudo}} \n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n            <a class=\"dropdown-item\" routerLink=\"/profile\">Mon profil</a>\n            <a class=\"dropdown-item\" routerLink=\"/favorites\">Mes recettes ♥</a>\n            <a class=\"dropdown-item\" routerLink=\"/shoppingList\">Ma liste de course</a>\n            <a class=\"dropdown-item\" routerLink=\"/comment\">Mes commentaires</a>\n            <a class=\"dropdown-item\" *ngIf=\"auth.isAdmin()\" routerLink=\"/handleRecipes\" >Gerer les recettes</a>\n            <a class=\"dropdown-item\" routerLink=\"\" (click)=\"auth.logout()\">Deconnexion</a>\n          </div>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n\n\n\n\n<!--footer\n<footer>\n<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n\n\n\n\n    \n    <div class=\"instagram\"><a href=\"https://www.instagram.com/marineteroitin/?hl=fr\"><i class=\"fa fa-instagram fa-2x\" aria-hidden=\"true\"></i></a></div>\n  </footer>\n  -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { RouterModule, Routes } from '@angular/router'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { InscrireComponent } from './inscrire/inscrire.component'\nimport { SeConnecterComponent } from './se-connecter/se-connecter.component'\nimport { AccueilComponent } from './accueil/accueil.component'\nimport { AuthentificationService } from './service/authentification.service'\nimport { AuthGuardService } from './service/auth-guard.service';\nimport { ContactComponent } from './contact/contact.component';\nimport { GererLesRecettesComponent } from './gerer-les-recettes/gerer-les-recettes.component';\nimport { MaListeDeCoursesComponent } from './ma-liste-de-courses/ma-liste-de-courses.component';\nimport { MesCommentairesComponent } from './mes-commentaires/mes-commentaires.component';\nimport { MesRecettesComponent } from './mes-recettes/mes-recettes.component';\nimport { MonProfileComponent } from './mon-profile/mon-profile.component';\nimport { RecettesComponent } from './recettes/recettes.component';\nimport { UpdatePasswordComponent } from './update-password/update-password.component';\nimport { AProposComponent } from './apropos/apropos.component';\nimport { RecettesService } from './service/recettes.service';\nimport { RecetteComponent } from './recette/recette.component';\nimport { IngredientsComponent } from './ingredients/ingredients.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { UniteComponent } from './unite/unite.component';\nimport { AjoutRecetteComponent } from './ajout-recette/ajout-recette.component';\nimport { ModalAddIngredientComponent } from './modal-add-ingredient/modal-add-ingredient.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { ModifierRecetteComponent } from './modifier-recette/modifier-recette.component';\nimport { AdminAuthService } from './service/admin-auth.service';\n\n\nconst routes: Routes = [\n  { path: '', component: AccueilComponent },\n  { path: 'login', component: SeConnecterComponent },\n  { path: 'register', component: InscrireComponent },\n  { path: 'profile', component: MonProfileComponent, canActivate: [AuthGuardService] },\n  { path: 'update-password', component: UpdatePasswordComponent, canActivate: [AuthGuardService] },\n  { path: 'aboutMe', component: AProposComponent },\n  { path: 'allRecipes', component: RecettesComponent },\n  { path: 'recipe/:id', component: RecetteComponent },\n  { path: 'handleRecipes', component: GererLesRecettesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'category', component: CategoriesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'ingredient', component: IngredientsComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'add-recipe', component: AjoutRecetteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'unite', component: UniteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'contact', component: ContactComponent},\n  { path: 'shoppingList', component: MaListeDeCoursesComponent, canActivate: [AuthGuardService] },\n  { path: 'comment', component: MesCommentairesComponent, canActivate: [AuthGuardService] },\n  { path: 'favorites', component: MesRecettesComponent, canActivate: [AuthGuardService] },\n  { path: 'updateRecipe/:id', component: ModifierRecetteComponent, canActivate: [AdminAuthService, AuthGuardService] }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccueilComponent,\n    MonProfileComponent,\n    InscrireComponent,\n    SeConnecterComponent,\n    ContactComponent,\n    GererLesRecettesComponent,\n    MaListeDeCoursesComponent,\n    MesCommentairesComponent,\n    MesRecettesComponent,\n    RecettesComponent,\n    UpdatePasswordComponent,\n    RecetteComponent,\n    IngredientsComponent,\n    CategoriesComponent,\n    UniteComponent,\n    AjoutRecetteComponent,\n    ModalAddIngredientComponent,\n    ModifierRecetteComponent\n  ],\n  imports: [\n    NgMultiSelectDropDownModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [AuthGuardService, AuthentificationService, RecettesService, AdminAuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-apropos',\n  templateUrl: './apropos.component.html',\n  styleUrls: ['./apropos.component.css']\n})\nexport class AProposComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n   <h1 class=\"mt-5\">A propos</h1>\n   <div id=\"conteneur\">\n     <div class=\"element 1 mb-3 col-lg-6 col-md-6 col-sm-6 p-3\">\n        <img src=\"../../assets/img/me.jpeg\" class=\"img-fluid\" width=\"auto\" height=\"auto\" alt=\"photo de l'auteur du site.\">\n      </div>\n      <div class=\"element 2 mb-3 col-lg-6 col-md-6 col-sm-6\">\n        <div id=\"conteneur1\">\n        <pre id=\"c1\" class=\"mb-0\">\n          Je m'appelle Marine.\n          J'ai 21 printemps, et j'étudie dans une école d'ingénieur. \n          Depuis mon plus jeune âge, j'adore cuisiner. \n          J'ai créé ce site afin de partager les recettes que j'aime réaliser au quotidien.\n    </pre>\n    <pre id=\"c2\" class=\"mb-0\">\n          Vous avez accès à toutes les recettes sans être connecté !\n\n          Créer un compte vous permettra de mettre des recettes en favoris et de les retrouver plus facilement.\n          Vous pourrez aussi créer une liste de course directement à partir des recettes. \n          Si vous le souhaitez, des notifications par mail peuvent vous avertir de l'arrivée d'une nouvelle recette afin de ne rien rater.\n        </pre>\n        </div>\n      </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CategoryDetails, RecettesService} from '../service/recettes.service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\nimport { ResourceLoader } from '@angular/compiler';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  public categories: CategoryDetails[] \n\n  public categorie: CategoryDetails = {\n    idCategorie: null,\n    libelleCategorie: ''\n  }\n   \n\n  constructor(private recettesService: RecettesService, private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.recettesService.getAllCategory().subscribe(\n      categories => {\n        this.categories = categories\n      }\n    )\n  }\n\n  deleteCategory(idCategorie: any) {\n    this.recettesService.deleteCategory(idCategorie)\n      .subscribe(res => {\n        this.router.navigate(['/category'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateCategory(categorie: CategoryDetails){\n    this.recettesService.updateCategory(categorie).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addCategory(){\n    this.recettesService.addCategory(this.categorie)\n    window.location.reload()\n  }\n}\n\n","\n<div id=\"header\">\n    <h1>Catégories</h1>\n</div>  \n\n\n<div class='flex-container'>\n  <div>\n    <table class=\"table col-md-12 mx-auto\" *ngFor=\"let categorie of categories\">\n    \n        <tr>\n            <td>\n              <form (submit)=\"updateCategory(categorie)\">\n                <div class=\"form-row align-items-center\">\n                  <div class=\"col-auto\">\n              <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\"  value= {{categorie.libelleCategorie}}\n                  [(ngModel)]=\"categorie.libelleCategorie\">\n            </div>\n            <div class=\"col-auto\">\n              <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n            </div>\n            <div class=\"col-auto\">\n              <button id=\"btn\" type=\"submit\" class=\"btn btn-outline-danger \" (click)=\"deleteCategory(categorie.idCategorie)\" >Supprimer</button>\n              </div>\n              </div>\n              </form>\n            </td>\n          </tr> \n    </table>\n  </div>\n  <div >\n    <h6 id=\"question\" > Ajouter une nouvelle catégorie </h6>\n    <form (submit)=\"addCategory()\">\n      <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\"  placeholder=\"nom catégorie\"\n                        [(ngModel)]=\"categorie.libelleCategorie\">\n\n      <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n      \n      </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1> Cette fonctionnalité n'est pas encore disponible</h1>\n<!-- test ajout photo\n<div class=\"container col-lg-4 col-md-4 col-sm-12 col-xs-12\">\n    <form method=\"post\" [routerLink]=\"['/recipe', recette.idRecette]\"action=\"/upload\" enctype=\"multipart/form-data\">\n\n        <div class=\"form-group\">\n            <label for=\"photo_produit\">Photo</label> :\n            <input type=\"file\" name=\"photo_produit\" multiple>\n        </div>\n\n        <div class=\"form-group text-center\">\n            <input type=\"submit\" class=\"btn btn-primary btn-dr\" value=\"Créer le produit\">\n        </div>\n    </form>\n</div>\n<br>\n-->","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl, Form } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails } from '../service/recettes.service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\nimport { ResourceLoader } from '@angular/compiler';\n\n@Component({\n  selector: 'app-gerer-les-recettes',\n  templateUrl: './gerer-les-recettes.component.html',\n  styleUrls: ['./gerer-les-recettes.component.css']\n})\nexport class GererLesRecettesComponent implements OnInit {\n\n  public recette: RecipeDetails\n  public recettes$: Observable<RecipeDetails[]>\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recettesService: RecettesService, private router: Router) { \n    //pour la recherche dynamique\n    this.recettes$ = this.recettesService.getAllRecipes()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n    \n  }\n  \n  deleteRecipe(idRecette: any) {\n    this.recettesService.deleteRecipe(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/handleRecipes'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n  \n\n}\n\n","<div id=\"titre\">\n\t<h1>Gerer les recettes</h1>\n</div>\n\n\n<ul id=\"menu\" class=\"nav justify-content-center\">\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/ingredient']\">Gérer les ingrédients</a>\n\t</li>\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/category']\">Gérer les catégories</a>\n\t</li>\n\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/unite']\">Gérer les unités</a>\n\t</li>\n\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/add-recipe']\">Créer une nouvelle recette</a>\n\t</li>\n\n\t<li>\n\t\t<form class=\"form-inline my-2 my-lg-0\">\n\t\t\t<input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\"\n\t\t\t\t[formControl]=\"filter\">\n\t\t</form>\n\t</li>\n</ul>\n\n\n<div id=\"titre\">\n\t<h3>Recettes publiées</h3>\n</div>\n\n\n\n<div id=\"container\" class=\"container\">\n\t<div class=\"row mb-3\" *ngFor=\"let recette of filteredRecipe$ | async\">\n\t\t<div class=\"col-sm-3\"></div>\n\t\t<div class=\"col-md-6 col-sm-6\">\n\t\t\t<div class=\"d-flex flex-row border rounded\">\n\t\t\t\t<div class=\"p-0 w-25\">\n\t\t\t\t\t<img src=\"https://c1.staticflickr.com/3/2862/12328317524_18e52b5972_k.jpg\"\n\t\t\t\t\t\tclass=\"img-thumbnail border-0\" alt=\"photo de la recette\" />\n\n\t\t\t\t</div>\n\t\t\t\t<div class=\"pl-3 pt-2 pr-2 pb-2 w-75 border-left\">\n\n\t\t\t\t\t<h5 class=\"text\">{{recette.nomRecette}}</h5>\n\t\t\t\t\t<ul class=\"m-0 float-left\" style=\"list-style: none; margin:0; padding: 0\">\n\t\t\t\t\t\t<li><i class=\"badge badge-light\"></i>{{recette.nbFavoris}} ♥</li>\n\t\t\t\t\t\t<li><i class=\"badge badge-light\"></i> {{recette.nbVues}} 👁</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-outline-warning\" [routerLink]=\"['/updateRecipe', recette.idRecette]\">Modifier </button>\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-outline-danger\"\n\t\t\t\t\t\t(click)=\"deleteRecipe(recette.idRecette)\">Supprimer</button>\n\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-sm-3\"></div>\n\t</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl, Form } from '@angular/forms';\nimport { IngredientDetails, RecettesService} from '../service/recettes.service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\nimport { ResourceLoader } from '@angular/compiler';\n\n@Component({\n  selector: 'app-ingredients',\n  templateUrl: './ingredients.component.html',\n  styleUrls: ['./ingredients.component.css']\n})\nexport class IngredientsComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>\n  public ingredients: IngredientDetails[]\n\n  public ingredient: IngredientDetails = {\n    idIngredient: null,\n    nomIngredient: '',\n    qte: null,\n    libelleUnite: '',\n  }\n  \n  public filteredIngredient$: Observable<IngredientDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n  \n\n  constructor(private recettesService: RecettesService, private router: Router) { \n     //pour la recherche dynamique\n     this.ingredients$ = this.recettesService.getAllIngredients()\n     this.filter = new FormControl('')\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n     this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n       .pipe(map(([ingredients, filterString]) =>\n         ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllIngredients() {\n\n    this.ingredients$ = this.recettesService.getAllIngredients()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteIngredient(idIngredient: any) {\n    this.recettesService.deleteIngredient(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/ingredient'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateIngredient(ingredient: IngredientDetails){\n    this.recettesService.updateIngredient(ingredient).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addIngredient(){\n    this.recettesService.addIngredient(this.ingredient)\n    window.location.reload()\n  }\n\n}\n","<div id=\"titre\">\n  <h1>Ingrédients</h1>\n\n</div>\n\n\n\n\n<div class='flex-container'>\n\n  <div>\n    <form>\n      <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher un ingrédient\"\n        aria-label=\"Search\" [formControl]=\"filter\">\n    </form>\n    <table class=\"table col-md-12 mx-auto\" *ngFor=\"let ingredient of filteredIngredient$ | async\">\n\n      <tr>\n        <td>\n\n          \n            <form (submit)=\"updateIngredient(ingredient)\">\n              <div class=\"form-row align-items-center\">\n                <div class=\"col-auto\">\n          \n                  <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"nomIngredient\" value={{ingredient.nomIngredient}}\n                    [(ngModel)]=\"ingredient.nomIngredient\">\n                </div>\n                <div class=\"col-auto\">\n                  <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n          \n                </div>\n                <div class=\"col-auto\">\n                  <button id=\"btn\" class=\"btn btn-outline-danger \"\n                    (click)=\"deleteIngredient(ingredient.idIngredient)\">Supprimer</button>\n                </div>\n              </div>\n            </form>\n        \n        </td>\n      </tr>\n    </table>\n  </div>\n  <div>\n    <h6 id=\"question\"> Ajouter un nouvel ingredient </h6>\n    <form (submit)=\"addIngredient()\">\n      <input type=\"text\" class=\"form-control\" name=\"nomIngredient\" placeholder=\"nom ingredient\"\n        [(ngModel)]=\"ingredient.nomIngredient\">\n\n      <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n\n    </form>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, TokenPayload } from '../service/authentification.service';\nimport { Router } from '@angular/router';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-inscrire',\n  templateUrl: './inscrire.component.html',\n  styleUrls: ['./inscrire.component.css']\n})\nexport class InscrireComponent implements OnInit {\n\n  credentials: TokenPayload = {\n    pseudo: '',\n    email: '',\n    mdp: '',\n    mdp2: '',\n    admin: false,\n    abonneNews: false,\n    error: ''\n  }\n\n  userForm: FormGroup;\n\n  constructor(private auth: AuthentificationService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm()\n  }\n  \n  // We Init the form with the validators\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      mdp: ['', Validators.required],\n      mdp2: ['', Validators.required],\n      abonneNews: ['', Validators.required]\n\n    });\n  }\n\n  register() {\n\n    const formValue = this.userForm.value;\n\n    if (formValue.mdp != formValue.mdp2) {\n      alert(\"Les mots de passe ne sont pas identiques.\");\n      return;\n    }\n\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.email = formValue.email;\n    this.credentials.mdp = formValue.mdp;\n    this.credentials.mdp2 = formValue.mdp2;\n    this.credentials.abonneNews = formValue.abonneNews;\n\n    console.log(this.credentials)\n    \n    this.auth.register(this.credentials).subscribe(\n      (res) => {\n        console.log(res);\n        if (res.error == \"L'utilisateur existe déjà\") {\n          alert(\"L'utilisateur existe déjà\");\n        } else {\n          this.router.navigate(['profile']);\n        }\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form class=\"example-form\" [formGroup]=\"userForm\" (ngSubmit)=\"register()\" data-toggle=\"validator\" role=\"form\">\n                <!-- Submitting will start this method -->\n                <div class=\"form-group\">\n                    <label>Pseudo *</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"pseudo\" placeholder=\"pseudo\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"control-label\">Email *</label>\n                    <input type=\"email\" class=\"form-control\" formControlName=\"email\"\n                        placeholder=\"nom.prenom@exemple.com\" id=\"inputEmail\"\n                        required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                        data-error=\"Bruh, that email address is invalid\">\n                    <div class=\"help-block with-errors\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <label>Mot de passe *</label>\n                    <input type=\"password\" class=\"form-control\" formControlName=\"mdp\" placeholder=\"****\" required>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Confirmer le mot de passe *</label>\n                    <input type=\"password\" class=\"form-control\" formControlName=\"mdp2\" placeholder=\"****\" required>\n                </div>\n\n\n                <div class=\"form-group\">\n                    <label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label>\n                    <br>\n                    <input type=\"radio\" formControlName=\"abonneNews\" value=\"true\" checked> Oui\n                    <input type=\"radio\" formControlName=\"abonneNews\" value=\"false\"> Non\n                </div>\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" [disabled]=\"userForm.invalid\">Créer mon compte</button>\n                <br>\n                <p>* Champs obligatoires.</p>\n\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl, Form } from '@angular/forms';\nimport { RecettesService, IngredientDetails } from '../service/recettes.service';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http'\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { AuthentificationService } from '../service/authentification.service';\n\n\n@Component({\n  selector: 'app-ma-liste-de-courses',\n  templateUrl: './ma-liste-de-courses.component.html',\n  styleUrls: ['./ma-liste-de-courses.component.css']\n})\nexport class MaListeDeCoursesComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>\n  public ingredients: IngredientDetails[]\n\n  public ingredient: IngredientDetails\n\n  public filteredIngredient$: Observable<IngredientDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  public ingredientToDelete: IngredientToDelete = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    idIngredient: null\n  }\n\n\n  constructor(private recetteService: RecettesService, private router: Router, private auth: AuthentificationService) {\n    this.ingredients$ = this.recetteService.getListeCourses()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  getListeCourses() {\n    this.ingredients$ = this.recetteService.getListeCourses()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n  \n  deleteListeCourse(idIngredient: any) {\n    this.ingredientToDelete.idIngredient = idIngredient\n    console.log(this.ingredientToDelete)\n    this.recetteService.deleteListeCourse(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/shoppingList'], {\n          queryParams: { refresh: new Date().getTime() }\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    window.location.reload() /* rafraichit la page */\n  }\n}\n\nexport interface IngredientToDelete {\n  pseudo: string\n  idIngredient: number\n}","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<section class=\"jumbotron text-center\">\n    <div class=\"container\">\n        <h1 class=\"jumbotron-heading\">Ma liste de courses</h1>\n    </div>\n</section>\n<div class=\"container mb-4\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"table-responsive\">\n                <table class=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\"> </th>\n                            <th scope=\"col\">Ingrédient</th>\n                           \n                            <th scope=\"col\"><form class=\"form-inline my-2 my-lg-0\">\n                                <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n                              </form>\n                            </th>\n\n                        </tr>\n                    </thead>\n                    <tbody *ngFor=\"let ingredient of filteredIngredient$ | async\">\n                        <tr>\n                            <td><img id=\"image\" src=\"../../assets/img/shoppingList.jpeg\" /> </td>\n                            <td> {{ingredient.nomIngredient}}</td> \n                           \n                            <td class=\"text-right\"> \n                              \n                                <button class=\"btn btn-sm btn-danger\" (click)=deleteListeCourse(ingredient.idIngredient)><i class=\"fa fa-trash\"></i></button>\n                             </td>\n                        </tr>\n\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mes-commentaires',\n  templateUrl: './mes-commentaires.component.html',\n  styleUrls: ['./mes-commentaires.component.css']\n})\nexport class MesCommentairesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Cette fonctionnalité n'est pas disponnible pour le moment </h1>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl, Form } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails } from '../service/recettes.service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-mes-recettes',\n  templateUrl: './mes-recettes.component.html',\n  styleUrls: ['./mes-recettes.component.css']\n})\nexport class MesRecettesComponent implements OnInit {\n\n  public recettes$: Observable<RecipeDetails[]>\n  public categories: CategoryDetails[]\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recetteService: RecettesService, private router: Router) {\n    //pour la recherche dynamique\n    this.recettes$ = this.recetteService.getFavoris()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  } \n\n  ngOnInit(): void {\n    this.recetteService.getAllCategory().subscribe(\n      res => {\n        this.categories = res\n      }\n    )\n  }\n\n  getFavoris() {\n    this.recettes$ = this.recetteService.getFavoris()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  getFavorisByCategory(idCategorie: any){\n   \n    this.recettes$ = this.recetteService.getFavorisByCategory(idCategorie)\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n  //voir si on peut la récupérer au lieu de la recopier!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        console.log(res)\n        this.router.navigate(['/recipe', recette.idRecette])\n      }, err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 402) {\n          console.log(\"Cette recette n'existe pas !\")\n        }\n      }\n    })\n  }\n\n  \n  deleteFavoris(idRecette: any) {\n    this.recetteService.deleteFavoris(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/favorites'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n}\n","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<div id=\"titre\">\n    <h1>Mes recettes ♥</h1>  \n</div>\n\n<ul id=\"menu\" class=\"nav justify-content-center\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" routerLink=\"/favorites\" (click)=\"getFavoris()\">Tous mes favoris</a>\n  </li>\n  <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n    <a class=\"nav-link\" routerLink=\"/favorites\" (click)=\"getFavorisByCategory(categ.idCategorie)\">{{categ.libelleCategorie}}</a>\n  </li> \n  <li>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n    </form>\n</ul>\n\n\n\n<div class=\"container\">\n  <div class=\"row\">\n      <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of filteredRecipe$ | async\"> \n          <div class=\"card h-100\">\n              <img class=\"card-img-top img-fluid\" src=\"//via.placeholder.com/350x150\" alt=\"Photo de la recette\"> \n              <div class=\"card-body\">\n                  <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                  <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                  <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                  <button id=\"poubelle\" class=\"btn btn-sm btn-danger\" (click)=deleteFavoris(recette.idRecette)><i class=\"fa fa-trash\"></i></button> \n                \n              </div>\n              <div class=\"card-footer text-center bg-white\">\n                  <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                 \n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RecettesService } from '../service/recettes.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'; //la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\n@Component({\n  selector: 'app-modal-add-ingredient',\n  templateUrl: './modal-add-ingredient.component.html',\n  styleUrls: ['./modal-add-ingredient.component.css']\n})\nexport class ModalAddIngredientComponent implements OnInit {\n  public newIngredient: NewIngredient = {\n    nomIngredient: ''\n  }\n  constructor(private recettesService: RecettesService, private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n  }\n  //récupérer le nom du new ingrédient et l'enregistrer dans la bd\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.nomIngredient = result\n        this.recettesService.addIngredient(this.newIngredient)\n        //window.location.reload() ?????? voir car si on fait ça on perd tout les champs du questionnaire et sinon on a pas le new ingredient dans les choix -> utiliser cookie?\n      })\n  }\n}\n\nexport interface NewIngredient {\n  nomIngredient: string\n}","<ng-template #content let-modal> <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n    <div class = \"modal-header\">\n        <h4 class=\"modal-title\"></h4>\n    </div>\n    <div class=\"modal-body\">\n        <form>\n            <div class=\"form-group\">\n                <label for=\"nomIngredient\"> Nom de l'ingrédient </label>\n                <div class=\"input-group\">\n                    <input id=\"nomIngredient\" class=\"form-control\" placeholder=\"Cacahuète\" \n                    #nomIngredient=\"ngModel\" [(ngModel)]=\"newIngredient.nomIngredient\"\n                    [ngModelOptions]=\"{standalone: true}\">\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button tyoe=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close(newIngredient.nomIngredient)\">Ajouter</button>\n    </div>\n</ng-template>\n\n<button class=\"btn btn-outline-primary\" (click)=\"open(content)\">Créer un nouvel ingrédient</button>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormGroup, FormArray, Validator, FormBuilder } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails, IngredientDetails, QuantiteDetails, UniteDetails } from '../service/recettes.service';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http'\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'; //la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\nimport {IDropdownSettings } from 'ng-multiselect-dropdown'\n\n@Component({\n  selector: 'app-modifier-recette',\n  templateUrl: './modifier-recette.component.html',\n  styleUrls: ['./modifier-recette.component.css']\n})\nexport class ModifierRecetteComponent implements OnInit {\n\n  public newIngredient: IngredientDetails = {\n    qte: null,\n    idRecette: parseInt(this.route.snapshot.paramMap.get('id')),\n    idIngredient: null,\n    idUnite: null\n  }\n\n  public recette: RecipeDetails\n  public ingredients: IngredientDetails\n  public unite: UniteDetails\n  public qtes: QuantiteDetails[]\n  public categories: CategoryDetails[]\n  \n\n  public allIngredients: IngredientDetails[] //ingredients disponibles\n  public allUnites: UniteDetails[]\n  public allCategories: CategoryDetails[] //catégories disponibles\n\n \n\n  constructor(private recetteService: RecettesService, private router: Router, private route: ActivatedRoute, private formBuilder: FormBuilder, private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      recette => {\n        this.recette = recette\n      }\n    );\n\n    this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredient => {\n        this.ingredients = ingredient\n      }\n    );\n\n    this.recetteService.getRestIngredients(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredients => {\n        this.allIngredients = ingredients\n      }\n    )\n\n    this.recetteService.getAllUnite().subscribe(\n      unites => {\n        this.allUnites = unites\n      }\n    )\n\n    this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      categories => {\n        this.allCategories = categories\n      }\n    )\n\n   \n    this.getCategory(parseInt(this.route.snapshot.paramMap.get('id')))\n\n\n    this.refreshIngredients()\n    this.refreshCategory()\n    this.refreshCategory2()\n   \n\n  }\n\n  getCategory(id: any): any {\n    this.recetteService.getCategory(id).subscribe(\n      (categories: CategoryDetails[]) => {\n        this.categories = categories\n      }, err => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log(\"cette recette n'a pas de catégorie!\")\n          }\n        }\n      }\n    )\n    return this.categories\n  }\n\n\n\n  updateRecipeName(recette: RecipeDetails) {\n    this.recetteService. updateRecipeName(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n  updateSteps(recette: RecipeDetails) {\n    this.recetteService.updateSteps(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  updateRecipeIng(recette: RecipeDetails,ingredient: IngredientDetails) {\n    this.recetteService.updateRecipeIng(recette, ingredient).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  deleteIngredientRececipe(ingredient: IngredientDetails, recette: RecipeDetails) {\n    this.recetteService.deleteIngredientRececipe(ingredient, recette)\n      .subscribe(res => {\n        this.router.navigate(['updateRecipe/:id'], {\n          queryParams: { refresh: new Date().getTime() }\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  \n  }\n\n  deleteRecipeCategory(categorie: CategoryDetails,recette: RecipeDetails){\n  \n    this.recetteService.deleteRecipeCategory(categorie, recette)\n    .subscribe(res => {\n      this.router.navigate(['updateRecipe/:id'], {\n        queryParams: { refresh: new Date().getTime() }\n      })\n    }, (err) => {\n      console.log(err);\n    }\n    );\n  }\n\n  addRecipeCategory(categorie: CategoryDetails,recette: RecipeDetails){\n    this.recetteService.addRecipeCategory(categorie,recette)\n    .subscribe(res => {\n      this.router.navigate(['updateRecipe/:id'], {\n        queryParams: { refresh: new Date().getTime() }\n      })\n    }, (err) => {\n      console.log(err);\n    }\n    );\n  }\n\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.idIngredient = result.idIngredient\n        this.newIngredient.qte = result.qte\n        this.newIngredient.idUnite = result.idUnite\n        this.recetteService.addIngredientRecette(this.newIngredient)\n      })\n  }\n\n  refreshIngredients(): void {\n    setInterval(() => {\n      this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n        ingredient => {\n          this.ingredients = ingredient\n        }\n      );\n    }, 5000)\n  }\n\n  refreshCategory(): void {\n    setInterval(() => {\n      this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n        categories => {\n          this.allCategories = categories\n        }\n      )\n    }, 2000)\n  }\n  refreshCategory2(): void {\n    setInterval(() => {\n      this.recetteService.getCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n        categories => {\n          this.categories = categories\n        }\n      )\n    }, 2000)\n  }\n\n}\nexport class Ingredient {\n  idIngredient = '';\n  quantite = '';\n  idUnite = '';\n}\n\n","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css\" rel=\"stylesheet\">\n<!--lien pour avoir le petit crayon-->\n\n\n<form (submit)=\"updateRecipeName(recette)\">\n    <div class=\"container\">\n        <div class=\"row align-items-center\">\n            <div class=\"col\">\n                <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"nomRecette\" value=\"{{recette?.nomRecette}}\"\n                    #nomRecette=\"ngModel\" [(ngModel)]=\"recette.nomRecette\">\n            </div>\n            <div class=\"col\">\n                <button class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n            </div>\n        </div>\n    </div>\n</form>\n\n<div id=\"photo\">\n    <figure class=\"figure\">\n        <img src=\"//via.placeholder.com/782x250\" class=\"rounded mx-auto d-block\" alt=\"Responsive image\" id=\"resp\">\n        <figcaption class=\"figure-caption\">\n            <!--bouton modifier photo-->\n        </figcaption>\n\n\n\n    </figure>\n\n    <!--afficher la/ les catégorie-->\n\n    <div>Catégories</div>\n    <!--catégories de la recette-->\n    <div *ngFor=\"let categ of categories\">\n        <button id=\"poubelle\" class=\"btn btn-sm btn-danger\" (click)=\"deleteRecipeCategory(categ,recette)\"><i\n                class=\"fa fa-trash\"></i></button>\n        {{categ.libelleCategorie}}\n    </div>\n    <!--catégorie dont la recette ne fait pas partie-->\n    <div *ngFor=\"let cat of allCategories\">\n        <button id=\"add\" class=\"btn btn-sm btn-success\" (click)=\"addRecipeCategory(cat,recette)\"><i\n                class=\"fa fa-plus-circle\"></i></button>\n\n        {{cat.libelleCategorie}}\n    </div>\n\n\n\n    <br>\n\n    <!--ingrédients-->\n    <div id=\"conteneur\">\n        <div class=\"element 1\">\n            <div id=\"card\" class=\"element 1 card border-secondary mb-3 col-lg-6 col-md-6 col-sm-6 p-3\">\n                <div class=\"card-header\">Ingrédients</div>\n                <ul>\n                    <div class=\"card-body text-secondary\" id=\"ing\">\n                        <div *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n\n                            <button id=\"poubelle\" class=\"btn btn-sm btn-danger\"\n                                (click)=deleteIngredientRececipe(ingredient,recette)><i\n                                    class=\"fa fa-trash\"></i></button>\n\n                            <form (submit)=\"updateRecipeIng(recette,ingredient)\">\n                                <button id=\"crayon\" class=\"btn btn-sm btn-warning\"><span\n                                        class=\"glyphicon glyphicon-pencil\" type=\"submit\"></span></button>\n\n\n                                <input id=\"qte\" type=\"text\" class=\"form-control\" name=\"qte\" value=\"{{ingredient.qte}}\"\n                                    #qte=\"ngModel\" [(ngModel)]=\"ingredient.qte\">\n\n                                <select class=\"custom-select\" id=\"unit\"\n                                    required>\n                                    <option value=\"{{ingredient.libelleUnite}}\" selected>{{ingredient.libelleUnite}}</option>\n                                    <option *ngFor=\"let unite of allUnites\" [ngValue]=\"unite.idUnite\">\n                                            {{unite.libelleUnite}}\n                                    </option>\n                                </select>\n                                {{ingredient.nomIngredient}}\n                            </form>\n\n                        </div>\n                    </div>\n                    <ng-template #content let-modal>\n                        <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                        <div class=\"modal-header\">\n                            <h4 class=\"modal-title\"></h4>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form>\n                                <div class=\"form-row\">\n                                    <div class=\"col-md-3 mb-3\">\n                                        <label for=\"validationTooltip04\">Ingrédient</label>\n                                        <select class=\"custom-select\" id=\"validationTooltip04\" #idIngredient=\"ngModel\"\n                                            [(ngModel)]=\"newIngredient.idIngredient\"\n                                            [ngModelOptions]=\"{standalone: true}\" required>\n                                            <option *ngFor=\"let ingredient of allIngredients\"\n                                                [ngValue]=\"ingredient.idIngredient\">\n                                                {{ingredient.nomIngredient}}</option>\n                                        </select>\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez un ingrédient.\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-3 mb-3\">\n                                        <label for=\"validationTooltip05\">Quantité</label>\n                                        <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\"\n                                            #qte=\"ngModel\" [(ngModel)]=\"newIngredient.qte\"\n                                            [ngModelOptions]=\"{standalone: true}\" required>\n                                        <div class=\"invalid-tooltip\">\n                                            Rentrez une quantité correcte.\n                                            <!--Vérifier que c'est pas négatif ou nulle-->\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-3 mb-3\">\n                                        <label for=\"validationTooltip04\">Unité</label>\n                                        <select class=\"custom-select\" id=\"validationTooltip04\" #idUnite=\"ngModel\"\n                                            [(ngModel)]=\"newIngredient.idUnite\" [ngModelOptions]=\"{standalone: true}\"\n                                            required>\n                                            <option *ngFor=\"let unite of allUnites\" [ngValue]=\"unite.idUnite\">\n                                                {{unite.libelleUnite}}\n                                            </option>\n                                        </select>\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez une unité.\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button tyoe=\"button\" class=\"btn btn-outline-dark\"\n                                (click)=\"modal.close(newIngredient)\">Ajouter</button>\n                        </div>\n                    </ng-template>\n\n                    <button class=\"btn btn-outline-primary\" (click)=\"open(content)\">Ajouter un nouvel\n                        ingrédient</button>\n\n\n                    <!--on appelle le modal-->\n\n\n                </ul>\n            </div>\n\n\n        </div>\n        <div class=\"element 2 card border-secondary mb-3 col-lg-6 col-md-6 col-sm-6\">\n            <div class=\"card-header\">Préparation</div>\n            <div class=\"card-body text-secondary center\">\n\n                <form (submit)=\"updateSteps(recette)\">\n                    <textarea class=\"form-control\" #etapes=\"ngModel\" rows=\"15em\" name=\"etapes\"\n                        [(ngModel)]=\"recette.etapes\" value=\" {{recette?.etapes}}\"></textarea>\n\n                    <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n                </form>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserProfile } from '../service/authentification.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { __param } from 'tslib';\n@Component({\n  selector: 'app-mon-profile',\n  templateUrl: './mon-profile.component.html',\n  styleUrls: ['./mon-profile.component.css']\n})\nexport class MonProfileComponent implements OnInit {\n\n  credentials: UserProfile = {\n    pseudo: '',\n    email: '',\n    abonneNews: true,\n    success: ''\n  }\n\n  constructor(private auth: AuthentificationService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    \n    this.auth.profile().subscribe(\n      user => {\n        this.credentials = user\n      },\n      err => {\n        console.error(err)\n      }\n    )\n    if(this.route.queryParams) {\n      this.route.queryParams\n      .subscribe(params => {\n        this.credentials.success = params.success;\n      })\n    }   \n  }\n\n  updateProfile(){\n    this.auth.updateProfile(this.credentials).subscribe((res: any) => {\n      this.credentials.success = res.success\n        this.router.navigateByUrl('/profile')\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n\n  deleteProfile(pseudo: any) {\n    this.auth.logout();\n    this.auth.deleteProfile(pseudo)\n      .subscribe(res => {\n          this.router.navigate(['/']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","\n<div class=\"container\">\n    <div class=\"jumbotron mt-5\">\n        <div class=\"col-sm-10 mx-auto\" ng-controller=\"formCtrl\" ng-app=\"myApp\">\n            <form (submit)=\"updateProfile()\">\n            <h1 class=\"text-center\">Mes informations personnelles</h1>\n\n            <div *ngIf=\"credentials.success\" class=\"alert alert-success\" role=\"alert\">\n                <label>{{credentials.success}}</label>\n            </div>\n\n            <table class=\"table col-md-8 mx-auto\">\n                <tr>\n                    <td>Pseudo</td>\n                    <td>{{credentials?.pseudo}}</td>\n                </tr>\n    \n               \n                \n                <tr>  \n                    <td><label>Email </label>\n                        <div *ngIf=\"email.errors && (email.invalid || email.touched)\">\n                        <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Entrez une adresse mail valide !</small>\n                    </div>\n                    </td>\n                    <td><input type=\"email\" #email=\"ngModel\" class=\"form-control\" name=\"email\" value= {{credentials?.email}}\n                        [class.is-invalid]=\"email.invalid && email.touched\" required\n                        pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" \n                        [(ngModel)]=\"credentials.email\"></td>\n                       \n                </tr>\n            \n                <tr>\n                    <td>Mot de passe</td>\n                    <td><button class=\"btn btn-outline-dark\" routerLink='/update-password'>Modifier</button></td> \n                </tr>\n                <tr>\n                    <td><label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label></td> \n                    <div *ngIf=\"credentials?.abonneNews\">\n                        <td>\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                checked [(ngModel)]=\"credentials.abonneNews\"> Oui\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                [(ngModel)]=\"credentials.abonneNews\"> Non\n                        </td>\n                    </div>\n                    <div *ngIf=\"!credentials?.abonneNews\">\n                        <td>\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                [(ngModel)]=\"credentials.abonneNews\"> Oui\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                checked [(ngModel)]=\"credentials.abonneNews\"> Non\n                        </td>\n                    </div>\n                    \n                    \n                </tr>\n            </table>\n            <button class=\"btn btn-outline-info btn-block col-sm-8 mx-auto\" *ngIf=\"!email.errors\" type=\"submit\">Enregistrer les modifications</button>\n            <button class=\"btn btn-outline-info btn-block col-sm-8 mx-auto\"  *ngIf=\"email.errors\" type=\"submit\" disabled>Enregistrer les modifications</button>\n            \n            <button class=\"btn btn-outline-danger btn-block col-sm-8 mx-auto\" (click)=\"deleteProfile(credentials?.pseudo)\" \n                type=\"submit\">Supprimer mon compte</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { RecipeDetails, RecettesService, IngredientDetails, UniteDetails, QuantiteDetails, FavorisDetails, ListeCoursesDetails } from '../service/recettes.service';\nimport { HttpErrorResponse, HttpResponse} from '@angular/common/http'\nimport {Router, ActivatedRoute} from '@angular/router'\nimport {Observable, of} from 'rxjs'\nimport { AuthentificationService } from '../service/authentification.service';\n\n@Component({\n  selector: 'app-recette',\n  templateUrl: './recette.component.html',\n  styleUrls: ['./recette.component.css']\n})\nexport class RecetteComponent implements OnInit {\n\n  public recette: RecipeDetails\n  public ingredients: Observable<IngredientDetails[]>\n  public unite: UniteDetails\n  public qtes: QuantiteDetails[]\n  public newFavori: FavorisDetails = {\n    pseudo : this.auth.getUserDetails().pseudo,\n    idRecette : parseInt(this.route.snapshot.paramMap.get('id'))\n  }\n\n  public newListeCourses: ListeCoursesDetails = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    listIngredients : null\n  }\n\n  constructor(public auth: AuthentificationService ,private recetteService: RecettesService, private router: Router, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      recette => {\n        this.recette = recette\n      }\n    );\n\n    this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredient => {\n        this.ingredients = ingredient\n       \n      }\n    );\n  }\n\n  getUtiliserIngredientsByIdRecette(id: any) : QuantiteDetails[] {\n    this.recetteService.getUtiliserIngredientsByIdRecette(id).subscribe(\n      (qtes: QuantiteDetails[]) => {\n        console.log(qtes)\n        this.qtes = qtes\n      }, err => {\n        if(err instanceof HttpResponse) {\n          if(err.status === 402) {\n            console.log(\"Il n'y a pas d'ingrédients !\")\n          }\n        }\n      }\n    )\n    return this.qtes\n  }\n\n  getUniteByIdUnite(id: any) : UniteDetails {\n    this.recetteService.getUniteById(id).subscribe(\n      (unite: UniteDetails) => {\n        this.unite = unite\n      }, err => {\n        if(err instanceof HttpResponse) {\n          if(err.status === 402) {\n            console.log(\"Il n'y a pas d'ingrédients !\")\n          }\n        }\n      }\n    )\n    return this.unite\n  }\n\n  addFavoris() {\n    this.recetteService.addFavoris(this.newFavori)\n    this.router.navigateByUrl('/favorites')\n  }\n\n  addListeCourses(){\n    this.newListeCourses.listIngredients = this.ingredients\n    this.recetteService.addListeCourses(this.newListeCourses)\n    this.router.navigateByUrl('/shoppingList')\n  }\n\n}\n","<div id=\"titre\">\n    <h2>{{recette?.nomRecette}}</h2>\n  \n    <figure class=\"figure\">\n        <img src=\"//via.placeholder.com/782x250\" class=\"rounded mx-auto d-block\"  alt=\"Responsive image\" id=\"resp\">\n       <figcaption class=\"figure-caption\">\n            <span class=\"badge badge-light\" id=\"vew\">{{recette?.nbVues}} 👁</span>\n            \n            <span class=\"badge badge-light\" id=\"fav\">{{recette?.nbFavoris}} ♥</span>\n        </figcaption>\n      \n    </figure>\n</div>\n\n<div id=\"conteneur\">\n    <div class=\"element 1\">\n        <div id=\"card\" class=\"element 1 card border-secondary mb-3 col-lg-4 col-md-4 col-sm-4 p-3\">\n            <div class=\"card-header\">Ingrédients</div>\n            <ul> <!--liste points-->\n                <div class=\"card-body text-secondary\" id=\"ing\">\n                    <li *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n                        {{ingredient.qte}}\n                        {{ingredient.libelleUnite}}\n                        {{ingredient.nomIngredient}}\n                    </li>\n                </div>\n            </ul>\n        </div>\n        <!--bouttons visibles que si on est inscrit-->\n    <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-info\" (click)=\"addListeCourses()\">Ajouter les ingrédients à ma liste de course</button>\n    <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addFavoris()\">♥ Ajouter le recettes à mes favoris</button>\n    </div>\n    <div class=\"element 2 card border-secondary mb-3 col-lg-8 col-md-8 col-sm-8\">\n        <div class=\"card-header\">Préparation</div>\n        <div class=\"card-body text-secondary center\">\n            <pre style=\"line-height: 2.5\" class=\"card-text\"> {{recette?.etapes}}</pre>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl, Form } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails } from '../service/recettes.service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\n \n\n@Component({\n  selector: 'app-recettes',\n  templateUrl: './recettes.component.html',\n  styleUrls: ['./recettes.component.css']\n})\nexport class RecettesComponent implements OnInit {\n\n  public recettes$: Observable<RecipeDetails[]>\n  public categories: CategoryDetails[]\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recetteService: RecettesService, private router: Router) {\n    //pour la recherche dynamique\n    this.recettes$ = this.recetteService.getAllRecipes()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  } \n\n  //dans ngOnInit on récupère les données à afficher au lancement de la page\n  ngOnInit(): void {\n    this.getAllCategory()\n  }\n\n  getAllRecipes() {\n\n    this.recettes$ = this.recetteService.getAllRecipes()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  getAllCategory(){\n    this.recetteService.getAllCategory().subscribe(\n      (categorie: CategoryDetails[]) => {\n        \n        this.categories = categorie\n      }, err => {\n        if(err instanceof HttpErrorResponse) {\n          if(err.status === 402){\n            console.log(\"Il n'y a pas de catégorie.\")\n\n          \n          }\n\n        }\n      }\n    )\n  }\n\n  getRecipeByCategory(idCategorie: any){\n   \n    this.recettes$ = this.recetteService.getRecipeByCategory(idCategorie)\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        console.log(res)\n        this.router.navigate(['/recipe', recette.idRecette])\n      }, err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 402) {\n          console.log(\"Cette recette n'existe pas !\")\n        }\n      }\n    })\n  }\n}\n","<ul id=\"menu\" class=\"nav justify-content-center\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link active\" routerLink=\"/allRecipes\" (click)=\"getAllRecipes()\">Toutes les recettes</a>\n    </li>\n    <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n      <a class=\"nav-link\" routerLink=\"/allRecipes\" (click)=\"getRecipeByCategory(categ.idCategorie)\">{{categ.libelleCategorie}}</a>\n    </li>\n    <li>\n      <form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n      </form>\n    </li>\n  </ul>\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of filteredRecipe$ | async\"> <!--Pour chaque recette on représente sa carte-->\n                <div class=\"card h-100\">\n                    <img class=\"card-img-top img-fluid\" src=\"//via.placeholder.com/350x150\" alt=\"Photo de la recette\"> \n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                        <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                        <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                    </div>\n                    <div class=\"card-footer text-center bg-white\">\n                        <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                        \n                </div>\n            </div>\n        </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, TokenPayload } from '../service/authentification.service';\nimport { Router } from '@angular/router';\nimport { FormArray, FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-se-connecter',\n  templateUrl: './se-connecter.component.html',\n  styleUrls: ['./se-connecter.component.css']\n})\nexport class SeConnecterComponent implements OnInit {\n\n  loginForm: FormGroup\n\n  credentials: TokenPayload = {\n    pseudo: '',\n    email: '',\n    mdp: '',\n    mdp2: '',\n    admin: false,\n    abonneNews: true,\n    error: ''\n  }\n\n  constructor(private auth: AuthentificationService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm()\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      mdp: ['', Validators.required],\n    });\n  }\n\n  login() {\n\n    const formValue = this.loginForm.value;\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.mdp = formValue.mdp;\n\n    this.auth.login(this.credentials).subscribe(\n      (res) => {\n        if (res.error == \"Mot de passe et/ou pseudo incorrect\") {\n          alert(res.error);\n        } else {\n          this.router.navigateByUrl('/profile')\n          alert(\"Bienvenue sur Marine's Recipe\")\n        }\n      },\n      err => {\n        console.error(err)\n      }\n    )\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                <h1 class=\"h3 mb-3 font-weight-normal\">Se connecter</h1>\n                <div class=\"form-group\">\n                    <label>Pseudo</label>\n                    <input type=\"text\" class=\"form-control\" required name=\"pseudo\" placeholder=\"pseudo\" formControlName=\"pseudo\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" required name=\"mdp\" placeholder=\"****\" formControlName=\"mdp\">\n                </div>\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Se connecter</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core'\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthentificationService } from './authentification.service'\n\n@Injectable()\nexport class AdminAuthService implements CanActivate {\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate () {\n        if (!this.auth.isAdmin()) {\n            this.router.navigateByUrl('/')\n            return false\n        }\n        return true\n    }\n}","import { Injectable } from '@angular/core'\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthentificationService } from './authentification.service'\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate () {\n        if (!this.auth.isLoggedIn()) {\n            this.router.navigateByUrl('/')\n            return false\n        }\n        return true\n    }\n}","import {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http'\nimport {Observable, of} from 'rxjs'\nimport { map, tap, catchError } from 'rxjs/operators'\nimport { Router } from '@angular/router'\n\n//login\nexport interface UserDetails {\n    pseudo: string\n    email: string\n    mdp: string\n    admin: boolean\n    abonneNews: boolean\n    exp: number\n    iat: number\n}\n\ninterface TokenResponse {\n    token: string\n    error: string\n}\n\ninterface Response {\n    error: string\n}\n\n//inscription\nexport interface TokenPayload {\n    pseudo: string\n    email: string\n    mdp: string\n    mdp2: string\n    admin: boolean\n    abonneNews: boolean\n    error: string\n}\n\n//changement mdp\nexport interface UserMdp{\n    pseudo: string\n    mdp: string\n    newmdp: string\n    mdp2: string\n    error: string\n    success: string\n}\n\n//modif profile\nexport interface UserProfile{\n    pseudo: string\n    email: string\n    abonneNews: boolean\n    success: string\n}\n\n@Injectable()\nexport class AuthentificationService {\n    private token: string\n    private error: string\n\n    constructor(private http: HttpClient, private router: Router) {\n\n    }\n\n    private saveToken (token: string): void {\n        localStorage.setItem('userToken', token)\n        this.token = token\n    }\n\n    private getToken (): string {\n        if (!this.token) {\n            this.token = localStorage.getItem('userToken')\n        }\n        return this.token\n    }\n\n    public getUserDetails(): UserDetails {\n        const token = this.getToken()\n        let payload\n        if(token) {\n            payload = token.split('.')[1]\n            payload = window.atob(payload)\n            return JSON.parse(payload)\n        } else {\n            return null\n        }\n    }\n\n    public isLoggedIn(): boolean {\n        const user = this.getUserDetails()\n        if (user) {\n            return user.exp > Date.now() / 1000\n        } else {\n            return false\n        }\n    }\n\n    public isAdmin(): boolean {\n        const user = this.getUserDetails()\n        if(user){\n            return user.admin \n        }else {\n            return false\n        }\n    }\n\n    public register(user: TokenPayload) : Observable<any> {\n        const base = this.http.post('/server/register', user)\n\n        const request = base.pipe(\n            map((data: TokenResponse) => {\n                if (data.token) {\n                    this.saveToken(data.token)\n                }\n                return data\n            })\n        )\n        return request\n    }\n\n    public login(user: TokenPayload) : Observable<any> {\n        const base = this.http.post('/server/login', user)\n        const request = base.pipe(\n            map((data: TokenResponse) => { //map permet de récupérer des données\n                if (data.token) {\n                    this.saveToken(data.token)\n                }\n                return data\n            })\n        )\n        return request\n    }\n\n    public profile() : Observable<any> {\n        return this.http.get('/server/profile', {\n            headers: { Authorization: `${this.getToken()}` }\n        })\n    }\n\n    public logout(): void {\n        this.token = ''\n        window.localStorage.removeItem('userToken')\n        this.router.navigateByUrl('/')\n    }\n\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n    \n          // TODO: send the error to remote logging infrastructure\n          console.error(error); // log to console instead\n    \n          // Let the app keep running by returning an empty result.\n          return of(result as T);\n        };\n      }\n\n    public updatePassword(user: UserMdp) : Observable<any> {\n        const base = this.http.put(`/server/update-password/${user.pseudo}`, user)\n\n        return base.pipe(\n            map((data: Response) => {\n                return data\n            })\n          );\n    }\n\n    public deleteProfile(pseudo: string): Observable<any> {\n        const url = `/server/delete-profile/${pseudo}`;\n        return this.http.delete<any>(url).pipe(\n          tap(_ => console.log(`deleted ${pseudo}`)),\n          catchError(this.handleError<any>('deleteProfile'))\n        );\n      }\n\n    public updateProfile(user: UserProfile) : Observable<any> {\n        const base = this.http.put(`/server/mon-profile/${user.pseudo}`, user)\n        \n        return base.pipe(\n            tap(_ => console.log(`updated ${user.pseudo}`)),\n            catchError(this.handleError<any>('updateProfile'))\n          );\n    }\n    \n   \n}\n","import { Injectable } from '@angular/core'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Observable, of } from 'rxjs'\nimport { map, tap, catchError } from 'rxjs/operators'\nimport { CategoriesComponent } from '../categories/categories.component'\nimport { CreateRecipe } from '../ajout-recette/ajout-recette.component'\nimport { NewIngredient } from '../modal-add-ingredient/modal-add-ingredient.component'\nimport { AuthentificationService } from './authentification.service'\n\n\n\nexport interface RecipeDetails {\n    idRecette: number\n    nomRecette: string\n    datePublication: Date\n    nbFavoris: number\n    nbVues: number\n    etapes: Text\n}\n\nexport interface IngredientDetails {\n    idRecette?: number\n    idIngredient?: string\n    nomIngredient?: string\n    qte?: number\n    libelleUnite?: string\n    idUnite?: number\n}\n\nexport interface UniteDetails {\n    idUnite: number\n    libelleUnite: string\n}\n\nexport interface QuantiteDetails {\n    qte: any,\n    idRecette: number\n    idIngredient: number,\n    idUnite: number\n}\n\nexport interface CategoryDetails {\n    idCategorie: number\n    libelleCategorie: string\n}\n\nexport interface FavorisDetails {\n    pseudo: string\n    idRecette: number\n}\n\nexport interface ListeCoursesDetails {\n    pseudo: string\n    listIngredients: any\n}\n\n@Injectable()\nexport class RecettesService {\n\n    constructor(private http: HttpClient, private auth: AuthentificationService) { }\n\n    public getAllRecipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/allRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n\n            return data\n        }))\n    }\n\n    public getRecipeById(id: any): Observable<any> {\n        return this.http.get<any>('/server/recipe/' + id)\n    }\n\n    public getIngredientsByIdRecette(id: any): any {\n        return this.http.get<any>('/server/recipe/' + id + '/ingredients')\n    }\n\n    public getUtiliserIngredientsByIdRecette(id: any): Observable<QuantiteDetails[]> {\n        const base = this.http.get('/server/recipe/' + id + '/utiliserIngredients')\n        const utiliserIngredients = base.pipe(map((data: QuantiteDetails[]) => {\n            return data\n        }))\n        return utiliserIngredients\n    }\n\n    public getIngredientById(idIngredient: any): Observable<IngredientDetails> {\n        const base = this.http.get('/server/recipe/ingredient/' + idIngredient)\n        return base.pipe(map((data: IngredientDetails) => {\n            return data\n        }))\n    }\n\n    public getUniteById(idUnite: any): Observable<UniteDetails> {\n        const base = this.http.get('/server/recipe/unite/' + idUnite)\n        return base.pipe(map((data: UniteDetails) => {\n            return data\n        }))\n    }\n\n    public getLatestReceipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/latestReceipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            return data\n        }))\n    }\n\n    public getMostPopularRecipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/mostPopularRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            return data\n        }))\n    }\n\n    public deleteRecipe(id: any): Observable<any> {\n        const url = `/server/delete-recipe/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public getRecipeByCategory(idCategorie: any): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/recipe/category/${idCategorie}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            return data\n        }))\n    }\n\n    public getAllCategory(): any {\n        return this.http.get<any>(`/server/category`)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n    }\n\n    \n\n    public updateNbView(recette: RecipeDetails): Observable<any> {\n        return this.http.get<any>(`/server/recipe/${recette.idRecette}/category/rest`)\n        .pipe(map((data: CategoryDetails[]) => {\n            return data\n        }))\n}\n    public deleteCategory(id: any): Observable<any> {\n        const url = `/server/category/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateCategory(categorie: CategoryDetails): Observable<any> {\n        return this.http.put(`/server/category/update`, categorie)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n\n\n    }\n\n    public updateRecipeIng(recette: RecipeDetails, ingredient: IngredientDetails):Observable<any> {\n        return this.http.put(`/server/recipe/${recette.idRecette}/ingredient/update`, ingredient)\n            .pipe(map((res) => {\n                return res\n            }))\n\n\n    }\n\n    public addCategory(categorie: CategoryDetails): any {\n\n        this.http.post('/server/category/add', categorie).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public getAllIngredients(): any {\n        return this.http.get<any>(`/server/ingredient`)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public getRestIngredients(idRecette: any): any {\n        return this.http.get<any>(`/server/recipe/${idRecette}/ingredient/rest`)\n        .pipe(map((data: IngredientDetails[]) => {\n            return data\n        }))\n    }\n\n    public getRestCategory(idRecette:any): any {\n        return this.http.get<any>(`/server/recipe/${idRecette}/category/rest`)\n        .pipe(map((data: CategoryDetails[]) => {\n            return data\n        }))\n    }\n\n    public deleteIngredient(id: any): Observable<any> {\n        const url = `/server/ingredient/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateIngredient(ingredient: IngredientDetails): Observable<any> {\n        return this.http.put(`/server/ingredient/update`, ingredient)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public addIngredient(ingredient: any): any {\n        this.http.post('/server/ingredient/add', ingredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public createRecipe(recipe: CreateRecipe): Observable<any> {\n        const res = this.http.post('/server/add-recipe', recipe)\n        return res.pipe(map((res) => {\n            return res\n        }))\n    }\n\n    public addIngredientsAndCategoryToNewRecipe(recipe: CreateRecipe): Observable<any> {\n        const res = this.http.post('/server/recipe/addIngredientAndCategorie', recipe)\n        return res.pipe(map((res) => {\n            return res\n        }))\n    }\n\n    public addRecipeCategory(categorie : CategoryDetails, recette: RecipeDetails): Observable<any>{\n        return this.http.post(`/server/recipe/${recette.idRecette}/category/add`,categorie)\n        .pipe(map((res)=> {\n            return res\n        }))\n    }\n\n    public getAllUnite(): any {\n        return this.http.get<any>('/server/unite')\n            .pipe(map((data: UniteDetails[]) => {\n                return data\n            }))\n    }\n\n    public deleteUnite(id: any): Observable<any> {\n        const url = `/server/unite/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateUnite(unite: UniteDetails): Observable<any> {\n        return this.http.put(`/server/unite/update`, unite)\n            .pipe(map((data: UniteDetails[]) => {\n                return data\n            }))\n    }\n\n    public addUnite(unite: any): any {\n        this.http.post('/server/unite/add', unite).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n\n    public addFavoris(newFavori: FavorisDetails): any {\n        return this.http.post(`/server/favorites/add`, newFavori).subscribe(res => {\n            {\n                console.log(res)\n                return res\n            }\n\n        })\n    }\n\n  \n    public addListeCourses(newListeCourses: ListeCoursesDetails) {\n        this.http.post(`/server/shoppingList/add`, newListeCourses).subscribe(res => {\n            {\n                return res\n            }\n\n        })\n    }\n    \n\n    public getFavoris(): Observable<RecipeDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/recipe/favorites/${pseudo}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            return data\n        }))\n    }\n\n    public getFavorisByCategory(idCategorie: number): Observable<RecipeDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/recipe/favorites/${pseudo}/${idCategorie}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            return data\n        }))\n    }\n\n    public deleteFavoris(id: any): Observable<any> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const url = `/server/favorites/${pseudo}/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    \n    public getListeCourses(): Observable<IngredientDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/shoppingList/${pseudo}`);\n        return base.pipe(map((data: IngredientDetails[]) => {\n            return data\n        }))\n\n    }\n\n    public deleteListeCourse(id: any): Observable<any> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const url = `/server/shoppingList/delete/${id}/${pseudo}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public getCategory(id:any): any {\n        return this.http.get<any>(`/server/recipe/${id}/category`)\n            .pipe(map((data: any) => {\n                return data\n            }))\n    }\n\n    public  updateRecipeName(recette: RecipeDetails): Observable<any> {\n       \n        return this.http.put(`/server/recipe/name/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public updateSteps(recette: RecipeDetails): Observable<any> {\n   \n        return this.http.put(`/server/recipe/step/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public deleteIngredientRececipe(ingredient: IngredientDetails, recette: RecipeDetails): Observable<any> {\n        const url = `/server/recipe/${recette.idRecette}/ingredient/${ingredient.idIngredient}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${ingredient.idIngredient} from recipe ${recette.idRecette}`)),\n        );\n    }\n\n    public addIngredientRecette(newIngredient: IngredientDetails): any {\n        console.log(\"ahaahah\")\n        console.log(newIngredient)\n        this.http.post(`/server/recipe/${newIngredient.idRecette}/add/ingredient/${newIngredient.idIngredient}`,newIngredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    \n\n    public deleteRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails): Observable<any> {\n        console.log(recette)\n        console.log(categorie)\n        const url = `/server/recipe/${recette.idRecette}/category/${categorie.idCategorie}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${categorie.idCategorie} from recipe ${recette.idRecette}`)),\n        );\n    }\n\n}    ","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl, Form } from '@angular/forms';\nimport { UniteDetails, RecettesService} from '../service/recettes.service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\nimport { ResourceLoader } from '@angular/compiler';\n\n\n@Component({\n  selector: 'app-unite',\n  templateUrl: './unite.component.html',\n  styleUrls: ['./unite.component.css']\n})\nexport class UniteComponent implements OnInit {\n\n  public unites$: Observable<UniteDetails[]>\n  public unites: UniteDetails[]\n\n  public unite: UniteDetails = {\n    idUnite: null,\n    libelleUnite: ''\n  }\n  \n  public filteredUnite$: Observable<UniteDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recettesService: RecettesService, private router: Router) { \n     //pour la recherche dynamique\n     this.unites$ = this.recettesService.getAllUnite()\n     this.filter = new FormControl('')\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n     this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n       .pipe(map(([unites, filterString]) =>\n         unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllUnite() {\n\n    this.unites$ = this.recettesService.getAllUnite()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n      .pipe(map(([unites, filterString]) =>\n        unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteUnite(idUnite: any) {\n    this.recettesService.deleteUnite(idUnite)\n      .subscribe(res => {\n        this.router.navigate(['/unite'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateUnite(unite: UniteDetails){\n    this.recettesService.updateUnite(unite).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addUnite(){\n    this.recettesService.addUnite(this.unite)\n    window.location.reload()\n  }\n \n\n}\n","<div id=\"header\">\n  <h1>Unités</h1>\n\n</div>\n\n\n<div class='flex-container'>\n\n  <div>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher une unité\" aria-label=\"Search\"\n        [formControl]=\"filter\">\n    </form>\n    <table class=\"table col-md-12 mx-auto\" *ngFor=\"let unite of filteredUnite$ | async\">\n\n      <tr>\n        <td>\n\n          <form (submit)=\"updateUnite(unite)\">\n            <div class=\"form-row align-items-center\">\n              <div class=\"col-auto\">\n                <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"libelleUnite\" value={{unite.libelleUnite}}\n                  [(ngModel)]=\"unite.libelleUnite\">\n              </div>\n              <div class=\"col-auto\">\n                <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n              </div>\n              <div class=\"col-auto\">\n                <button id=\"btn\" class=\"btn btn-outline-danger \" (click)=\"deleteUnite(unite.idUnite)\">Supprimer</button>\n              </div>\n            </div>\n          </form>\n        </td>\n      </tr>\n    </table>\n  </div>\n  <div>\n    <h6 id=\"question\"> Ajouter une nouvelle unité </h6>\n    <form (submit)=\"addUnite()\">\n      <input type=\"text\" class=\"form-control\" name=\"libelleUnite\" placeholder=\"libelle unité\"\n        [(ngModel)]=\"unite.libelleUnite\">\n\n      <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserMdp } from '../service/authentification.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-password',\n  templateUrl: './update-password.component.html',\n  styleUrls: ['./update-password.component.css']\n})\nexport class UpdatePasswordComponent implements OnInit {\n\n  credentials: UserMdp = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    mdp: '',\n    newmdp: '',\n    mdp2: '',\n    error: '',\n    success: ''\n  }\n  constructor(private auth: AuthentificationService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  updatePassword(){\n      this.auth.updatePassword(this.credentials).subscribe((res: any) => {\n        if (res.error) {\n          this.credentials.pseudo = ''\n          this.credentials.mdp = ''\n          this.credentials.mdp2 = ''\n          this.credentials.newmdp = ''\n          this.credentials.error = res.error\n          this.router.navigateByUrl('/update-password')\n        } else {\n          this.credentials.success = res.success\n          this.router.navigate(['/profile'],{ queryParamsHandling: res.success })\n        }}, (err: any) => {\n          console.log(err);\n        }\n      );\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form (submit)=\" updatePassword()\">\n                <h1 class=\"h3 mb-3 font-weight-normal\">Modifier mon mot de passe</h1>\n                \n                <div class=\"form-group\">\n                    <label>Ancien mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp\" placeholder=\"****\"\n                        [(ngModel)]=\"credentials.mdp\">\n                </div>\n                <div *ngIf=\"credentials.error\" class=\"alert alert-danger\" role=\"alert\">\n                    <label>{{credentials.error}}</label>\n                </div>\n                <div class=\"form-group\">\n                    <label>Nouveau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"newmdp\" placeholder=\"****\"\n                        [(ngModel)]=\"credentials.newmdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Confirmer le nouveaau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp2\" placeholder=\"****\"\n                        [(ngModel)]=\"credentials.mdp2\">\n                </div>\n\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Enregistrer</button>\n            </form>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}