{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/modules/material.module.ts","webpack:///src/app/pages/accueil/accueil.component.ts","webpack:///src/app/pages/accueil/accueil.component.html","webpack:///src/app/pages/ajout-recette/ajout-recette.component.ts","webpack:///src/app/pages/ajout-recette/ajout-recette.component.html","webpack:///src/app/pages/apropos/apropos.component.ts","webpack:///src/app/pages/apropos/apropos.component.html","webpack:///src/app/pages/categories/categories.component.ts","webpack:///src/app/pages/categories/categories.component.html","webpack:///src/app/pages/contact/contact.component.ts","webpack:///src/app/pages/contact/contact.component.html","webpack:///src/app/pages/gerer-les-recettes/gerer-les-recettes.component.ts","webpack:///src/app/pages/gerer-les-recettes/gerer-les-recettes.component.html","webpack:///src/app/pages/ingredients/ingredients.component.ts","webpack:///src/app/pages/ingredients/ingredients.component.html","webpack:///src/app/pages/inscrire/inscrire.component.ts","webpack:///src/app/pages/inscrire/inscrire.component.html","webpack:///src/app/pages/ma-liste-de-courses/ma-liste-de-courses.component.ts","webpack:///src/app/pages/ma-liste-de-courses/ma-liste-de-courses.component.html","webpack:///src/app/pages/mentions-legales/mentions-legales.component.ts","webpack:///src/app/pages/mentions-legales/mentions-legales.component.html","webpack:///src/app/pages/mes-commentaires/mes-commentaires.component.ts","webpack:///src/app/pages/mes-commentaires/mes-commentaires.component.html","webpack:///src/app/pages/mes-recettes/mes-recettes.component.ts","webpack:///src/app/pages/mes-recettes/mes-recettes.component.html","webpack:///src/app/pages/modifier-recette/modifier-recette.component.ts","webpack:///src/app/pages/modifier-recette/modifier-recette.component.html","webpack:///src/app/pages/mon-profile/mon-profile.component.ts","webpack:///src/app/pages/mon-profile/mon-profile.component.html","webpack:///src/app/pages/recette/recette.component.ts","webpack:///src/app/pages/recette/recette.component.html","webpack:///src/app/pages/recettes/recettes.component.ts","webpack:///src/app/pages/recettes/recettes.component.html","webpack:///src/app/pages/refresh/refresh.component.ts","webpack:///src/app/pages/refresh/refresh.component.html","webpack:///src/app/pages/request-reset/request-reset.component.ts","webpack:///src/app/pages/request-reset/request-reset.component.html","webpack:///src/app/pages/response-reset/response-reset.component.ts","webpack:///src/app/pages/response-reset/response-reset.component.html","webpack:///src/app/pages/se-connecter/se-connecter.component.ts","webpack:///src/app/pages/se-connecter/se-connecter.component.html","webpack:///src/app/pages/unite/unite.component.ts","webpack:///src/app/pages/unite/unite.component.html","webpack:///src/app/pages/update-password/update-password.component.ts","webpack:///src/app/pages/update-password/update-password.component.html","webpack:///src/app/service/admin-auth.service.ts","webpack:///src/app/service/auth-guard.service.ts","webpack:///src/app/service/authentification.service.ts","webpack:///src/app/service/categories/categories.service.ts","webpack:///src/app/service/commentaires/commentaires.service.ts","webpack:///src/app/service/favoris/favoris.service.ts","webpack:///src/app/service/images/images.service.ts","webpack:///src/app/service/index.ts","webpack:///src/app/service/ingredients/ingredients.service.ts","webpack:///src/app/service/recettes/recettes.service.ts","webpack:///src/app/service/shoppingList/shopping-list.service.ts","webpack:///src/app/service/unites/unites.service.ts","webpack:///src/app/utils/Utils.js","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","scrollPositionRestoration","imports","auth","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","modules","MaterialModule","AccueilComponent","recetteService","router","categoriesService","menu","petitDej","repas","douceur","customOptions","autoplay","autoplayTimeout","loop","mouseDrag","touchDrag","pullDrag","dots","navSpeed","navText","responsive","items","nav","getMostPopularRecipes","getLatestReceipes","getAllCategory","subscribe","data","categories","getAllRecipes","recettes","getPetitDej","getRepas","getDouceur","getMenu","forEach","element","idMenu","err","status","console","log","idCategorie","navigate","mostPopularRecipes","latestRecipes","recette","updateNbView","res","idRecette","window","location","reload","AjoutRecetteComponent","formBuilder","modalService","http","ingredientsService","unitesService","imagesService","imageCompress","recipe","nomRecette","ingredients","idImage","etapes","nbrePart","libellePart","tempsPreparation","tempsCuisson","astuce","selectIngredient","newIngredient","nomIngredient","dropdownList","selectedItems","fileToUpload","getAllIngredients","disabled","getAllUnite","unites","dropdownSettings","singleSelection","idField","textField","enableCheckAll","itemsShowLimit","allowSearchFilter","searchPlaceholderText","initRecipeForm","createIngredientsForm","onChanges","event","fileName","file","target","files","name","reader","FileReader","onload","localUrl","result","compressFile","readAsDataURL","image","orientation","sizeOfOriginalImage","byteCount","warn","imgResultAfterCompress","localCompressedURl","sizeOFCompressedImage","imageName","imageFile","File","type","images","length","formData","FormData","append","post","formValue","recipeForm","value","ingredientFormValue","ingredientForm","alert","ingredient","qte","addImage","createRecipe","addIngredientsAndCategoryToNewRecipe","listAbonneNews$","getAbonneNews","sentEmailToNewRecipe","navigateByUrl","group","required","max","array","createIngredientForm","idIngredient","compose","min","idUnite","default","valueChanges","val","get","push","content","open","ariaLabelledBy","addIngredient","setTimeout","selectFile","AProposComponent","CategoriesComponent","recettesService","categorie","libelleCategorie","deleteCategory","queryParams","refresh","Date","getTime","updateCategory","error","addCategory","ContactComponent","contactSend","nameUser","emailUser","subject","message","initContactForm","isLoggedIn","getUserDetails","email","contactForm","sendEmailContact","sendEmail","GererLesRecettesComponent","media","opened","over","expandHeight","collapseHeight","displayMode","recettes$","filter","filter$","pipe","filteredRecipe$","recipes","filterString","toLowerCase","indexOf","deleteRecipe","IngredientsComponent","libelleUnite","ingredients$","filteredIngredient$","deleteIngredient","updateIngredient","MyErrorStateMatcher","control","form","invalidCtrl","invalid","parent","dirty","invalidParent","InscrireComponent","credentials","pseudo","mdp","mdp2","admin","abonneNews","matcher","mdpForm","password","confirmPassword","validator","checkPasswords","initForm","userForm","pass","controls","confirmPass","notSame","mdpFormValue","register","logout","MaListeDeCoursesComponent","shoppingListService","ingredientToDelete","ingredientToAdd","getListeCourses","restIngredients$","getRestListeCourses","deleteListeCourse","url","addIngredientShoppingList","MentionsLegalesComponent","MesCommentairesComponent","commentairesService","commentaireToModify","ecritPar","getCommentaireUser","commentaires","options","weekday","year","month","day","hour","minute","d","dateCommentaire","toLocaleString","getRecipeById","concerne","modifyCommentaire","idCommentaire","deleteCommentaire","MesRecettesComponent","favorisService","page","actualCategory","recipeByCategory","recipeCategory","getFavoris","allRecipe","allRecipe2","getFavorisByCategory","initResearchForm","researchForm","researchResult","includes","getRecipeByCategory","deleteFavoris","research","ngOnChanges","ModifierRecetteComponent","route","parseInt","snapshot","paramMap","datePublication","nbFavoris","nbVues","lienImage","imageToModify","getIngredientsByIdRecette","getImage","getRestIngredients","allIngredients","allUnites","getRestCategory","allCategories","getCategory","imageBlob","dataURItoBlob","split","image2","dataURI","byteString","atob","arrayBuffer","ArrayBuffer","int8Array","Uint8Array","i","charCodeAt","blob","Blob","addImageToRecipe","getCategoryByRecette","updateRecipeName","updateSteps","updateAstuce","updatePart","updateTemps","updateRecipeIng","deleteIngredientRecipe","deleteRecipeCategory","addRecipeCategory","addIngredientRecette","MonProfileComponent","success","profile","user","params","updateProfile","bind","deleteProfile","RecetteComponent","newFavori","newListeCourses","listIngredients","newCommentaire","newResponse","isFavori","nbrePartInitial","ingredientQteInitial","getCommentaireRecipe","getUtiliserIngredientsByIdRecette","qtes","getUniteById","unite","addFavoris","addListeCourses","addCommentaire","res2","addImageToCommentaire","searchValue","onProportionLess","onProportionMore","RecettesComponent","favoris","getAllRecipesAndIngredients","currentPage","document","body","scrollTop","scrollTo","onPageChange","RefreshComponent","activatedRoute","RequestResetComponent","authService","IsvalidForm","RequestResetForm","forbiddenEmails","valid","requestReset","reset","successMessage","errorMessage","RequestResetUser","ResponseResetComponent","fb","IsResetFormValid","CurrentState","resetToken","token","VerifyToken","Init","ValidPasswordToken","resettoken","ResponseResetForm","newPassword","minLength","passwordFormGroup","doesNotMatch","SeConnecterComponent","loginForm","login","emailConfirmed","clicSurBouton","UniteComponent","unites$","filteredUnite$","deleteUnite","updateUnite","addUnite","UpdatePasswordComponent","newmdp","initUpdatePasswordForm","updatePasswordForm","updatePassword","AdminAuthService","isAdmin","AuthGuardService","AuthentificationService","localStorage","setItem","getItem","getToken","payload","JSON","parse","exp","now","base","request","saveToken","headers","Authorization","removeItem","operation","put","delete","_","handleError","to","infos","CategoriesService","providedIn","CommentairesService","commentaire","getUser","element2","bool","getReponseCommentaireRecipe","children","FavorisService","ingredientService","globalTime","ImagesService","IngredientsService","utiliserIngredients","toString","RecettesService","categoryService","ShoppingListService","UnitesService","roundDecimal","nombre","precision","tmp","Math","pow","round","addTimes","startTime","endTime","times","a","b","isNaN","hours","minutes","seconds","m","h","slice","addHours","time","dateTime","temps","setHours","setMinutes","setSeconds","getHours","getMinutes","getSeconds","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccueilComponent } from './pages/accueil/accueil.component';\nimport { SeConnecterComponent } from './pages/se-connecter/se-connecter.component';\nimport { InscrireComponent } from './pages/inscrire/inscrire.component';\nimport { MonProfileComponent } from './pages/mon-profile/mon-profile.component';\nimport { AuthGuardService, AdminAuthService } from './service';\nimport { UpdatePasswordComponent } from './pages/update-password/update-password.component';\nimport { AProposComponent } from './pages/apropos/apropos.component';\nimport { RecettesComponent } from './pages/recettes/recettes.component';\nimport { RecetteComponent } from './pages/recette/recette.component';\nimport { GererLesRecettesComponent } from './pages/gerer-les-recettes/gerer-les-recettes.component';\nimport { CategoriesComponent } from './pages/categories/categories.component';\nimport { IngredientsComponent } from './pages/ingredients/ingredients.component';\nimport { AjoutRecetteComponent } from './pages/ajout-recette/ajout-recette.component';\nimport { UniteComponent } from './pages/unite/unite.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { MaListeDeCoursesComponent } from './pages/ma-liste-de-courses/ma-liste-de-courses.component';\nimport { MesCommentairesComponent } from './pages/mes-commentaires/mes-commentaires.component';\nimport { MesRecettesComponent } from './pages/mes-recettes/mes-recettes.component';\nimport { ModifierRecetteComponent } from './pages/modifier-recette/modifier-recette.component';\nimport { RequestResetComponent } from './pages/request-reset/request-reset.component';\nimport { ResponseResetComponent } from './pages/response-reset/response-reset.component';\nimport { RefreshComponent } from './pages/refresh/refresh.component';\nimport { MentionsLegalesComponent } from './pages/mentions-legales/mentions-legales.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AccueilComponent },\n  { path: 'login', component: SeConnecterComponent },\n  { path: 'register', component: InscrireComponent },\n  { path: 'profile', component: MonProfileComponent, canActivate: [AuthGuardService] },\n  { path: 'update-password', component: UpdatePasswordComponent, canActivate: [AuthGuardService] },\n  { path: 'aboutMe', component: AProposComponent },\n  { path: 'allRecipes', component: RecettesComponent },\n  { path: 'recipe/:id', component: RecetteComponent },\n  { path: 'handleRecipes', component: GererLesRecettesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'category', component: CategoriesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'ingredient', component: IngredientsComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'add-recipe', component: AjoutRecetteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'unite', component: UniteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'contact', component: ContactComponent},\n  { path: 'shoppingList', component: MaListeDeCoursesComponent, canActivate: [AuthGuardService] },\n  { path: 'comment', component: MesCommentairesComponent, canActivate: [AuthGuardService] },\n  { path: 'favorites', component: MesRecettesComponent, canActivate: [AuthGuardService] },\n  { path: 'updateRecipe/:id', component: ModifierRecetteComponent, canActivate: [AdminAuthService, AuthGuardService] },\n  { path: 'request-reset-password', component: RequestResetComponent },\n  { path: 'response-reset-password/:token', component: ResponseResetComponent },\n  { path: 'refresh', component: RefreshComponent },\n  { path: 'rules', component: MentionsLegalesComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {scrollPositionRestoration: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthentificationService } from './service/authentification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(public auth: AuthentificationService) {\n  }\n}\n","<script>\n    //pour que la navbar responsive se referme lorsqu'on sélectionne un ongle\n    $(document).on('click', '.navbar-collapse.show', function (e) {\n        $(this).collapse('hide');\n    });\n</script>\n<script>\n    $(document).on(\"click\", function (e) {\n\t\te.preventDefault();\n\t\tvar $item = $(\".rad-dropmenu-item\");\n\t\tif ($item.hasClass(\"active\")) {\n\t\t\t$item.removeClass(\"active\");\n\t\t}\n    });\n    \n    $(\"a.rad-menu-item\").on(\"click\", function (e) {\n\t\tvar $item = $(\"ul.rad-dropmenu-item\");\n\t\tif (!$item.hasClass(\"active\")) {\n\t\t\t$item.toggleClass(\"active\");\n\t\t}\n\t});\n  </script>\n\n<!--script pour les liens de partages sur les réseaux sociaux-->\n<script type=\"text/javascript\"\n    src=\"https://platform-api.sharethis.com/js/sharethis.js#property=5e8ef1fbc08fd00012f1a697&product=inline-share-buttons\"\n    async=\"async\"></script>\n\n<script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script>\n\n<link href=\"//db.onlinewebfonts.com/c/ca42b7ce0d708ee0817789585c449739?family=PeachesandCreamRegularW00\" rel=\"stylesheet\" type=\"text/css\"/>\n\n\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" role=\"navigation\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\"\n        aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toogle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n\n    </button>\n    <img src=\"../assets/img/logo.jpeg\" class=\"rounded float-left\" alt=\"logo\" id=\"logo\">\n    <div class=\"collapse navbar-collapse justify-content-md-center\" id=\"navbarNavDropdown\">\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/\">Accueil </a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\"\n                    routerLink=\"/allRecipes\">Recettes</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/aboutMe\">A\n                    propos</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" [routerLink]=\"['/refresh']\"\n                    [queryParams]=\"{url:'contact'}\" skipLocationChange=\"true\">Contact</a>\n            </li>\n\n            <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" [routerLink]=\"['/refresh']\"\n                    [queryParams]=\"{url:'login'}\" skipLocationChange=\"true\">Se connecter</a>\n            </li>\n\n            <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" [routerLink]=\"['/refresh']\"\n                    [queryParams]=\"{url:'register'}\" skipLocationChange=\"true\">S'inscrire</a>\n            </li>\n\n            <li class=\"nav-item dropdown\" *ngIf=\"auth.isLoggedIn()\">\n                <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link dropdown-toggle\"\n                    id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    {{auth.getUserDetails()?.pseudo}}\n                </a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                    <a class=\"dropdown-item\" routerLink=\"/profile\">Mon profil</a>\n                    <a class=\"dropdown-item\" routerLink=\"/favorites\">Mes recettes ♥</a>\n                    <a class=\"dropdown-item\" routerLink=\"/shoppingList\">Ma liste de course</a>\n                    <a class=\"dropdown-item\" routerLink=\"/comment\">Mes commentaires</a>\n                    <a class=\"dropdown-item\" *ngIf=\"auth.isAdmin()\" routerLink=\"/handleRecipes\">Gerer les recettes</a>\n                    <a class=\"dropdown-item\" routerLink=\"\" (click)=\"auth.logout()\">Deconnexion</a>\n                </div>\n            </li>\n            <!--<div class=\"col\">\n                <div ngbDropdown class=\"d-inline-block\">\n                  <a id=\"dropdownBasic1\" ngbDropdownToggle><i class=\"fa fa-bell-o\"><span class=\"rad-menu-badge\">49</span></i></a>\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n                    <button ngbDropdownItem>Action - 1</button>\n                    <button ngbDropdownItem>Another Action</button>\n                    <button ngbDropdownItem>Something else is here</button>\n                  </div>\n                </div>\n              </div>-->\n        </ul>\n    </div>\n</nav>\n\n<router-outlet></router-outlet>\n\n<!--footer-->\n<!--logo insta-->\n<link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" type='text/css'>\n\n\n<footer>\n\n    <div class=\"dark-line\">\n        <h2> Marine's recipes |</h2>\n        <p>\"Eat good, feel good\" ||</p>\n        <div class=\"social\">\n            <a href=\"https://pin.it/3m5tTu0\"><i class=\"fa fa-lg fa-pinterest\"></i></a>\n            <a id=\"message\" href=\"https://www.instagram.com/marineteroitin/?hl=fr\"><i class=\"fa fa-lg fa-instagram\"></i></a>\n            <a routerLink=\"/contact\" id=\"message\"><i class=\"fa fa-lg fa-envelope\"></i></a>\n        </div>\n        <p>\n            <a id=\"ment\" routerLink=\"/rules\">Mentions légales</a>\n        </p>\n        <span class=\"copyright\"><a>© Concocté avec ♥ par Marine Téroitin & Luca Debeir • Tous droits réservés marinesrecipes.fr\n            </a></span>\n    </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {  } from '@angular/cdk';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { InscrireComponent } from './pages/inscrire/inscrire.component';\nimport { SeConnecterComponent } from './pages/se-connecter/se-connecter.component';\nimport { AccueilComponent } from './pages/accueil/accueil.component';\nimport { AuthentificationService, AuthGuardService, AdminAuthService, RecettesService } from './service';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { GererLesRecettesComponent } from './pages/gerer-les-recettes/gerer-les-recettes.component';\nimport { MaListeDeCoursesComponent } from './pages/ma-liste-de-courses/ma-liste-de-courses.component';\nimport { MesCommentairesComponent } from './pages/mes-commentaires/mes-commentaires.component';\nimport { MesRecettesComponent } from './pages/mes-recettes/mes-recettes.component';\nimport { MonProfileComponent } from './pages/mon-profile/mon-profile.component';\nimport { RecettesComponent } from './pages/recettes/recettes.component';\nimport { UpdatePasswordComponent } from './pages/update-password/update-password.component';\nimport { AProposComponent } from './pages/apropos/apropos.component';\nimport { RecetteComponent } from './pages/recette/recette.component';\nimport { IngredientsComponent } from './pages/ingredients/ingredients.component';\nimport { CategoriesComponent } from './pages/categories/categories.component';\nimport { UniteComponent } from './pages/unite/unite.component';\nimport { AjoutRecetteComponent } from './pages/ajout-recette/ajout-recette.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { ModifierRecetteComponent } from './pages/modifier-recette/modifier-recette.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RequestResetComponent } from './pages/request-reset/request-reset.component';\nimport { ResponseResetComponent } from './pages/response-reset/response-reset.component';\nimport { RefreshComponent } from './pages/refresh/refresh.component';\nimport { MentionsLegalesComponent } from './pages/mentions-legales/mentions-legales.component';\n\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { OwlModule } from 'ngx-owl-carousel';\nimport { CarouselModule } from 'ngx-owl-carousel-o';\nimport {NgxImageCompressService} from 'ngx-image-compress';\n\nimport { MaterialModule } from './modules/material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AProposComponent,\n    AccueilComponent,\n    MonProfileComponent,\n    InscrireComponent,\n    SeConnecterComponent,\n    ContactComponent,\n    GererLesRecettesComponent,\n    MaListeDeCoursesComponent,\n    MesCommentairesComponent,\n    MesRecettesComponent,\n    RecettesComponent,\n    UpdatePasswordComponent,\n    RecetteComponent,\n    IngredientsComponent,\n    CategoriesComponent,\n    UniteComponent,\n    AjoutRecetteComponent,\n    ModifierRecetteComponent,\n    RequestResetComponent,\n    ResponseResetComponent,\n    RefreshComponent,\n    MentionsLegalesComponent\n  ],\n  imports: [\n    MaterialModule,\n    CarouselModule,\n    OwlModule,\n    NgxPaginationModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    NgbModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [AuthGuardService, AuthentificationService, RecettesService, AdminAuthService, NgxImageCompressService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { NgModule } from '@angular/core';\n\nconst modules = [\n    MatSidenavModule,\n    MatListModule,\n    MatExpansionModule,\n    FlexLayoutModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule\n];\n\n@NgModule({\n    imports: [modules],\n    exports: [modules]\n})\nexport class MaterialModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RecettesService, CategoriesService } from '../../service';\nimport { RecipeDetails, Menu, CategoryDetails } from '../../models';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { OwlOptions } from 'ngx-owl-carousel-o';\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.scss']\n})\nexport class AccueilComponent implements OnInit {\n\n  public mostPopularRecipes: RecipeDetails[];\n  public latestRecipes: RecipeDetails[];\n\n  public menu: Menu = {\n    petitDej : null,\n    repas : null,\n    douceur : null\n  };\n\n  public petitDej: RecipeDetails = null;\n  public repas: RecipeDetails = null;\n  public douceur: RecipeDetails = null;\n\n  public recettes: RecipeDetails[];\n\n  public categories: CategoryDetails[];\n\n  customOptions: OwlOptions = {\n    autoplay: true,\n    autoplayTimeout: 5000,\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n    navText: ['Previous', 'Next'],\n    responsive: {\n      0: {\n        items: 2\n      },\n      430: {\n        items: 3\n      },\n      640: {\n        items: 4\n      },\n      850: {\n        items: 5\n      },\n      1055: {\n        items: 6\n      },\n      1250: {\n        items: 7\n      },\n      1450: {\n        items: 8\n      },\n      1600: {\n        items: 9\n      }\n    },\n    nav: false,\n    // autoWidth: true,\n    // autoHeight: true\n  };\n\n  constructor(private recetteService: RecettesService, private router: Router, private categoriesService: CategoriesService) {\n    this.getMostPopularRecipes();\n    this.getLatestReceipes();\n\n    this.categoriesService.getAllCategory().subscribe(data => {\n      this.categories = data;\n    });\n\n    this.recetteService.getAllRecipes().subscribe(data => {\n      this.recettes = data;\n    });\n\n    this.recetteService.getPetitDej().subscribe(data => {\n      this.petitDej = data;\n    });\n\n    this.recetteService.getRepas().subscribe(data => {\n      this.repas = data;\n    });\n\n    this.recetteService.getDouceur().subscribe(data => {\n      this.douceur = data;\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  getMenu() {\n\n    this.recetteService.getMenu().subscribe(\n      (menu: any) => {\n        menu.forEach(element => {\n          if (element.idMenu === 1) {\n            this.menu.petitDej = element;\n          } else if (element.idMenu === 2) {\n            this.menu.repas = element;\n          } else if (element.idMenu === 3) {\n            this.menu.douceur = element;\n          }\n        });\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Il n\\'y a pas encore de recettes.');\n          }\n        }\n      });\n  }\n\n  goToCategory(idCategorie: number) {\n    this.router.navigate(['/allRecipes', { id: idCategorie }]);\n  }\n\n  getMostPopularRecipes() {\n\n    this.recetteService.getMostPopularRecipes().subscribe(\n      (mostPopularRecipes: RecipeDetails[]) => {\n        this.mostPopularRecipes = mostPopularRecipes;\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Il n\\'y a pas encore de recettes.');\n          }\n        }\n      });\n  }\n\n  getLatestReceipes() {\n\n    this.recetteService.getLatestReceipes().subscribe(\n      (latestRecipes: RecipeDetails[]) => {\n        this.latestRecipes = latestRecipes;\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Il n\\'y a pas encore de recettes.');\n          }\n        }\n      });\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload();\n        });\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Cette recette n\\'existe pas !');\n          }\n        }\n      });\n  }\n\n}\n","<script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\"\n    integrity=\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\"\n    crossorigin=\"anonymous\"></script>\n<script>window.jQuery || document.write('<script src=\"/docs/4.4/assets/js/vendor/jquery.slim.min.js\"><\\/script>')</script>\n<script src=\"/docs/4.4/dist/js/bootstrap.bundle.min.js\"\n    integrity=\"sha384-6khuMg9gaYr5AxOqhkVIODVIvm9ynTT5J4V1cfthmT+emCG6yVmEZsRHdxlotUnm\"\n    crossorigin=\"anonymous\"></script>\n<script src=\"https://ajax.cloudflare.com/cdn-cgi/scripts/7089c43e/cloudflare-static/rocket-loader.min.js\"></script>\n\n<main role=\"main\">\n\n    <div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\n        <ol class=\"carousel-indicators\">\n            <li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>\n            <li data-target=\"#myCarousel\" data-slide-to=\"1\" class=\"\"></li>\n            <li data-target=\"#myCarousel\" data-slide-to=\"2\" class=\"\"></li>\n        </ol>\n        <div class=\"carousel-inner\">\n            <div class=\"carousel-item\" *ngFor=\"let recette of this.latestRecipes;let index = index;let isFirst = first\"\n                [ngClass]=\"{active:isFirst}\"\n                [ngStyle]=\"{'background-image': 'url(&quot;' + recette.lienImage + '&quot;)'}\">\n                <img class=\"bd-placeholder-img\" width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMidYMid slice\"\n                    focusable=\"false\" role=\"img\">\n                <div class=\"container\">\n                    <div class=\"carousel-caption\">\n                        <ul class=\"post-categories\">\n                            <li *ngFor=\"let category of recette.categories\"><a\n                                    rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                        </ul>\n                        <h1>{{recette.nomRecette}}</h1>\n                        <div class=\"post-more\">\n                            <a (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\"\n                                class=\"btn btn-primary btn-effect\">\n                                <span>Voir...</span>\n                                <span><i class=\"fa fa-long-arrow-right\"></i></span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--<div class=\"carousel-item\">\n                <svg class=\"bd-placeholder-img\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\n                    preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n                    <rect width=\"100%\" height=\"100%\" fill=\"#777\"></rect>\n                </svg>\n                <div class=\"container\">\n                    <div class=\"carousel-caption\">\n                        <h1>Another example headline.</h1>\n                        <p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta\n                            gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n                        <p><a class=\"btn btn-lg btn-primary\" href=\"#\" role=\"button\">Learn more</a></p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"carousel-item\">\n                <svg class=\"bd-placeholder-img\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\n                    preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n                    <rect width=\"100%\" height=\"100%\" fill=\"#777\"></rect>\n                </svg>\n                <div class=\"container\">\n                    <div class=\"carousel-caption text-right\">\n                        <h1>One more for good measure.</h1>\n                        <p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta\n                            gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n                        <p><a class=\"btn btn-lg btn-primary\" href=\"#\" role=\"button\">Browse gallery</a></p>\n                    </div>\n                </div>\n            </div>-->\n        </div>\n        <a class=\"carousel-control-prev\" href=\"#myCarousel\" role=\"button\" data-slide=\"prev\">\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Previous</span>\n        </a>\n        <a class=\"carousel-control-next\" href=\"#myCarousel\" role=\"button\" data-slide=\"next\">\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Next</span>\n        </a>\n    </div>\n\n\n    <!-- Marketing messaging and featurettes\n    ================================================== -->\n    <!-- Wrap the rest of the page in another container to center all the content. -->\n\n    <h4 class=\"title-trending\">Les plus vues</h4>\n\n    <div class=\"container marketing\">\n\n        <!-- Three columns of text below the carousel -->\n        <div class=\"row\">\n            <div class=\"col-lg-4\" *ngFor=\"let recette of this.mostPopularRecipes\">\n                <div id=\"imgSize\">\n                    <div class=\"box\">\n                        <img id=\"imgCard\" class=\"bd-placeholder-img\" width=\"180\" height=\"auto\"\n                            src=\"{{recette.lienImage}}\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\"\n                            role=\"img\">\n                    </div>\n                </div>\n                <ul class=\"post-categories2\">\n                    <li *ngFor=\"let category of recette.categories\"><a\n                            rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                </ul>\n                <h2 id=\"cardTitle\">{{recette.nomRecette}}</h2>\n                <div id=\"container\">\n                    <div class=\"centre\">\n                        {{recette.mot}}\n                    </div><!-- centre -->\n                </div>\n                <p><a (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\"\n                        class=\"btn btn-primary btn-effect top\">\n                        <span>Voir »</span>\n                        <span><i class=\"fa fa-long-arrow-right\"></i></span>\n                    </a></p>\n            </div><!-- /.col-lg-4 -->\n        </div><!-- /.row -->\n\n        <hr class=\"featurette-divider\">\n\n        <h4 class=\"title-trending\">Suggestions du moment</h4>\n\n        <section class=\"ftco-section\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-md-9\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6 col-lg-6 ftco-animate fadeInUp ftco-animated\" *ngIf=\"petitDej\">\n                                <div class=\"blog-entry\">\n                                    <div class=\"img img-big img-big-2 d-flex align-items-end\"\n                                        [ngStyle]=\"{'background-image': 'url(&quot;' + petitDej.lienImage + '&quot;)'}\">\n                                        <div class=\"overlay\"></div>\n                                        <div class=\"text\">\n                                            <ul class=\"post-categories\">\n                                                <li *ngFor=\"let category of petitDej.categories\"><a\n                                                        rel=\"category tag\"><span\n                                                            class=\"subheading\">{{category.libelleCategorie}}</span></a>\n                                                </li>\n                                            </ul>\n                                            <h3><a class=\"img\">{{petitDej.nomRecette}}</a></h3>\n                                            <div class=\"card-info\">\n                                                {{petitDej.mot}}\n                                            </div>\n                                            <p class=\"mb-0\"><a (click)=\"updateNbView(petitDej)\"\n                                                    [routerLink]=\"['/recipe', petitDej.idRecette]\"\n                                                    class=\"btn-custom btn-effect\"><span>Voir</span>\n                                                    <span><i class=\"fa fa-long-arrow-right\"></i></span></a></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6 col-lg-6 ftco-animate fadeInUp ftco-animated\" *ngIf=\"repas\">\n                                <div class=\"blog-entry\">\n                                    <div class=\"img img-big img-big-2 d-flex align-items-end\"\n                                        [ngStyle]=\"{'background-image': 'url(&quot;' + repas.lienImage + '&quot;)'}\">\n                                        <div class=\"overlay\"></div>\n                                        <div class=\"text\">\n                                            <ul class=\"post-categories\">\n                                                <li *ngFor=\"let category of repas.categories\"><a\n                                                        rel=\"category tag\"><span\n                                                            class=\"subheading\">{{category.libelleCategorie}}</span></a>\n                                                </li>\n                                            </ul>\n                                            <h3><a class=\"img\">{{repas.nomRecette}}</a></h3>\n                                            <div class=\"card-info\">\n                                                {{repas.mot}}\n                                            </div>\n                                            <p class=\"mb-0\"><a (click)=\"updateNbView(repas)\"\n                                                    [routerLink]=\"['/recipe', repas.idRecette]\"\n                                                    class=\"btn-custom btn-effect\"><span>Voir</span>\n                                                    <span><i class=\"fa fa-long-arrow-right\"></i></span></a></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12 col-lg-12 ftco-animate fadeInUp ftco-animated\" *ngIf=\"douceur\">\n                                <div class=\"blog-entry\">\n                                    <div class=\"img img-big img-big-2 d-flex align-items-end\"\n                                        [ngStyle]=\"{'background-image': 'url(&quot;' + douceur.lienImage + '&quot;)'}\">\n                                        <div class=\"overlay\"></div>\n                                        <div class=\"text\">\n                                            <ul class=\"post-categories\">\n                                                <li *ngFor=\"let category of douceur.categories\"><a\n                                                        rel=\"category tag\"><span\n                                                            class=\"subheading\">{{category.libelleCategorie}}</span></a>\n                                                </li>\n                                            </ul>\n                                            <h3><a class=\"img\">{{douceur.nomRecette}}</a></h3>\n                                            <div class=\"card-info\">\n                                                {{douceur.mot}}\n                                            </div>\n                                            <p class=\"mb-0\"><a (click)=\"updateNbView(douceur)\"\n                                                    [routerLink]=\"['/recipe', douceur.idRecette]\"\n                                                    class=\"btn-custom btn-effect\"><span>Voir</span>\n                                                    <span><i class=\"fa fa-long-arrow-right\"></i></span></a></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <div class=\"sidebar-wrap pt-4\">\n                            <div class=\"sidebar-box categories text-center ftco-animate fadeInUp ftco-animated\">\n                                <h2 class=\"heading mb-4\">Catégories</h2>\n                                <ul class=\"category-image\">\n                                    <li *ngFor=\"let categ of categories\">\n                                        <a *ngIf=\"categ.idCategorie == 1\" (click)=\"goToCategory(categ.idCategorie)\"\n                                            class=\"img d-flex align-items-center justify-content-center text-center\"\n                                            style=\"background-image: url(../../assets/img/categories/cookie-brioché.jpg); box-shadow: inset 30em 30em rgba(0, 0, 0, 0.35);\">\n                                            <div class=\"text\">\n                                                <h3>{{categ.libelleCategorie}}</h3>\n                                            </div>\n                                        </a>\n                                        <a *ngIf=\"categ.idCategorie == 2\" (click)=\"goToCategory(categ.idCategorie)\"\n                                            class=\"img d-flex align-items-center justify-content-center text-center\"\n                                            style=\"background-image: url(../../assets/img/categories/pancakes.jpg); box-shadow: inset 30em 30em rgba(0, 0, 0, 0.35);\">\n                                            <div class=\"text\">\n                                                <h3>{{categ.libelleCategorie}}</h3>\n                                            </div>\n                                        </a>\n                                        <a *ngIf=\"categ.idCategorie == 3\" (click)=\"goToCategory(categ.idCategorie)\"\n                                            class=\"img d-flex align-items-center justify-content-center text-center\"\n                                            style=\"background-image: url(../../assets/img/categories/healthy.jpg); box-shadow: inset 30em 30em rgba(0, 0, 0, 0.35);\">\n                                            <div class=\"text\">\n                                                <h3>{{categ.libelleCategorie}}</h3>\n                                            </div>\n                                        </a>\n                                        <a *ngIf=\"categ.idCategorie == 4\" (click)=\"goToCategory(categ.idCategorie)\"\n                                            class=\"img d-flex align-items-center justify-content-center text-center\"\n                                            style=\"background-image: url(../../assets/img/categories/boisson.png); box-shadow: inset 30em 30em rgba(0, 0, 0, 0.35);\">\n                                            <div class=\"text\">\n                                                <h3>{{categ.libelleCategorie}}</h3>\n                                            </div>\n                                        </a>\n                                        <a *ngIf=\"categ.idCategorie == 5\" (click)=\"goToCategory(categ.idCategorie)\"\n                                            class=\"img d-flex align-items-center justify-content-center text-center\"\n                                            style=\"background-image: url(../../assets/img/categories/pois-chiches.jpg); box-shadow: inset 30em 30em rgba(0, 0, 0, 0.35);\">\n                                            <div class=\"text\">\n                                                <h3>{{categ.libelleCategorie}}</h3>\n                                            </div>\n                                        </a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n\n        <!-- START THE FEATURETTES -->\n\n        <!--<hr class=\"featurette-divider\">\n\n        <h4 class=\"title-trending\">Suggestions du moment</h4>\n\n        <div class=\"row featurette\" *ngIf=\"petitDej\">\n            <div class=\"col-md-8\">\n                <h2 class=\"featurette-heading\">Ma lubie du matin </h2>\n                <h3 class=\"featurette-heading text-muted\" (click)=\"updateNbView(petitDej)\"\n                    [routerLink]=\"['/recipe', petitDej.idRecette]\">{{petitDej.nomRecette}}</h3>\n                <p class=\"lead\">{{petitDej.mot}}</p>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"box\">\n                    <ul class=\"post-categories2\">\n                        <li *ngFor=\"let category of petitDej.categories\"><a\n                                rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                    </ul>\n                    <img class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\" width=\"500\"\n                        height=\"500\" preserveAspectRatio=\"xMidYMid slice\" src={{petitDej.lienImage}} focusable=\"false\"\n                        role=\"img\" (click)=\"updateNbView(petitDej)\" [routerLink]=\"['/recipe', petitDej.idRecette]\">\n                </div>\n            </div>\n        </div>\n\n\n        <hr class=\"featurette-divider\">\n\n        <div class=\"row featurette\" *ngIf=\"repas\">\n            <div class=\"col-md-8 order-md-2\">\n                <h2 class=\"featurette-heading\">Mon plat préféré </h2>\n                <h3 class=\"featurette-heading text-muted\" (click)=\"updateNbView(repas)\"\n                    [routerLink]=\"['/recipe', repas.idRecette]\">{{repas.nomRecette}}</h3>\n                <p class=\"lead\">{{repas.mot}}</p>\n            </div>\n            <div class=\"col-md-4 order-md-1\">\n                <div class=\"box\">\n                    <ul class=\"post-categories2\">\n                        <li *ngFor=\"let category of repas.categories\"><a\n                                rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                    </ul>\n                    <img class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\" width=\"500\"\n                        height=\"500\" preserveAspectRatio=\"xMidYMid slice\" src={{repas.lienImage}} focusable=\"false\"\n                        role=\"img\" (click)=\"updateNbView(repas)\" [routerLink]=\"['/recipe', repas.idRecette]\">\n                </div>\n            </div>\n        </div>\n\n        <hr class=\"featurette-divider\">\n\n        <div class=\"row featurette\" *ngIf=\"douceur\">\n            <div class=\"col-md-8\">\n                <h2 class=\"featurette-heading\">Ma douceur du moment </h2>\n                <h3 class=\"featurette-heading text-muted\" (click)=\"updateNbView(douceur)\"\n                    [routerLink]=\"['/recipe', douceur.idRecette]\">{{douceur.nomRecette}}</h3>\n                <p class=\"lead\">{{douceur.mot}}</p>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"box\">\n                    <ul class=\"post-categories2\">\n                        <li *ngFor=\"let category of douceur.categories\"><a\n                                rel=\"category tag\">{{category.libelleCategorie}}</a></li>\n                    </ul>\n                    <img class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\" width=\"500\"\n                        height=\"500\" preserveAspectRatio=\"xMidYMid slice\" src={{douceur.lienImage}} focusable=\"false\"\n                        role=\"img\" (click)=\"updateNbView(douceur)\" [routerLink]=\"['/recipe', douceur.idRecette]\">\n                </div>\n            </div>\n        </div>-->\n\n        <hr class=\"featurette-divider\">\n\n        <!-- /END THE FEATURETTES -->\n\n    </div><!-- /.container -->\n\n\n    <owl-carousel-o [options]=\"customOptions\">\n        <ng-template carouselSlide *ngFor=\"let recette of recettes\">\n            <div class=\"owl-stage\"\n                style=\"transform: translate3d(-1243px, 0px, 0px); transition: all 0.25s ease 0s; width: 3730px;\">\n                <div class=\"owl-item\" style=\"width: 207.167px;\">\n                    <div class=\"gs-item set-bg\" (click)=\"updateNbView(recette)\"\n                        [routerLink]=\"['/recipe', recette.idRecette]\"\n                        [ngStyle]=\"{'background-image': 'url(&quot;' + recette.lienImage + '&quot;)'}\"\n                        style=\"height: 298.656px; background-size: cover; background-position: center;\">\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </owl-carousel-o>\n</main>","import { Component, OnInit } from '@angular/core';\nimport {\n  RecettesService, UserDetails, AuthentificationService, IngredientsService, UnitesService,\n  CategoriesService, ImagesService\n} from '../../service';\nimport { CategoryDetails, IngredientDetails, UniteDetails, CreateRecipe } from '../../models';\nimport { FormGroup, FormArray, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n// la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { NgxImageCompressService } from 'ngx-image-compress';\n\n@Component({\n  selector: 'app-ajout-recette',\n  templateUrl: './ajout-recette.component.html',\n  styleUrls: ['./ajout-recette.component.scss']\n})\nexport class AjoutRecetteComponent implements OnInit {\n\n  images;\n\n  recipe: CreateRecipe = {\n    idRecette: null,\n    nomRecette: '',\n    categories: null,\n    ingredients: null,\n    idImage: null,\n    etapes: '',\n    nbrePart: null,\n    libellePart: '',\n    tempsPreparation: null,\n    tempsCuisson: null,\n    astuce: ''\n  };\n\n  public ingredients: IngredientDetails[];\n  public unites: UniteDetails[];\n  public categories: CategoryDetails[];\n\n  public recipeForm: FormGroup;\n  public newIngredientForm: FormGroup;\n  public ingredientForm: FormGroup;\n  public ingredient: FormArray;\n  public selectIngredient: number[] = [];\n  private listAbonneNews$: Observable<UserDetails[]>;\n\n  public newIngredient: IngredientDetails = {\n    nomIngredient: ''\n  };\n\n  // pour multiple select\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings: IDropdownSettings;\n  fileToUpload: File = null;\n\n  // pour compresser image\n  file: any;\n  localUrl: any;\n  localCompressedURl: any;\n  sizeOfOriginalImage: number;\n  sizeOFCompressedImage: number;\n  imgResultBeforeCompress: string;\n  imgResultAfterCompress: string;\n\n  constructor(private recetteService: RecettesService, private formBuilder: FormBuilder, private router: Router,\n              private modalService: NgbModal, private http: HttpClient, private auth: AuthentificationService,\n              private ingredientsService: IngredientsService, private unitesService: UnitesService,\n              private categoriesService: CategoriesService, private imagesService: ImagesService,\n              private imageCompress: NgxImageCompressService) { }\n\n  ngOnInit(): void {\n    // on récupère tous les ingrédients, unités, catégories pour les réponses possibles à notre formulaire\n    this.ingredientsService.getAllIngredients().subscribe(\n      ingredients => {\n        ingredients.forEach(element => {\n          element.disabled = false;\n        });\n        this.ingredients = ingredients;\n      }\n    );\n\n    this.unitesService.getAllUnite().subscribe(\n      unites => {\n        this.unites = unites;\n      }\n    );\n\n    this.categoriesService.getAllCategory().subscribe(\n      categories => {\n        this.categories = categories;\n      }\n    );\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'idCategorie',\n      textField: 'libelleCategorie',\n      enableCheckAll: false,\n      itemsShowLimit: 3,\n      allowSearchFilter: true,\n      searchPlaceholderText: 'Rechercher'\n    };\n\n    this.initRecipeForm();\n\n    this.createIngredientsForm();\n\n    this.onChanges();\n\n  }\n\n  selectFile(event: any) {\n    let fileName: any;\n    this.file = event.target.files[0];\n    fileName = this.file.name;\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        this.localUrl = event.target.result;\n        this.compressFile(this.localUrl, fileName);\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  compressFile(image, fileName) {\n    const orientation = -1;\n    this.sizeOfOriginalImage = this.imageCompress.byteCount(image) / (1024 * 1024);\n    console.warn('Size in bytes is now:', this.sizeOfOriginalImage);\n    this.imageCompress.compressFile(image, orientation, 50, 50).then(\n      result => {\n        this.imgResultAfterCompress = result;\n        this.localCompressedURl = result;\n        this.sizeOFCompressedImage = this.imageCompress.byteCount(result) / (1024 * 1024);\n        console.warn('Size in bytes after compression:', this.sizeOFCompressedImage);\n        // create file from byte\n        const imageName = fileName;\n        // imageFile created below is the new compressed file which can be send to API in form data\n        const imageFile = new File([result], imageName, { type: 'image/jpeg' });\n\n        this.images = imageFile;\n      });\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.images = file;\n    }\n  }\n\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('file', this.images);\n\n    this.http.post<any>('/server/uploads', formData).subscribe(\n      (res) => console.log(res),\n      (err) => console.log(err)\n    );\n  }\n\n  createRecipe() {\n\n    const formValue = this.recipeForm.value;\n    const ingredientFormValue = this.ingredientForm.value;\n    const formData = new FormData();\n    formData.append('file', this.images);\n\n    if (formValue.etapes === '' && formValue.nomRecette === '' && this.selectedItems.length === 0) {\n      alert('Vous devez remplir le champ du nom de la recette, au moins une catégorie de la recette et le champ de la Préparation.');\n      return;\n    } else if (formValue.etapes === '' && formValue.nomRecette === '') {\n      alert('Vous devez remplir le champ du nom de la recette, et celui de la préparation.');\n      return;\n    } else if (formValue.nomRecette === '' && this.selectedItems.length === 0) {\n      alert('Vous devez remplir le champ du nom de la recette, et sélectionner au moins une catégorie.');\n      return;\n    } else if (formValue.etapes === '' && this.selectedItems.length === 0) {\n      alert('Vous devez remplir le champ de la préparation, et sélectionner au moins une catégorie.');\n      return;\n    } else if (this.selectedItems.length === 0) {\n      alert('Vous devez choisir au moins une catégorie pour votre recette.');\n      return;\n    } else if (formValue.etapes === '') {\n      alert('Vous devez choisir le champ de la préparation.');\n      return;\n    } else if (formValue.nomRecette === '') {\n      alert('Vous devez remplir le champ du nom de la recette.');\n      return;\n    } else if (this.ingredientForm.value.ingredient.forEach(element => {\n      if (element.qte <= 0) {\n        alert('Il faut une quantité positive pour l\\'ingrédient.');\n        return;\n      }\n    })) {\n\n      console.log(ingredientFormValue.ingredient);\n    }\n    this.recipe.ingredients = ingredientFormValue.ingredient; // je récupère les info sur l'ingrédient\n\n    this.recipe.categories = this.selectedItems;\n    this.recipe.nomRecette = formValue.nomRecette;\n    this.recipe.etapes = formValue.etapes;\n    this.recipe.nbrePart = formValue.nbrePart;\n    this.recipe.libellePart = formValue.libellePart;\n    this.recipe.tempsPreparation = formValue.tempsPreparation;\n    this.recipe.tempsCuisson = formValue.tempsCuisson;\n    this.recipe.astuce = formValue.astuce;\n    this.imagesService.addImage(formData).subscribe(res => {\n      this.recipe.idImage = res[0];\n      this.recetteService.createRecipe(this.recipe).subscribe(res => {\n        this.recipe.idRecette = res[0]; // je récupère l'id de la recette que je viens de créer\n        this.recetteService.addIngredientsAndCategoryToNewRecipe(this.recipe).subscribe(res => {\n          this.listAbonneNews$ = this.auth.getAbonneNews();\n          this.listAbonneNews$.subscribe(res => {\n            res.forEach(element => {\n              this.auth.sentEmailToNewRecipe(element, this.recipe.idRecette).subscribe();\n            });\n          });\n        });\n      });\n\n\n      this.router.navigateByUrl('handleRecipes');\n    });\n  }\n\n  initRecipeForm() {\n    this.recipeForm = this.formBuilder.group({\n      nomRecette: ['', [Validators.required, Validators.max(45)]],\n      categories: ['', Validators.required],\n      ingredients: [''],\n      etapes: ['', Validators.required],\n      nbrePart: ['', Validators.required],\n      libellePart: ['', Validators.required],\n      tempsPreparation: ['', Validators.required],\n      tempsCuisson: ['', Validators.required],\n      astuce: ['', Validators.required]\n    });\n  }\n\n  /******  création formulaire pour ajouter autant de lignes ingrédient (qté, nom, unite) qu'on veut *****/\n  // création initiale formulaire ingredients\n  createIngredientsForm(): FormGroup {\n    return this.ingredientForm = this.formBuilder.group({\n      ingredient: this.formBuilder.array([this.createIngredientForm()])\n    });\n  }\n\n  createIngredientForm(): FormGroup {\n    return this.formBuilder.group({\n      idIngredient: new FormControl({\n        value: '',\n        disabled: false\n      },\n        Validators.compose([Validators.required])),\n      nomIngredient: new FormControl({\n        value: '',\n        disabled: false\n      }),\n      qte: new FormControl({\n        value: '',\n        disabled: false\n      },\n        Validators.compose([Validators.required, Validators.min(0)])),\n      idUnite: new FormControl({\n        value: '',\n        default: ' ',\n        disabled: false\n      })\n    });\n  }\n\n  onChanges(): void {\n    this.ingredientForm.valueChanges.subscribe(val => {\n      // this.selectIngredient = []\n      this.ingredients.forEach(ingredient => {\n        ingredient.disabled = false;\n      });\n      this.ingredients.forEach(ingredient => {\n        val.ingredient.forEach(element => {\n          if (element.nomIngredient !== '') {\n            if (ingredient.nomIngredient === element.nomIngredient) {\n              ingredient.disabled = true;\n              element.idIngredient = ingredient.idIngredient;\n            }\n            // this.selectIngredient.push(element.idIngredient)\n          }\n\n        });\n      });\n    });\n  }\n\n  get formData() { return this.ingredientForm.get('ingredient'); }\n\n  // pour ajouter un ingrédient\n  addIngredient(): void {\n    this.ingredient = this.ingredientForm.get('ingredient') as FormArray;\n    this.ingredient.push(this.createIngredientForm());\n  }\n  /*****************************/\n\n  // récupérer le nom du new ingrédient et l'enregistrer dans la bd\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.nomIngredient = result;\n        this.ingredientsService.addIngredient(this.newIngredient);\n        setTimeout(() => {\n          this.ingredientsService.getAllIngredients().subscribe(\n            ingredients => {\n              this.ingredients = ingredients;\n            }\n          );\n        }, 1000);\n      });\n  }\n\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n\n        <div class=\"text-center\">\n            <h1>Ajout d'une nouvelle recette</h1>\n        </div>\n\n        <form [formGroup]=\"recipeForm\" (ngSubmit)=\"createRecipe()\">\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n                    <td>\n                        <label>Nom de la recette</label>\n                    </td>\n                    <td id=\"nomRecette\" style=\"vertical-align:middle;\">\n                        <input type=\"text\" formControlName=\"nomRecette\" class=\"form-control\" required>\n                    </td>\n\n                </tr>\n            </table>\n            <table class=\"table col-md-8 mx-auto\">\n                <tr>\n                    <td>\n                        <form>\n                            <div id=\"image\">\n                                <input type=\"file\" name=\"file\" id=\"file\" class=\"inputfile\" name=\"image\" (change)=\"selectFile($event)\" />\n                                <label id=\"positionImage\" for=\"file\">Choisir une image</label>\n                            </div>\n                            <br>\n                        </form>\n                    </td>\n\n                </tr>\n\n            </table>\n\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr class=\"table col-md-8 mx-auto\">\n                    <td>\n                        <label>Catégorie</label>\n                    </td>\n                    <td>\n                        <form>\n                            <div id=\"ingrForm\" class=\"form-row\" style=\"justify-content: center;\">\n\n                                <ng-multiselect-dropdown [data]=\"categories\" placeholder=\"sélectionner\" [settings]=\"dropdownSettings\" [(ngModel)]=\"selectedItems\" [ngModelOptions]=\"{standalone: true}\">\n                                </ng-multiselect-dropdown>\n\n                            </div>\n                        </form>\n                    </td>\n                    <td>\n                        <div class=\"invalid-tooltip\">\n                            Selectionnez une catégorie.\n                        </div>\n                    </td>\n                </tr>\n\n            </table>\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n                    <td>\n                        <label>Nombre de parts</label>\n\n\n                        <input type=\"number\" class=\"form-control\" formControlName=\"nbrePart\" required>\n\n\n                        <div class=\"invalid-tooltip\">\n                            Rentrez une quantité correcte.\n                            <!--Vérifier que c'est pas négatif ou nulle-->\n\n                        </div>\n                    </td>\n\n                    <td>\n                        <label>Libellé des parts</label>\n\n                        <input type=\"text\" class=\"form-control\" formControlName=\"libellePart\" required>\n\n                        <div class=\"invalid-tooltip\">\n                            Rentrez une quantité correcte.\n                            <!--Vérifier que c'est pas négatif ou nulle-->\n                        </div>\n                    </td>\n\n\n                </tr>\n\n            </table>\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <ul>\n\n                    <form [formGroup]=\"ingredientForm\">\n                        <!--formulaire ingrédients-->\n\n                        <div formArrayName=\"ingredient\">\n                            <div *ngFor=\"let ing of formData['controls']; let idx = index\" [formGroupName]=\"idx\" class=\"ingredient\">\n                                <!--idx = indexe d'une ligne ingrédient du formulaire-->\n                                <tr>\n                                    <td id=\"nomIng\">\n\n\n\n                                        <label for=\"validationTooltip04\">Ingrédient</label>\n                                        <input id=\"validationTooltip04\" list=\"brow\" formControlName=\"nomIngredient\">\n                                        <datalist id=\"brow\">\n                                            <option *ngFor=\"let ingredient of ingredients\"\n                                                [ngValue]=\"ingredient.nomIngredient\" [disabled]=\"ingredient.disabled\">\n                                                {{ingredient.nomIngredient}}</option>\n                                        </datalist>\n                                        <!--<ng-select class=\"custom\" [items]=\"ingredients\" bindLabel=\"nomIngredient\" class=\"custom-select\" id=\"validationTooltip04\"\n                                                    bindValue=\"idIngredient\" formControlName=\"idIngredient\"\n                                                        role=\"listbox\" ng-reflect-bind-label=\"nomIngredient\" ng-reflect-bind-value=\"idIngredient\">\n                                                    </ng-select>-->\n\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez un ingrédient.\n                                        </div>\n                                    </td>\n                                    <td id=\"qteIng\">\n\n                                        <label for=\"validationTooltip05\">Quantité</label>\n                                        <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\" formControlName=\"qte\" required>\n                                        <div class=\"invalid-tooltip\">\n                                            Rentrez une quantité correcte.\n                                            <!--Vérifier que c'est pas négatif ou nulle-->\n                                        </div>\n\n                                    </td>\n\n                                    <td id=\"nomIng\">\n\n                                        <label for=\"validationTooltip04\">Unité</label>\n                                        <select class=\"custom-select\" id=\"validationTooltip04\" formControlName=\"idUnite\" required>\n                                            <option *ngFor=\"let unite of unites\" [ngValue]=\"unite.idUnite\">\n                                                {{unite.libelleUnite}}\n                                            </option>\n                                        </select>\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez une unité.\n                                        </div>\n\n                                    </td>\n                                </tr>\n                            </div>\n                        </div>\n\n                        <div style=\"text-align: -webkit-center;\">\n                            <tr id=\"buttonIngredient\">\n                                <td>\n\n                                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"addIngredient()\">Ajouter un\n                                            nouvel\n                                            ingrédient</button>\n\n                                </td>\n\n                                <ng-template #content let-modal>\n                                    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                                    <div class=\"modal-header\">\n                                        <h4 class=\"modal-title\"></h4>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        <form>\n                                            <div class=\"form-group\">\n                                                <label for=\"nomIngredient\"> Nom de l'ingrédient </label>\n                                                <div class=\"input-group\">\n                                                    <input id=\"nomIngredient\" class=\"form-control\" placeholder=\"Cacahuète\" #nomIngredient=\"ngModel\" [(ngModel)]=\"newIngredient.nomIngredient\" [ngModelOptions]=\"{standalone: true}\">\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close(newIngredient.nomIngredient)\">Ajouter</button>\n                                    </div>\n                                </ng-template>\n                                <td>\n                                    <button class=\"btn btn-primary\" (click)=\"open(content)\">Créer un nouvel\n                                        ingrédient</button>\n                                    <!--on appelle le modal-->\n\n                                </td>\n                            </tr>\n                        </div>\n\n                    </form>\n                    <!--fin du formulaire ingrédients-->\n\n                </ul>\n\n            </table>\n\n\n\n\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n\n                    <div id=\"ingrForm\" class=\"form-row\">\n                        <td>\n                            <label>Temps de préparation</label>\n                            <input type=\"time\" class=\"form-control\" formControlName=\"tempsPreparation\" step=\"2\" required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n                        <td>\n                            <label>Temps de cuisson</label>\n                            <input type=\"time\" class=\"form-control\" formControlName=\"tempsCuisson\" step=\"2\" required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n                    </div>\n                </tr>\n\n            </table>\n\n            <table class=\"table col-md-8 mx-auto\">\n\n                <tr>\n                    <td>\n                        <label>Préparation</label>\n\n                        <textarea class=\"form-control\" formControlName=\"etapes\" id=\"exampleFormControlTextarea1\" rows=\"8\" required></textarea>\n                    </td>\n                </tr>\n\n                <tr>\n                    <td>\n                        <label>Astuces</label>\n\n                        <textarea class=\"form-control\" formControlName=\"astuce\" id=\"exampleFormControlTextarea1\" rows=\"8\" required></textarea>\n                    </td>\n                </tr>\n\n            </table>\n\n\n\n\n            <div class=\"col text-center\">\n                <button id=\"validateButton\" type=\"submit\" class=\"col-ld-6 btn btn-primary\">Valider</button>\n            </div>\n        </form>\n\n\n        <script>\n            $(document).ready(function() {\n                $('select').formSelect();\n                $('select.select_all').siblings('ul').prepend('<li id=sm_select_all><span>Select All</span></li>');\n                $('li#sm_select_all').on('click', function() {\n                    var jq_elem = $(this),\n                        jq_elem_span = jq_elem.find('span'),\n                        select_all = jq_elem_span.text() == 'Select All',\n                        set_text = select_all ? 'Select None' : 'Select All';\n                    jq_elem_span.text(set_text);\n                    jq_elem.siblings('li').filter(function() {\n                        return $(this).find('input').prop('checked') != select_all;\n                    }).click();\n                });\n            })\n        </script>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-apropos',\n  templateUrl: './apropos.component.html',\n  styleUrls: ['./apropos.component.css']\n})\nexport class AProposComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"mt-5\">A propos</h1>\n<div id=\"conteneur\">\n  <div class=\"element 1 mb-3 col-lg-6 col-md-6 col-sm-6 p-3\">\n    <img src=\"../../assets/img/me.jpeg\" class=\"img-fluid\" width=\"auto\" height=\"auto\" alt=\"photo de l'auteur du site.\">\n  </div>\n  <div class=\"element 2 mb-3 col-lg-6 col-md-6 col-sm-6\">\n    <div id=\"conteneur1\">\n      <p id=\"c1\" class=\"mb-0\">\n        <ul>\n          <li> Je m'appelle Marine.</li>\n          <li> J'ai 21 printemps, et j'étudie dans une école d'ingénieur. </li>\n          <li> Depuis mon plus jeune âge, j'adore cuisiner. </li>\n          <li>J'ai créé ce site afin de partager les recettes que j'aime réaliser au quotidien.</li>\n        </ul>\n    \n      <p id=\"c2\" class=\"mb-0\">\n        <ul>\n          <li> Vous avez accès à toutes les recettes sans être connecté !</li>\n       <li>Créer un compte vous permettra de mettre des recettes en favoris et de les retrouver plus facilement.\n        Vous pourrez aussi créer une liste de course directement à partir des recettes.\n        Si vous le souhaitez, des notifications par mail peuvent vous avertir de l'arrivée d'une nouvelle recette afin\n        de ne rien rater.</li>\n      </ul>\n      \n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RecettesService, CategoriesService} from '../../service';\nimport { CategoryDetails } from '../../models';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n  public categories: CategoryDetails[];\n\n  public categorie: CategoryDetails = {\n    idCategorie: null,\n    libelleCategorie: ''\n  };\n\n\n  constructor(private recettesService: RecettesService, private router: Router, private categoriesService: CategoriesService) { }\n\n  ngOnInit(): void {\n\n    this.categoriesService.getAllCategory().subscribe(\n      categories => {\n\n        this.categories = categories;\n      }\n    );\n  }\n\n  deleteCategory(idCategorie: any) {\n    this.categoriesService.deleteCategory(idCategorie)\n      .subscribe(res => {\n        this.router.navigate(['/category'], {\n          queryParams: {refresh: new Date().getTime()}\n       });\n        }, (err) => {\n          console.log(err);\n        }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n\n  updateCategory(categorie: CategoryDetails) {\n    this.categoriesService.updateCategory(categorie).subscribe((res: any) => {\n        window.location.reload();\n      }, (err: any) => {\n        console.error(err);\n      }\n    );\n  }\n\n  addCategory() {\n    this.categoriesService.addCategory(this.categorie);\n    window.location.reload();\n  }\n}\n\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside id=\"aside\" class=\"sidebar is-visible\">\n                    <div class=”sidebar-content”>\n                        <ul>\n                            <li><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li class=\"active\"><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li><a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a></li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n                            <h1>Catégories</h1>\n                        </div>\n                        \n                        <div class='flex-container'>\n\n                            <div id=\"addCat\">\n                                <h6 id=\"question\"> Ajouter une nouvelle catégorie </h6>\n                                <form (submit)=\"addCategory()\">\n                                    <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\" placeholder=\"nom catégorie\" [(ngModel)]=\"categorie.libelleCategorie\">\n                                    <button id=\"btn\" class=\"btn btn-outline-info \" type=\"submit \">Valider</button>\n                        \n                                </form>\n                            </div>\n\n                            <div>\n                                <table class=\"table col-md-12 mx-auto\">\n                        \n                                    <tr *ngFor=\"let categorie of categories\">\n                                        <td>\n                                            <form (submit)=\"updateCategory(categorie)\">\n                                                <div class=\"form-row align-items-center\">\n                                                    <div class=\"col-auto\">\n                                                        <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\" value={{categorie.libelleCategorie}} [(ngModel)]=\"categorie.libelleCategorie\">\n                                                    </div>\n                                                    <div class=\"col-auto\">\n                                                        <button id=\"btn\" class=\"btn btn-sm btn-warning\" type=\"submit\"><i class=\"fa fa-pencil\" ></i></button>\n                                                    </div>\n                                                    <div class=\"col-auto\">\n                                                        <button id=\"btn\" type=\"submit\" class=\"btn btn-sm btn-danger\" (click)=\"deleteCategory(categorie.idCategorie)\"><i class=\" fa fa-trash \"></i></button>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                            \n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  contactForm: FormGroup;\n\n  contactSend: ContactDetail = {\n    nameUser: '',\n    emailUser: '',\n    subject: '',\n    message: ''\n  };\n\n  constructor(private formBuilder: FormBuilder, private auth: AuthentificationService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.initContactForm();\n  }\n\n  initContactForm(): FormGroup {\n    if (this.auth.isLoggedIn()) {\n      const emailUser = this.auth.getUserDetails().email;\n      return this.contactForm = this.formBuilder.group({\n        nameUser: ['', Validators.required],\n        email: [emailUser, [Validators.required, Validators.email]],\n        subject: ['', Validators.required],\n        message: ['', Validators.required]\n      });\n    } else {\n      return this.contactForm = this.formBuilder.group({\n        nameUser: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        subject: ['', Validators.required],\n        message: ['', Validators.required]\n      });\n    }\n\n  }\n\n  sendEmail() {\n\n    const formValue = this.contactForm.value;\n\n    this.contactSend.nameUser = formValue.nameUser;\n    this.contactSend.emailUser = formValue.email;\n    this.contactSend.subject = formValue.subject;\n    this.contactSend.message = formValue.message;\n\n    this.auth.sendEmailContact(this.contactSend).subscribe(\n      this.router.navigate([''])\n    );\n\n  }\n\n}\n\nexport interface ContactDetail {\n  nameUser: string;\n  emailUser: string;\n  subject: string;\n  message: string;\n}\n","\n\n\n    <section class=\"contact pt-100 pb-100\" id=\"contact\">\n         <div class=\"container\">\n            <div class=\"row\">\n               <div class=\"col-xl-6 mx-auto text-center\">\n                  <div class=\"section-title mb-100\">\n                     <p>une question, une suggestion .. ?</p>\n                     <h4>contactez moi</h4>\n                  </div>\n               </div>\n            </div>\n            <div class=\"row text-center\">\n                  <div class=\"col-md-12\">\n                     <form [formGroup]=\"contactForm\" (ngSubmit)=\"sendEmail()\" data-toggle=\"validator\" role=\"form\" class=\"contact-form\">\n                        <div class=\"row\">\n                           <div class=\"col-xl-6\">\n                              <input id=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Nom\" formControlName=\"nameUser\" required>\n                           </div>\n                          \n                           \n                           <div class=\"col-xl-6\">\n                              <input id=\"to\" type=\"email\" class=\"form-control\" formControlName=\"email\"\n                              placeholder=\"nom.prenom@exemple.com\" id=\"inputEmail\"\n                              required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                              data-error=\"Bruh, that email address is invalid\">\n                           </div>\n                           <div class=\"help-block with-errors\"></div>\n                           <div class=\"col-xl-12\">\n                              <input type=\"text\" class=\"form-control\"  placeholder=\"Objet\" formControlName=\"subject\" required>\n                           </div>\n                          \n                           <div class=\"col-xl-12\">\n                              <textarea placeholder=\"message\" cols=\"30\" rows=\"10\" formControlName=\"message\" required></textarea>\n                              <input id=\"send_email\" class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"contactForm.invalid\" value = \"Envoyer\">\n                           </div>\n                        </div>\n                     </form>\n                  </div>\n                \n            </div>\n         </div>\n      </section>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, Subscription } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecettesService } from '../../service';\nimport { RecipeDetails } from '../../models';\nimport { Router } from '@angular/router';\nimport { MediaObserver } from '@angular/flex-layout';\n\n@Component({\n  selector: 'app-gerer-les-recettes',\n  templateUrl: './gerer-les-recettes.component.html',\n  styleUrls: ['./gerer-les-recettes.component.scss']\n})\nexport class GererLesRecettesComponent implements OnInit {\n\n  watcher: Subscription;\n\n  opened = true;\n  over = 'side';\n  expandHeight = '42px';\n  collapseHeight = '42px';\n  displayMode = 'flat';\n\n  public recette: RecipeDetails;\n  public recettes$: Observable<RecipeDetails[]>;\n  public filteredRecipe$: Observable<RecipeDetails[]>;\n  public filter: FormControl;\n  public filter$: Observable<string>;\n\n  constructor(private recettesService: RecettesService, private router: Router, media: MediaObserver) {\n    // pour la recherche dynamique\n    this.recettes$ = this.recettesService.getAllRecipes();\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  deleteRecipe(idRecette: any) {\n    this.recettesService.deleteRecipe(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/handleRecipes']).then(() => {\n          window.location.reload();\n        });\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n\n}\n\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside class=\"sidebar is-visible\">\n                    <div class=”sidebar-content”>\n                        <ul>\n                            <li class=\"active\"><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li><a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a></li>\n                            <li>\n                                <form id=\"nav\" class=\"form-inline my-2 my-lg-0\">\n                                    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\"\n                                        aria-label=\"Search\" [formControl]=\"filter\">\n                                </form>\n                            </li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2 row\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n                            <h1>Gerer les recettes</h1>\n                        </div>\n                        <div id=\"titre\">\n                            <h3>Recettes publiées</h3>\n                        </div>\n\n\n\n\n\n\n\n\n\n\n\n                        <!--<div class=\"row mb-3\" *ngFor=\"let recette of filteredRecipe$ | async\">\n                            <div class=\"col-sm-3\"></div>\n                            <div class=\"col-md-6 col-sm-6\">\n                                <div class=\"d-flex flex-row border rounded\">\n                                    <div class=\"p-0 w-25\">\n                                        <img src=\"{{recette.lienImage}}\" class=\"img-thumbnail border-0\"\n                                            alt=\"photo de la recette\" />\n\n                                    </div>\n                                    <div class=\"pl-3 pt-2 pr-2 pb-2 w-75 border-left\">\n\n                                        <h5 class=\"text\">{{recette.nomRecette}}</h5>\n                                        <ul class=\"m-0 float-left\" style=\"list-style: none; margin:0; padding: 0\">\n                                            <li><i class=\"badge badge-light\"></i>{{recette.nbFavoris}}\n                                                <svg class=\"bi bi-heart-fill\" width=\"1em\" height=\"1em\"\n                                                    viewBox=\"0 0 16 16\" fill=\"red\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path fill-rule=\"evenodd\"\n                                                        d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n                                                        clip-rule=\"evenodd\" />\n                                                </svg></li>\n                                            <li><i class=\"badge badge-light\"></i> {{recette.nbVues}} 👁</li>\n                                        </ul>\n\n                                        <button id=\"crayon\" type=\"submit\" class=\"btn btn-sm btn-warning\"\n                                            [routerLink]=\"['/updateRecipe', recette.idRecette]\"><i\n                                                class=\"fa fa-pencil\"></i></button>\n\n                                        <button id=\"poubelle\" type=\"submit\" class=\"btn btn-sm btn-danger\"\n                                            (click)=\"deleteRecipe(recette.idRecette)\"><i\n                                                class=\"fa fa-trash\"></i></button>\n\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>-->\n\n                        <div class=\"app\">\n\n                            <div class=\"recipesWrapper row\">\n                        \n                                <div class=\"recipeDiv text-center col-lg-4 col-md-6 col-sm-12 p-3\"\n                                    *ngFor=\"let recette of filteredRecipe$ | async\">\n                                    <img class=\"rounded-circle\" src=\"{{recette.lienImage}}\" />\n                                    <h3>{{recette.nomRecette}}</h3>\n\n                                    <i class=\"badge badge-light\"></i> {{recette.nbVues}} 👁\n                        \n                                    <i class=\"badge badge-light\"></i>{{recette.nbFavoris}}\n                                        <svg class=\"bi bi-heart-fill\" width=\"1em\" height=\"1em\"\n                                            viewBox=\"0 0 16 16\" fill=\"red\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fill-rule=\"evenodd\"\n                                                d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n                                                clip-rule=\"evenodd\" />\n                                        </svg>\n                                    \n                        \n                                    <div class=\"controlBtns\">\n                                        <button class=\"editBtn btn btn-warning\" [routerLink]=\"['/updateRecipe', recette.idRecette]\">\n                                            <i class=\"fa fa-pencil\" aria-hidden=\"true\">\n                                            </i>\n                                        </button>\n                        \n                                        <button class=\"deleteBtn btn btn-danger\" (click)=\"deleteRecipe(recette.idRecette)\">\n                                            <i class=\"fa fa-trash\" aria-hidden=\"true\">\n                                            </i>\n                                        </button>\n                                    </div>\n                        \n                                </div>\n                            </div>\n                        \n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecettesService, IngredientsService} from '../../service';\nimport { IngredientDetails } from '../../models';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ingredients',\n  templateUrl: './ingredients.component.html',\n  styleUrls: ['./ingredients.component.scss']\n})\nexport class IngredientsComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>;\n  public ingredients: IngredientDetails[];\n\n  public ingredient: IngredientDetails = {\n    idIngredient: null,\n    nomIngredient: '',\n    qte: null,\n    libelleUnite: '',\n  };\n\n  public filteredIngredient$: Observable<IngredientDetails[]>;\n  public filter: FormControl;\n  public filter$: Observable<string>;\n\n\n  constructor(private recettesService: RecettesService, private router: Router, private ingredientsService: IngredientsService) {\n     // pour la recherche dynamique\n     this.ingredients$ = this.ingredientsService.getAllIngredients();\n     this.filter = new FormControl('');\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n     // tslint:disable-next-line: deprecation\n     this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n       .pipe(map(([ingredients, filterString]) =>\n         ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllIngredients() {\n\n    this.ingredients$ = this.ingredientsService.getAllIngredients();\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n\n  }\n\n  deleteIngredient(idIngredient: any) {\n    this.ingredientsService.deleteIngredient(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/ingredient'], {\n          queryParams: {refresh: new Date().getTime()}\n       });\n        }, (err) => {\n          console.log(err);\n        }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n\n  updateIngredient(ingredient: IngredientDetails) {\n    this.ingredientsService.updateIngredient(ingredient).subscribe((res: any) => {\n        window.location.reload();\n      }, (err: any) => {\n        console.error(err);\n      }\n    );\n  }\n\n  addIngredient() {\n    this.ingredientsService.addIngredient(this.ingredient);\n    window.location.reload();\n  }\n\n}\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside class=\"sidebar is-visible\">\n                    <div class=”sidebar-content”>\n                        <ul>\n                            <li><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li class=\"active\"><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li><a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a></li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n\n                            <h1>Ingrédients</h1>\n                        \n                        </div>\n                        \n                        <div class='flex-container'>\n\n                            <div id=\"addIng\">\n                                <h6 id=\"question\"> Ajouter un nouvel ingredient </h6>\n                                <form (submit)=\"addIngredient()\">\n                                    <input type=\"text\" class=\"form-control\" name=\"nomIngredient\" placeholder=\"nom ingredient\" [(ngModel)]=\"ingredient.nomIngredient\">\n                        \n                                    <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n                        \n                                </form>\n                            </div>\n                        \n                            <div>\n                                <form>\n                                    <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher un ingrédient\" aria-label=\"Search\" [formControl]=\"filter\">\n                                </form>\n                                <table class=\"table col-md-12 mx-auto\">\n                        \n                                    <tr *ngFor=\"let ingredient of filteredIngredient$ | async; let i=index\">\n                                        <td>                        \n                        \n                                            <form (submit)=\"updateIngredient(ingredient)\">\n                                                <div class=\"form-row align-items-center\">\n                                                    <div class=\"col-auto\">\n                        \n                                                        <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"nomIngredient\" value={{ingredient.nomIngredient}} [(ngModel)]=\"ingredient.nomIngredient\">\n                                                    </div>\n                                                    <div class=\"col-auto\">\n                                                        <button id=\"btn\" type=\"submit\" class=\"btn btn-sm btn-warning\"><i class=\"fa fa-pencil\" ></i></button>\n                        \n                        \n                                                    </div>\n                                                    <div class=\"col-auto\">\n                        \n                                                        <button id=\"btn\" class=\"btn btn-sm btn-danger\" (click)=\"deleteIngredient(ingredient.idIngredient)\"><i class=\"fa fa-trash\"></i></button>\n                        \n                                                    </div>\n                                                </div>\n                                            </form>\n                        \n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                            \n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, TokenPayload } from '../../service';\nimport { Router } from '@angular/router';\nimport { Validators, FormGroup, FormBuilder, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\n    const invalidParent = !!(control && control.parent && control.parent.invalid && control.parent.dirty);\n\n    return (invalidCtrl || invalidParent);\n  }\n}\n\n@Component({\n  selector: 'app-inscrire',\n  templateUrl: './inscrire.component.html',\n  styleUrls: ['./inscrire.component.scss']\n})\nexport class InscrireComponent implements OnInit {\n\n  credentials: TokenPayload = {\n    pseudo: '',\n    email: '',\n    mdp: '',\n    mdp2: '',\n    admin: false,\n    abonneNews: false,\n    error: ''\n  };\n\n  userForm: FormGroup;\n\n  // pour confirm mdp\n  mdpForm: FormGroup;\n  matcher = new MyErrorStateMatcher();\n\n  constructor(private auth: AuthentificationService, private router: Router, private formBuilder: FormBuilder) {\n    this.mdpForm = this.formBuilder.group({\n      password: ['', [Validators.required]],\n      confirmPassword: ['']\n    }, { validator: this.checkPasswords });\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  // We Init the form with the validators\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      mdp: ['', Validators.required],\n      mdp2: ['', Validators.required],\n      abonneNews: ['', Validators.required]\n\n    });\n  }\n\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    const pass = group.controls.password.value;\n    const confirmPass = group.controls.confirmPassword.value;\n\n    return pass === confirmPass ? null : { notSame: true };\n  }\n\n  register() {\n\n    const mdpFormValue = this.mdpForm.value;\n    const formValue = this.userForm.value;\n\n    if (formValue.mdp !== formValue.mdp2) {\n      alert('Les mots de passe ne sont pas identiques.');\n      return;\n    }\n\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.email = formValue.email;\n    this.credentials.mdp = mdpFormValue.password;\n    this.credentials.mdp2 = mdpFormValue.confirmPassword;\n    this.credentials.abonneNews = formValue.abonneNews;\n\n\n    this.auth.register(this.credentials).subscribe(\n      (res) => {\n        if (res.error === 'L\\'utilisateur existe déjà') {\n          alert('L\\'utilisateur existe déjà');\n          return;\n        } else {\n          this.auth.logout();\n          alert('Vous pouvez maintenant aller dans votre boîte mail pour confirmer votre adresse mail. Pensez à vérifier dans vos spams !');\n          setTimeout(() => this.router.navigate(['login'])\n          , 5);\n        }\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 mt-5 mx-auto\">\n                <form class=\"contact-form\" [formGroup]=\"userForm\" (ngSubmit)=\"register()\" data-toggle=\"validator\"\n                    role=\"form\">\n                    <h1 id=\"lien\" class=\"h3 mb-3 font-weight-normal\">S'inscrire</h1>\n                    <div class=\"form-group\">\n                        <label>Pseudo *</label>\n                        <input id=\"pseudo\" pattern=\"[a-zA-Z0-9._%+-]*\" type=\"text\" class=\"form-control\"\n                            formControlName=\"pseudo\" placeholder=\"pseudo\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"inputEmail\" class=\"control-label\">Email *</label>\n                        <input id=\"to\" type=\"email\" class=\"form-control\" formControlName=\"email\"\n                            placeholder=\"nom.prenom@exemple.com\" id=\"inputEmail\" required\n                            pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                            data-error=\"Bruh, that email address is invalid\">\n                        <div class=\"help-block with-errors\"></div>\n                    </div>\n                    <div>\n                        <form [formGroup]=\"mdpForm\">\n                            <mat-form-field>\n                                <label>Mot de passe *</label>\n                                <input matInput id=\"mdp\" type=\"password\" class=\"form-control\" formControlName=\"password\"\n                                    required>\n                                <mat-error *ngIf=\"mdpForm.hasError('required', 'password')\">\n                                    Entrez un nouveau mot de passe\n                                </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field>\n                                <label>Confirmer le mot de passe *</label>\n                                <input matInput id=\"mdp2\" type=\"password\" class=\"form-control\"\n                                    formControlName=\"confirmPassword\" [errorStateMatcher]=\"matcher\">\n                                <mat-error *ngIf=\"mdpForm.hasError('notSame')\">\n                                    Les mots de passes sont différents\n                                </mat-error>\n                            </mat-form-field>\n                        </form>\n                    </div>\n\n                    <!--<div class=\"form-group\">\n                        <label>Mot de passe *</label>\n                        <input id=\"mdp\" type=\"password\" class=\"form-control\" formControlName=\"mdp\" placeholder=\"****\" onblur=\"verif();\" required>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Confirmer le mot de passe *</label>\n                        <input id=\"mdp2\" type=\"password\" class=\"form-control\" formControlName=\"mdp2\" placeholder=\"****\" onblur=\"verif();\" required>\n                        <svg  class=\"bi bi-check\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"green\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" d=\"M13.854 3.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3.5-3.5a.5.5 0 11.708-.708L6.5 10.293l6.646-6.647a.5.5 0 01.708 0z\" clip-rule=\"evenodd\"/>\n                          </svg>\n                    </div>-->\n\n\n                    <div class=\"form-group\" id=\"abonne\">\n                        <label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label>\n                        <br>\n                        <div class=\"form-row align-items-center\">\n                            <div class=\"col-auto\">\n                                <input type=\"radio\" formControlName=\"abonneNews\" value=\"true\" checked> Oui\n                            </div>\n                            <div class=\"col-auto\">\n                                <input type=\"radio\" formControlName=\"abonneNews\" value=\"false\"> Non\n                            </div>\n                        </div>\n                    </div>\n\n                    <input id=\"send_email\" class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"userForm.invalid\"\n                        value=\"Créer mon compte\">\n                    <br>\n                    <p>* Champs obligatoires.</p>\n\n                </form>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecettesService, AuthentificationService, ShoppingListService } from '../../service';\nimport { IngredientDetails } from '../../models';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-ma-liste-de-courses',\n  templateUrl: './ma-liste-de-courses.component.html',\n  styleUrls: ['./ma-liste-de-courses.component.scss']\n})\nexport class MaListeDeCoursesComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>;\n  public restIngredients$: Observable<IngredientDetails[]>;\n\n  public filteredIngredient$: Observable<IngredientDetails[]>;\n  public filter: FormControl;\n  public filter$: Observable<string>;\n\n  public ingredientToDelete: IngredientShoppingList = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    idIngredient: null\n  };\n\n  public ingredientToAdd: IngredientShoppingList = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    idIngredient: null\n  };\n\n\n  constructor(private recetteService: RecettesService, private router: Router, private auth: AuthentificationService,\n              private modalService: NgbModal, private shoppingListService: ShoppingListService) {\n    this.ingredients$ = this.shoppingListService.getListeCourses();\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n\n    this.restIngredients$ = this.shoppingListService.getRestListeCourses();\n  }\n\n  ngOnInit(): void {\n  }\n\n  getListeCourses() {\n    this.ingredients$ = this.shoppingListService.getListeCourses();\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n\n  }\n\n  deleteListeCourse(idIngredient: any) {\n    this.ingredientToDelete.idIngredient = idIngredient;\n    this.shoppingListService.deleteListeCourse(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/refresh'], {\n          queryParams: {url: 'shoppingList'}\n        });\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.ingredientToAdd.idIngredient = result.idIngredient;\n        this.shoppingListService.addIngredientShoppingList(this.ingredientToAdd);\n        this.router.navigate(['/refresh'], {\n          queryParams: {url: 'shoppingList'}\n        });\n      });\n  }\n}\n\nexport interface IngredientShoppingList {\n  pseudo: string;\n  idIngredient: number;\n}\n","<div id=\"liste\">\n    <div class=\"app\">\n        <h2>Ma liste de courses</h2>\n        <form>\n            <input type=\"search\" placeholder=\"Recherche\" [formControl]=\"filter\">\n            <button id=\"add\" class=\"btn btn-outline-success\" (click)=\"open(content)\"><i class=\"fa fa-plus-circle\"></i></button>\n\n        </form>\n\n        <i id=\"panier\" class=\"fa fa-shopping-basket fa-3x\" aria-hidden=\"true\"></i>\n        <div class=\"app-body\" *ngFor=\"let ingredient of filteredIngredient$ | async\">\n            <ul class=\"list\">{{ingredient.nomIngredient}}\n                <button id=\"trash\" class=\"btn  btn-outline-danger\" (click)=deleteListeCourse(ingredient.idIngredient)><i class=\"fa fa-trash\"></i></button>\n            </ul>\n        </div>\n    </div>\n\n</div>\n\n<ng-template #content let-modal>\n    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\"></h4>\n    </div>\n    <div class=\"modal-body\">\n        <form>\n            <div class=\"form-row\">\n                <div class=\"col-md-6\">\n                    <label for=\"validationTooltip04\">Ingrédient</label>\n                    <select class=\"custom-select\" id=\"validationTooltip04\" #idIngredient=\"ngModel\" [(ngModel)]=\"ingredientToAdd.idIngredient\" [ngModelOptions]=\"{standalone: true}\" required>\n                    <option *ngFor=\"let ingredient of restIngredients$ | async\"\n                        [ngValue]=\"ingredient.idIngredient\">\n                        {{ingredient.nomIngredient}}</option>\n                </select>\n                    <div class=\"invalid-tooltip\">\n                        Selectionnez un ingrédient.\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button tyoe=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close(ingredientToAdd)\">Ajouter</button>\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mentions-legales',\n  templateUrl: './mentions-legales.component.html',\n  styleUrls: ['./mentions-legales.component.css']\n})\nexport class MentionsLegalesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-xl-6 mx-auto text-center\">\n                <div class=\"section-title mb-100\">\n\n                    <h4>Conditions générales d'utilisation</h4>\n                </div>\n            </div>\n        </div>\n        <div class=\"row text-center\">\n            <div class=\"col-md-12\">\n                <h5>Comment utiliser les recettes diffusées sur ce site</h5>\n                <p>\n                    Vous ne pouvez pas reproduire ces recettes dans le cadre d’un usage commercial.\n                    <br> Les recettes de ce site sont dans une base de données appartenant à Marine’s recipes, vous ne pouvez ni reproduire cette base de données, ni extraire des données contenues dans cette base autrement que pour votre usage privé.\n                    <ul class=\"a\">\n                        <li>\n                            Vous pouvez utiliser toutes les recettes diffusées sur le site pour votre usage privé : repas entre amis ou en famille. N'hésitez pas à donner votre avis sur les recettes en commentaire. Inscrivez-vous et indiquez que vous souhaitez recevoir un email\n                            lorsqu’une nouvelle recette est publiée si vous souhaitez rater aucune recette. Si vous souhaitez partager une recette à un proche vous pouvez cliquer sur le bouton partager sur la page d’une recette.\n                        </li>\n                        <li>\n                            Si vous êtes cuisinier ou restaurateur, vous pouvez utiliser les recettes sans droit de publier la recette elle-même sous 2 conditions :\n                            <ul class=\"a\">\n                                <li>\n                                    • retour d'expérience : dans les commentaires pouvant être associés à chaque recette.\n                                </li>\n                                <li>\n                                    • visibilité de la source de la recette sur votre menu : \" Cette recette vient du site marinesrecipes.fr \".\n\n                                </li>\n                            </ul>\n                        </li>\n                        <li>\n                            Si vous êtes une Ecole de formation de cuisine, un élève cuisinier ou une association culinaire, vous n'avez pas l'autorisation d'utiliser les recettes sauf accord préalable de Marine. Contactez-nous pour connaître les possibilités de partenariats : marinesrecipes@gmail.com\n                            .\n\n                        </li>\n                    </ul>\n\n                    <h5>Code de conduite</h5>\n                    <p>\n                        <ul class=\"a\">\n                            <li>\n                                Comment utiliser les logos figurant sur le site : Les logos, marques, dessins, illustrations, textes et noms des rubriques figurant sur notre site ne peuvent pas être utilisés, reproduits, modifiés, diffusés, ou empruntés pour créer des œuvres dérivées\n                                sans notre autorisation. Les marques citées sont déposées par leurs propriétaires respectifs et sont protégés par le droit des marques. Ces éléments ne peuvent donc pas être utilisés, reproduits, modifiés, diffusés, ou\n                                empruntés pour créer des œuvres dérivées sans l'autorisation de leurs titulaires respectifs.\n                            </li>\n                            <li>\n                                Marine’s recipes demande aux utilisateurs de ses services de respecter les droits de propriété intellectuelle d'autrui. Dès lors, si vous considérez que votre marque ou votre œuvre a été copiée ou est utilisée d'une manière susceptible de porter atteinte\n                                à vos droits tels que reconnus par la législation française sur le site Marinesrecipes.fr, merci de nous en informer par email : marinesrecipes@gmail.com.\n                            </li>\n                            <li>\n                                Utilisation des espaces de communauté Vous vous engagez à ne pas vous servir du site Marinesrecipes.fr et notamment des commentaires ou de la rubrique « Contact » pour :\n                                <ul>\n                                    <li>\n                                        Télécharger, envoyer, transmettre par e-mail ou de toute autre manière tout contenu qui soit illégal, nuisible, menaçant, abusif, constitutif de harcèlement, diffamatoire, vulgaire, obscène, menaçant pour la vie privée d'autrui, haineux, raciste, ou autrement\n                                        répréhensible ;\n                                    </li>\n                                    <li>\n                                        Porter atteinte d'une quelconque manière aux utilisateurs mineurs. Marine’s recipes se réserve le droit, à ce titre ou lorsqu'une contribution est contraire à la ligne éditoriale de son site (sans que cela ne constitue une obligation) de supprimer tout\n                                        contenu disponible via son site, notamment dans les commentaires.\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n\n\n                        <h5>Responsabilités</h5>\n                        <p>\n                            <ul class=\"a\">\n                                <li>\n                                    Marine’s recipes ne garantit pas le résultat des recettes diffusées sur son site, ni leur qualité. Marinesrecipes.fr ne garantit pas que les recettes répondront aux attentes des internautes ou que leurs résultats seront exacts et fiables. En conséquence,\n                                    la responsabilité de Marinesrecipes.fr ne saurait être engagée en cas d'erreur ou d'omission dans l'une de ces recettes, textes, informations ou illustrations diffusées sur son site. Toutefois, merci de nous faire connaître\n                                    vos commentaires dans la rubrique \" Contact \", ainsi que dans les commentaires pouvant être associés à chaque recette.\n                                </li>\n                                <li>\n                                    Des liens hypertextes peuvent renvoyer vers d'autres sites que le site Marinesrecipes.fr, nous dégageons toute responsabilité dans le cas où le contenu de ces sites serait contraire à la réglementation en vigueur.\n                                </li>\n                                <li>\n                                    Tout contenu téléchargé se fait aux risques et périls de l'utilisateur et sous sa seule responsabilité. En conséquence, Marinesrecipes.fr ne saurait être tenu responsable d'un quelconque dommage subi par l'ordinateur de l'utilisateur ou d'une quelconque\n                                    perte de données consécutives au téléchargement.\n                                </li>\n                                <li>\n                                    Tout utilisateur du site Marinesrecipes.fr s'engage à garantir et indemniser la société Marinesrecipes.fr contre tout dommage, plainte ou demande émanant de tiers consécutif à l'envoi, la diffusion ou la transmission de contenu sur le Marinesrecipes.fr\n                                    .\n                                </li>\n                            </ul>\n\n\n\n            </div>\n\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { RecettesService, AuthentificationService, CommentairesService } from '../../service';\nimport { CommentaireDetails } from '../../models';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-mes-commentaires',\n  templateUrl: './mes-commentaires.component.html',\n  styleUrls: ['./mes-commentaires.component.scss']\n})\nexport class MesCommentairesComponent implements OnInit {\n\n  public commentaires: CommentaireDetails[];\n\n  public commentaireToModify: CommentaireDetails = {\n    ecritPar: this.auth.getUserDetails().pseudo\n  };\n\n  constructor(public auth: AuthentificationService, private recetteService: RecettesService,\n              private modalService: NgbModal, private router: Router, private commentairesService: CommentairesService) {\n    this.commentairesService.getCommentaireUser(this.auth.getUserDetails().pseudo).subscribe(\n      commentaires => {\n\n        this.commentaires = commentaires;\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n        this.commentaires.forEach(element => {\n\n          const d = new Date(element.dateCommentaire);\n\n          element.dateCommentaire = d.toLocaleString('FR-fr', options);\n\n          this.recetteService.getRecipeById(element.concerne).subscribe(data => {\n            element.nomRecette = data.nomRecette;\n          });\n        });\n      }\n    );\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.commentaireToModify.message = result.message;\n        this.commentaireToModify.dateCommentaire = result.dateCommentaire;\n        this.commentaireToModify.concerne = result.concerne;\n        this.commentairesService.modifyCommentaire(this.commentaireToModify);\n        this.router.navigate(['/refresh'], {\n          queryParams: {url: 'comment'}\n        });\n      });\n  }\n\n  deleteCommentaire(idCommentaire: any) {\n    this.commentairesService.deleteCommentaire(idCommentaire)\n      .subscribe(res => {\n        this.router.navigate(['/comment']).then(() => {\n          window.location.reload();\n        });\n        }, (err) => {\n          console.log(err);\n        }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n}\n\n\n","<section class=\"contact \" id=\"contact\">\n<article id=\"burger-fourth\" >\n\n    <h2 class=\"text-center\" id=\"titre\">Mes commentaires</h2>\n\n    <div class=\"comment-container theme--light\">\n        <div class=\"comments\">\n            <div class=\"card v-card v-sheet theme--light elevation-2\" *ngFor=\"let commentaire of commentaires\">\n                <div class=\"header\">\n                    <div *ngIf=\"!auth.isAdmin()\" class=\"v-avatar avatar\" style=\"height: 50px; width: 50px;\"><img src=\"../../../assets/img/avatar.png\"></div>\n                    <div *ngIf=\"auth.isAdmin()\" class=\"v-avatar avatar\" style=\"height: 2.5em; width: 3.5em;\"><img src=\"../../../assets/img/logo.jpeg\"></div>\n                    <span class=\"displayName title\"><a routerLink=\"/recipe/{{commentaire.concerne}}\">{{commentaire.nomRecette}}</a></span> <span class=\"displayName caption\">{{commentaire.dateCommentaire}}</span></div>\n                <!---->\n                <div class=\"wrapper comment\">\n                    <p>{{commentaire.message}}\n                    </p>\n                </div>\n                <div class=\"actions\">\n                    <!--<button id=\"btn\" class=\"btn btn-sm btn-danger\" (click)=\"deleteCommentaire(commentaire.idCommentaire)\"><i class=\" fa fa-trash \"></i></button> mettre un bouton modifier\n                   -->\n                    <!---->\n                    <!---->\n                    <button class=\"btn btn-warning\" (click)=\"open(content)\"><i class=\"fa fa-pencil\"></i></button>\n                    <button id=\"poubelle\" type=\"submit\" class=\"btn btn-sm btn-danger\" (click)=\"deleteCommentaire(commentaire.idCommentaire)\"><i class=\"fa fa-trash\"></i></button>\n\n                </div>\n                <div class=\"v-dialog__container\" style=\"display: block;\"></div>\n                <ng-template #content let-modal class=\"modal\">\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\">Modification du commentaire</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <textarea #message=\"ngModel\" [(ngModel)]=\"commentaire.message\" [ngModelOptions]=\"{standalone: true}\">\n                                        {{commentaire.message}}\n                                    </textarea>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-outline-warning\" (click)=\"modal.close(commentaire)\">Modifier</button>\n                    </div>\n                </ng-template>\n            </div>\n\n\n\n            <!---->\n            <div class=\"answers\">\n\n                <!---->\n            </div>\n        </div>\n        <div>\n\n        </div>\n\n    </div>\n\n</article>\n</section>","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { RecettesService, AuthentificationService, FavorisService, CategoriesService } from '../../service';\nimport { RecipeDetails, CategoryDetails } from '../../models';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { HashTable } from '../recettes/recettes.component';\n\n@Component({\n  selector: 'app-mes-recettes',\n  templateUrl: './mes-recettes.component.html',\n  styleUrls: ['./mes-recettes.component.scss']\n})\nexport class MesRecettesComponent implements OnInit, OnChanges {\n\n  page = 1;\n\n  public actualCategory: number = null;\n  public recipeByCategory: HashTable<RecipeDetails[]> = {};\n  public recipeCategory: RecipeDetails[] = [];\n\n  public researchForm: FormGroup;\n\n  public allRecipe: RecipeDetails[];\n  public allRecipe2: RecipeDetails[];\n\n  public recettes$: Observable<RecipeDetails[]>;\n  public categories: CategoryDetails[];\n  public filteredRecipe$: Observable<RecipeDetails[]>;\n  public filter: FormControl;\n  public filter$: Observable<string>;\n\n  constructor(private recetteService: RecettesService, private router: Router, private formBuilder: FormBuilder,\n              public auth: AuthentificationService, private favorisService: FavorisService, private categoriesService: CategoriesService) {\n\n    // pour la recherche dynamique\n    this.recettes$ = this.favorisService.getFavoris();\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n\n    this.favorisService.getFavoris().subscribe(data => {\n      this.allRecipe = data;\n      this.allRecipe2 = data;\n    });\n\n    this.categoriesService.getAllCategory().subscribe(\n      (categorie: CategoryDetails[]) => {\n        categorie.forEach(data => {\n          this.favorisService.getFavorisByCategory(data.idCategorie).subscribe(recipes => {\n            this.recipeCategory = recipes;\n            this.recipeByCategory[data.idCategorie] = this.recipeCategory;\n          });\n        });\n        this.categories = categorie;\n      });\n\n    this.initResearchForm();\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges() {\n    this.allRecipe = this.allRecipe2;\n    this.initResearchForm();\n  }\n\n  initResearchForm() {\n    this.researchForm = this.formBuilder.group({\n      filter: ['']\n    });\n  }\n\n  research() {\n    const formValue = this.researchForm.value;\n\n    if (this.actualCategory != null) {\n      if (formValue.filter !== '') {\n        const researchResult: RecipeDetails[] = [];\n        this.recipeByCategory[this.actualCategory].forEach(recipe => {\n          if (recipe.nomRecette.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n            if (!researchResult.includes(recipe)) {\n              researchResult.push(recipe);\n            }\n          }\n          recipe.ingredients.forEach(ingredient => {\n            if (ingredient.nomIngredient.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n              if (!researchResult.includes(recipe)) {\n                researchResult.push(recipe);\n              }\n            }\n          });\n        });\n        this.allRecipe = researchResult;\n      } else {\n        this.allRecipe = this.allRecipe2;\n      }\n    } else {\n      if (formValue.filter !== '') {\n        const researchResult: RecipeDetails[] = [];\n\n        this.allRecipe2.forEach(recipe => {\n          if (recipe.nomRecette.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n            if (!researchResult.includes(recipe)) {\n              researchResult.push(recipe);\n            }\n          }\n          recipe.ingredients.forEach(ingredient => {\n            if (ingredient.nomIngredient.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n              if (!researchResult.includes(recipe)) {\n                researchResult.push(recipe);\n              }\n            }\n          });\n        });\n        this.allRecipe = researchResult;\n      } else {\n        this.allRecipe = this.allRecipe2;\n      }\n    }\n\n\n\n  }\n\n  getFavoris() {\n    this.favorisService.getFavoris().subscribe(data => {\n      this.allRecipe = data;\n      this.allRecipe2 = data;\n    });\n  }\n\n  getFavorisByCategory(idCategorie: any) {\n\n    this.actualCategory = idCategorie;\n\n    this.recettes$ = this.recetteService.getRecipeByCategory(idCategorie);\n\n    this.favorisService.getFavorisByCategory(idCategorie).subscribe(data => {\n      this.allRecipe = data;\n    });\n\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n  }\n\n  // voir si on peut la récupérer au lieu de la recopier!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload();\n        });\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Cette recette n\\'existe pas !');\n          }\n        }\n      });\n  }\n\n\n  deleteFavoris(idRecette: any) {\n    this.favorisService.deleteFavoris(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/favorites'], {\n          queryParams: { refresh: new Date().getTime() }\n        });\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    this.favorisService.getFavoris().subscribe(data => {\n        this.allRecipe = data;\n      }); /* rafraichit la page */\n  }\n\n}\n","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<div id=\"titre\" class=\"mt-5\">\n    <h1>Mes recettes ♥</h1>\n</div>\n\n<ul id=\"menu\" class=\"nav justify-content-center\">\n    <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"/favorites\" (click)=\"getFavoris()\">Tous mes favoris</a>\n    </li>\n    <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n        <a class=\"nav-link\" routerLink=\"/favorites\"\n            (click)=\"getFavorisByCategory(categ.idCategorie)\">{{categ.libelleCategorie}}</a>\n    </li>\n</ul>\n\n<br>\n\n<ul class=\"nav justify-content-center\">\n    <li>\n        <form class=\"form-inline\" [formGroup]=\"researchForm\" (ngSubmit)=\"research()\">\n            <div class=\"col text-center\">\n                <input class=\"form-control\" type=\"search\" placeholder=\"Recette, ingrédient..\" aria-label=\"Search\"\n                    formControlName=\"filter\" (click)=\"ngOnChanges()\">\n            </div>\n\n            <div class=\"col text-center\">\n                <button id=\"validateButton\" type=\"submit\" class=\"btn btn-primary\">Rechercher</button>\n            </div>\n        </form>\n    </li>\n</ul>\n\n<br>\n\n<div class=\"row\">\n    <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\" *ngFor=\"let recette of allRecipe | paginate: { id: 'listing_pagination', itemsPerPage:12, currentPage: page}\">\n        <article class=\"card wrap\">\n            <div id=\"photo\" [ngStyle]=\"{'background-image': 'url(&quot;' + recette.lienImage + '&quot;)'}\"\n                (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">\n            </div>\n            <div>\n                <a>\n                </a>\n                <div id=\"titleRecipe\">\n                    <h3 class=\"food\">\n                        {{recette.nomRecette}}\n                    </h3>\n                </div>\n                <div id=\"logoRecette\">\n                    <div class=\"logo\">\n                        <i class=\"fa fa-clock-o\"></i><a class=\"picto-item\" aria-label=\"Temps de préparation\"><i\n                                id=\"textlogo\">{{recette.globalTime}}</i></a>\n                    </div>\n                    <div class=\"logo\">\n                        <i class=\"fa fa-users\"></i><a class=\"picto-item\" aria-label=\"Nombre de parts\"><i\n                                id=\"textlogo\">{{recette.nbrePart}} {{recette.libellePart}}</i></a>\n                    </div>\n                    <div class=\"logo\">\n                        <a class=\"picto-item\" aria-label=\"Nombre de vues\"><i id=\"textlogo\">{{recette?.nbVues}}</i><i\n                                id=\"vue\"> 👁</i></a>\n                    </div>\n                    <div id=\"coeur\" class=\"logo\">\n                        <a *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\"\n                            (click)=\"deleteFavoris(recette.idRecette)\" class=\"picto-item\"\n                            aria-label=\"Supprimer des favoris\"><i id=\"textlogo\">{{recette?.nbFavoris}} </i><i\n                                class=\"class= fa fa-heart\"></i></a>\n                    </div>\n                </div>\n            </div>\n        </article>\n    </div>\n</div>\n<div id=\"paginationRecette\">\n    <pagination-controls id='listing_pagination' (pageChange)=\"page = $event\" previousLabel=\"Précédent\"\n        nextLabel=\"Suivant\"></pagination-controls>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport {\n  RecipeDetails,\n  CategoryDetails,\n  IngredientDetails,\n  QuantiteDetails,\n  UniteDetails,\n  ImageRecipe\n} from '../../models';\nimport { RecettesService, IngredientsService, CategoriesService, ImagesService, UnitesService } from '../../service';\nimport { HttpResponse, HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n// la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxImageCompressService } from 'ngx-image-compress';\n\n@Component({\n  selector: 'app-modifier-recette',\n  templateUrl: './modifier-recette.component.html',\n  styleUrls: ['./modifier-recette.component.scss']\n})\nexport class ModifierRecetteComponent implements OnInit {\n\n  constructor(private recetteService: RecettesService, private router: Router, private route: ActivatedRoute,\n              private ingredientsService: IngredientsService, private modalService: NgbModal,\n              private http: HttpClient, private categoriesService: CategoriesService,\n              private unitesService: UnitesService, private imagesService: ImagesService, private imageCompress: NgxImageCompressService) {\n    this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      recette => {\n        this.recette = recette;\n      }\n    );\n\n    this.ingredientsService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      ingredient => {\n        this.ingredients = ingredient;\n      }\n    );\n\n    this.imagesService.getImage(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      res => {\n        if (res.length !== 0) {\n          this.recette.idImage = res[0].idImage;\n          this.image = res[0];\n        }\n      }\n    );\n\n    this.ingredientsService.getRestIngredients(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      ingredients => {\n        this.allIngredients = ingredients;\n      }\n    );\n\n    this.unitesService.getAllUnite().subscribe(\n      unites => {\n        this.allUnites = unites;\n      }\n    );\n\n    this.categoriesService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      categories => {\n        this.allCategories = categories;\n      }\n    );\n\n\n    this.getCategory(parseInt(this.route.snapshot.paramMap.get('id'), 10));\n  }\n\n  public newIngredient: IngredientDetails = {\n    qte: null,\n    idRecette: parseInt(this.route.snapshot.paramMap.get('id'), 10),\n    idIngredient: null,\n    idUnite: null\n  };\n\n  public recette: RecipeDetails = {\n    idRecette: null,\n    nomRecette: 'string',\n    datePublication: null,\n    nbFavoris: null,\n    nbVues: null,\n    idImage: null,\n    lienImage: null,\n    etapes: null,\n    nbrePart: null,\n    libellePart: '',\n    tempsPreparation: null,\n    tempsCuisson: null,\n    astuce: ''\n  };\n  public ingredients: IngredientDetails;\n  public unite: UniteDetails;\n  public qtes: QuantiteDetails[];\n  public categories: CategoryDetails[];\n\n  public image;\n  public image2;\n  public allIngredients: IngredientDetails[]; // ingredients disponibles\n  public allUnites: UniteDetails[];\n  public allCategories: CategoryDetails[]; // catégories disponibles\n\n  public imageToModify: ImageRecipe = {\n    idImage: null,\n    idRecette: null\n  };\n\n  file: any;\n  localUrl: any;\n  localCompressedURl: any;\n  sizeOfOriginalImage: number;\n  sizeOFCompressedImage: number;\n  imgResultBeforeCompress: string;\n  imgResultAfterCompress: string;\n\n  ngOnInit(): void {\n  }\n\n\n  selectFile(event: any) {\n    let fileName: any;\n    this.file = event.target.files[0];\n    fileName = this.file.name;\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        this.localUrl = event.target.result;\n        this.compressFile(this.localUrl, fileName);\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n  compressFile(image, fileName) {\n    const orientation = -1;\n    this.sizeOfOriginalImage = this.imageCompress.byteCount(image) / (1024 * 1024);\n    console.warn('Size in bytes is now:', this.sizeOfOriginalImage);\n    this.imageCompress.compressFile(image, orientation, 50, 50).then(\n      result => {\n        this.imgResultAfterCompress = result;\n        this.localCompressedURl = result;\n        this.sizeOFCompressedImage = this.imageCompress.byteCount(result) / (1024 * 1024);\n        console.warn('Size in bytes after compression:', this.sizeOFCompressedImage);\n        // create file from byte\n        const imageName = fileName;\n        // call method that creates a blob from dataUri\n        const imageBlob = this.dataURItoBlob(this.imgResultAfterCompress.split(',')[1]);\n        // imageFile created below is the new compressed file which can be send to API in form data\n        const imageFile = new File([imageBlob], imageName, { type: 'image/jpeg' });\n\n        this.image2 = imageFile;\n      });\n  }\n\n  dataURItoBlob(dataURI) {\n    const byteString = window.atob(dataURI);\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const int8Array = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < byteString.length; i++) {\n      int8Array[i] = byteString.charCodeAt(i);\n    }\n    const blob = new Blob([int8Array], { type: 'image/jpeg' });\n    return blob;\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      console.log(file);\n      this.image2 = file;\n    }\n  }\n\n  onSubmit() {\n    const formData = new FormData();\n    console.log(this.image2);\n    formData.append('file', this.image2);\n    if (this.image) {\n      this.imagesService.addImage(formData).subscribe(res => {\n        this.image = res[0];\n        this.imageToModify.idImage = res[0];\n        this.imageToModify.idRecette = this.recette.idRecette;\n        this.http.post<any>(`/server/image/update`, this.imageToModify).subscribe(\n          (res) => {\n            this.image = res[0];\n            window.location.reload();\n          }\n        );\n      });\n    } else {\n      this.imagesService.addImage(formData).subscribe(res => {\n        this.image = res[0];\n        this.imageToModify.idImage = res[0];\n        this.imageToModify.idRecette = this.recette.idRecette;\n        this.imagesService.addImageToRecipe(this.imageToModify);\n        window.location.reload();\n      });\n    }\n  }\n\n  getCategory(id: any): any {\n    this.categoriesService.getCategoryByRecette(id).subscribe(\n      (categories: CategoryDetails[]) => {\n        this.categories = categories;\n      }, err => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log('cette recette n\\'a pas de catégorie!');\n          }\n        }\n      }\n    );\n    return this.categories;\n  }\n\n  updateRecipeName(recette: RecipeDetails) {\n    this.recetteService.updateRecipeName(recette).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n  updateSteps(recette: RecipeDetails) {\n    this.recetteService.updateSteps(recette).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n  updateAstuce(recette: RecipeDetails) {\n    this.recetteService.updateAstuce(recette).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n  updatePart(recette: RecipeDetails) {\n    this.recetteService.updatePart(recette).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n  updateTemps(recette: RecipeDetails) {\n    this.recetteService.updateTemps(recette).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n  updateRecipeIng(recette: RecipeDetails, ingredient: IngredientDetails) {\n    this.recetteService.updateRecipeIng(recette, ingredient).subscribe((res: any) => {\n      window.location.reload();\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n  deleteIngredientRececipe(ingredient: IngredientDetails, recette: RecipeDetails) {\n    this.recetteService.deleteIngredientRecipe(ingredient, recette)\n      .subscribe(res => {\n        this.router.navigate(['updateRecipe/:id']).then(() => {\n          window.location.reload();\n        });\n      }, (err) => {\n        console.log(err);\n      }\n      );\n\n  }\n\n  deleteRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails) {\n\n    this.recetteService.deleteRecipeCategory(categorie, recette)\n      .subscribe(res => {\n        setTimeout(() => {\n          this.categoriesService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n            categories => {\n              this.allCategories = categories;\n            }\n          );\n          this.categoriesService.getCategoryByRecette(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n            categories => {\n              this.categories = categories;\n            }\n          );\n        }, 1000);\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  }\n\n  addRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails) {\n    this.recetteService.addRecipeCategory(categorie, recette)\n      .subscribe(res => {\n        setTimeout(() => {\n          this.categoriesService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n            categories => {\n              this.allCategories = categories;\n            }\n          );\n          this.categoriesService.getCategoryByRecette(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n            categories => {\n              this.categories = categories;\n            }\n          );\n        }, 1000);\n\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  }\n\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.idIngredient = result.idIngredient;\n        this.newIngredient.qte = result.qte;\n        this.newIngredient.idUnite = result.idUnite;\n        this.recetteService.addIngredientRecette(this.newIngredient);\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      });\n  }\n\n}\n\n","<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>\n\n<script></script>\n\n<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"text-center\">\n            <h1>Modifier la recette</h1>\n        </div>\n\n        <hr />\n\n        <label>\n      <h4><strong>Nom de la recette</strong></h4>\n    </label>\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <td id=\"nomRecette\">\n                    <form (submit)=\"updateRecipeName(recette)\">\n                        <input type=\"text\" class=\"form-control\" name=\"nomRecette\" value=\"(recette?.nomRecette)\" #nomRecette=\"ngModel\" [(ngModel)]=\"recette.nomRecette\" />\n                        <br />\n                        <button class=\"btn btn-primary\" type=\"submit\">Modifier</button>\n                    </form>\n                </td>\n            </tr>\n        </table>\n\n        <hr />\n\n        <label>\n      <h4><strong>Image de la recette</strong></h4>\n    </label>\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <td>\n                    <div *ngIf=\"!image\">\n                        <input type=\"file\" name=\"image\" (change)=\"selectFile($event)\" />\n                        <br />\n                        <br />\n                        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">\n              Modifier\n            </button>\n                    </div>\n\n                    <div *ngIf=\"image\">\n                        <img src=\"{{ image.lienImage }}\" class=\"rounded mx-auto d-block\" alt=\"Responsive image\" id=\"resp\" />\n                        <br>\n                        <button class=\"btn btn-primary\" type=\"submit\" data-toggle=\"modal\" data-target=\"#exampleModal\" data-backdrop=\"false\">\n              Modifier l'image de la recette\n            </button>\n                        <!-- Modal -->\n                        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n                                            Modification de l'image de la recette\n                                        </h5>\n                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        <figcaption class=\"figure-caption\">\n                                            <!--bouton modifier photo à faire-->\n                                            <div style=\"text-align: center;\">\n                                                <form>\n                                                    <div>\n                                                        <input type=\"file\" name=\"image\" (change)=\"selectFile($event)\" />\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </figcaption>\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">\n                      Close\n                    </button>\n                                        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">\n                      Modifier\n                    </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div id=\"modal-backdrop\" class=\"modal-backdrop-transparent modal-transition\"></div>\n                    </div>\n                </td>\n            </tr>\n        </table>\n\n        <hr />\n\n        <label>\n      <h4><strong>Catégories</strong></h4>\n    </label>\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <td>\n                    <!--catégories de la recette-->\n                    <div style=\"text-align: initial;\" *ngFor=\"let categ of categories\">\n                        <button id=\"poubelle\" class=\"btn btn-sm btn-danger\" (click)=\"deleteRecipeCategory(categ, recette)\">\n              <i class=\"fa fa-trash\"></i>\n            </button> {{ categ.libelleCategorie }}\n                    </div>\n                </td>\n                <td>\n                    <!--catégorie dont la recette ne fait pas partie-->\n                    <div style=\"text-align: initial;\" *ngFor=\"let cat of allCategories\">\n                        <button id=\"add\" class=\"btn btn-sm btn-success\" (click)=\"addRecipeCategory(cat, recette)\">\n              <i class=\"fa fa-plus-circle\"></i>\n            </button> {{ cat.libelleCategorie }}\n                    </div>\n                </td>\n            </tr>\n        </table>\n\n        <hr />\n\n        <label>\n      <h4><strong>Parts</strong></h4>\n    </label>\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <ul>\n                    <form (submit)=\"updatePart(recette)\">\n                        <td>\n                            <label>Nombre</label>\n                            <br />\n                            <input type=\"number\" class=\"form-control\" [(ngModel)]=\"recette.nbrePart\" [ngModelOptions]=\"{ standalone: true }\" value=\"{{ recette.nbrePart }}\" required />\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n\n                        <td>\n                            <label>Libellé</label>\n                            <br />\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"recette.libellePart\" [ngModelOptions]=\"{ standalone: true }\" value=\"{{ recette.libellePart }}\" required />\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n\n                        <td>\n                            <div style=\"margin-top: 2em;\">\n                                <button class=\"btn btn-primary\" type=\"submit\">Modifier</button>\n                            </div>\n                        </td>\n                    </form>\n                </ul>\n            </tr>\n        </table>\n\n        <hr />\n\n        <label>\n      <h4><strong>Temps</strong></h4>\n    </label>\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <ul>\n                    <form (submit)=\"updateTemps(recette)\">\n                        <td>\n                            <label>Préparation</label>\n                            <br />\n                            <input type=\"time\" class=\"form-control\" [(ngModel)]=\"recette.tempsPreparation\" [ngModelOptions]=\"{ standalone: true }\" value=\"{{ recette.tempsPreparation }}\" step=\"2\" required />\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n\n                        <td>\n                            <label>Cuisson</label>\n                            <br />\n                            <input type=\"time\" class=\"form-control\" [(ngModel)]=\"recette.tempsCuisson\" [ngModelOptions]=\"{ standalone: true }\" value=\"{{ recette.tempsCuisson }}\" step=\"2\" required />\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </td>\n\n                        <td>\n                            <div style=\"margin-top: 2em;\">\n                                <button class=\"btn btn-primary\" type=\"submit\">Modifier</button>\n                            </div>\n                        </td>\n                    </form>\n                </ul>\n            </tr>\n        </table>\n\n        <hr />\n\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <label>\n          <h4><strong>Ingrédients</strong></h4>\n        </label>\n\n                <ul>\n                    <div *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n                        <form (submit)=\"updateRecipeIng(recette, ingredient)\">\n                            <td id=\"nomIng\">\n                                <p>{{ ingredient.nomIngredient }}</p>\n                            </td>\n\n                            <td id=\"qteIng\">\n                                <input type=\"text\" class=\"form-control\" name=\"qte\" value=\"{{ ingredient.qte }}\" #qte=\"ngModel\" [(ngModel)]=\"ingredient.qte\" />\n                            </td>\n                            <td>\n                                <select class=\"custom-select\" #idUnite=\"ngModel\" [(ngModel)]=\"ingredient.idUnite\" [ngModelOptions]=\"{ standalone: true }\" required>\n                  <option\n                    *ngFor=\"let unite of allUnites\"\n                    [attr.selected]=\"\n                      ingredient.libelleUnite == unite.libelleUnite\n                        ? true\n                        : null\n                    \"\n                    [attr.value]=\"unite.idUnite\"\n                  >\n                    {{ unite.libelleUnite }}\n                  </option>\n                </select>\n                            </td>\n                            <td>\n                                <button id=\"crayon\" class=\"btn btn-sm btn-warning\">\n                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                </button>\n                            </td>\n                            <td>\n                                <button id=\"poubelle\" class=\"btn btn-sm btn-danger\" (click)=\"deleteIngredientRececipe(ingredient, recette)\">\n                  <i class=\"fa fa-trash\"></i>\n                </button>\n                            </td>\n                        </form>\n                    </div>\n                    <ng-template #content let-modal>\n                        <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                        <div class=\"modal-header\">\n                            <h4 class=\"modal-title\"></h4>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form>\n                                <div class=\"form-row\">\n                                    <div class=\"col-md-3 mb-3\">\n                                        <label for=\"validationTooltip04\">Ingrédient</label>\n                                        <select class=\"custom-select\" id=\"validationTooltip04\" #idIngredient=\"ngModel\" [(ngModel)]=\"newIngredient.idIngredient\" [ngModelOptions]=\"{ standalone: true }\" required>\n                      <option\n                        *ngFor=\"let ingredient of allIngredients\"\n                        [ngValue]=\"ingredient.idIngredient\"\n                      >\n                        {{ ingredient.nomIngredient }}</option\n                      >\n                    </select>\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez un ingrédient.\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-3 mb-3\">\n                                        <label for=\"validationTooltip05\">Quantité</label>\n                                        <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\" #qte=\"ngModel\" [(ngModel)]=\"newIngredient.qte\" [ngModelOptions]=\"{ standalone: true }\" required />\n                                        <div class=\"invalid-tooltip\">\n                                            Rentrez une quantité correcte.\n                                            <!--Vérifier que c'est pas négatif ou nulle-->\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-3 mb-3\">\n                                        <label for=\"validationTooltip04\">Unité</label>\n                                        <select class=\"custom-select\" id=\"validationTooltip04\" #idUnite=\"ngModel\" [(ngModel)]=\"newIngredient.idUnite\" [ngModelOptions]=\"{ standalone: true }\" required>\n                      <option\n                        *ngFor=\"let unite of allUnites\"\n                        [ngValue]=\"unite.idUnite\"\n                      >\n                        {{ unite.libelleUnite }}\n                      </option>\n                    </select>\n                                        <div class=\"invalid-tooltip\">\n                                            Selectionnez une unité.\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button tyoe=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close(newIngredient)\">\n                Ajouter\n              </button>\n                        </div>\n                    </ng-template>\n\n                    <!--on appelle le modal-->\n                </ul>\n            </tr>\n\n            <tr>\n                <td>\n                    <button class=\"btn btn-primary\" (click)=\"open(content)\">\n            Ajouter un nouvel ingrédient\n          </button>\n                </td>\n            </tr>\n        </table>\n\n        <hr />\n\n        <label>\n      <h4><strong>Recette</strong></h4>\n    </label>\n\n        <table class=\"table col-md-8 mx-auto\">\n            <tr>\n                <ul>\n                    <div class=\"row\">\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 p-3\">\n                            <label>Préparation</label>\n\n                            <td>\n                                <form (submit)=\"updateSteps(recette)\">\n                                    <textarea class=\"form-control\" #etapes=\"ngModel\" rows=\"15em\" name=\"etapes\" [(ngModel)]=\"recette.etapes\" [ngModelOptions]=\"{ standalone: true }\">{{ recette?.etapes }}</textarea\n                  >\n                  <br />\n                  <button id=\"btn\" class=\"btn btn-primary\" type=\"submit\">\n                    Modifier\n                  </button>\n                </form>\n              </td>\n            </div>\n\n            <div class=\"col-lg-6 col-md-6 col-sm-12 p-3\">\n              <label>Astuces</label>\n              <td>\n                <form (submit)=\"updateAstuce(recette)\">\n                  <textarea\n                    class=\"form-control\"\n                    #etapes=\"ngModel\"\n                    rows=\"15em\"\n                    name=\"astuce\"\n                    [(ngModel)]=\"recette.astuce\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    >{{ recette?.astuce }}</textarea\n                  >\n                  <br />\n                  <button id=\"btn\" class=\"btn btn-primary\" type=\"submit\">\n                    Modifier\n                  </button>\n                </form>\n              </td>\n            </div>\n          </div>\n        </ul>\n      </tr>\n    </table>\n  </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserProfile } from '../../service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { __param } from 'tslib';\n@Component({\n  selector: 'app-mon-profile',\n  templateUrl: './mon-profile.component.html',\n  styleUrls: ['./mon-profile.component.css']\n})\nexport class MonProfileComponent implements OnInit {\n\n  credentials: UserProfile = {\n    pseudo: '',\n    email: '',\n    abonneNews: true,\n    success: ''\n  };\n\n  constructor(private auth: AuthentificationService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.auth.profile().subscribe(\n      user => {\n        this.credentials = user;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n    if (this.route.queryParams) {\n      this.route.queryParams\n        .subscribe(params => {\n          this.credentials.success = params.success;\n        });\n    }\n  }\n\n  updateProfile() {\n    this.auth.updateProfile(this.credentials).subscribe((res: any) => {\n      this.credentials.success = res.success;\n      this.router.navigateByUrl('/profile').then(() => {\n        // tslint:disable-next-line: deprecation\n        setTimeout(window.location.reload.bind(window.location), 2500);\n      });\n    }, (err: any) => {\n      console.error(err);\n    }\n    );\n  }\n\n\n  deleteProfile(pseudo: any) {\n    this.auth.logout();\n    this.auth.deleteProfile(pseudo)\n      .subscribe(res => {\n        this.router.navigate(['/']);\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  }\n\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n       \n            <div class=\"col-sm-10 mx-auto\" ng-controller=\"formCtrl\" ng-app=\"myApp\">\n                <form (submit)=\"updateProfile()\">\n                <h1 class=\"text-center\">Mon profil</h1>\n\n                <div *ngIf=\"credentials.success\" class=\"alert alert-success\" role=\"alert\">\n                    <label>{{credentials.success}}</label>\n                </div>\n\n                <table class=\"table col-md-8 mx-auto\">\n                    <tr>\n                        <td>Pseudo</td>\n                        <td>{{credentials?.pseudo}}</td>\n                    </tr>\n        \n                \n                    \n                    <tr>  \n                        <td><label>Email </label>\n                            <div *ngIf=\"email.errors && (email.invalid || email.touched)\">\n                            <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Entrez une adresse mail valide !</small>\n                        </div>\n                        </td>\n                        <td><input type=\"email\" #email=\"ngModel\" class=\"form-control\" name=\"email\" value= {{credentials?.email}}\n                            [class.is-invalid]=\"email.invalid && email.touched\" required\n                            pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" \n                            [(ngModel)]=\"credentials.email\"></td>\n                        \n                    </tr>\n                \n                    <tr>\n                        <td>Mot de passe</td>\n                        <td><button class=\"btn btn-outline-dark\" routerLink='/update-password'>Modifier</button></td> \n                    </tr>\n                    <tr>\n                        <td><label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label></td> \n                        <div *ngIf=\"credentials?.abonneNews\">\n                            <td>\n                                <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                    checked [(ngModel)]=\"credentials.abonneNews\"> Oui\n                                <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                    [(ngModel)]=\"credentials.abonneNews\"> Non\n                            </td>\n                        </div>\n                        <div *ngIf=\"!credentials?.abonneNews\">\n                            <td>\n                                <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                    [(ngModel)]=\"credentials.abonneNews\"> Oui\n                                <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                    checked [(ngModel)]=\"credentials.abonneNews\"> Non\n                            </td>\n                        </div>\n                        \n                        \n                    </tr>\n                </table>\n                <div class=\"text-center\">\n                <button class=\"btn btn-light\" *ngIf=\"!email.errors\" type=\"submit\">Enregistrer les modifications</button>\n                <button class=\"btn btn-light\"  *ngIf=\"email.errors\" type=\"submit\" disabled>Enregistrer les modifications</button>\n            </div>\n            <br>\n            <div class=\"text-center\">\n                <button class=\"btn btn-outline-danger \" (click)=\"deleteProfile(credentials?.pseudo)\" \n                    type=\"submit\">Supprimer mon compte</button>\n                </div>\n                </form>\n            \n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { RecettesService, AuthentificationService, ImagesService, CommentairesService,\n  IngredientsService, FavorisService, UnitesService, ShoppingListService } from '../../service';\nimport { RecipeDetails, IngredientDetails, UniteDetails, QuantiteDetails,\n  FavorisDetails, ListeCoursesDetails, CommentaireDetails } from '../../models';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { addHours, roundDecimal } from '../../utils/Utils';\n\n@Component({\n  selector: 'app-recette',\n  templateUrl: './recette.component.html',\n  styleUrls: ['./recette.component.scss']\n})\nexport class RecetteComponent implements OnInit {\n\n  public title;\n  public images;\n\n  public image;\n  public recette: RecipeDetails;\n  public ingredients: Observable<IngredientDetails[]>;\n  public unite: UniteDetails;\n  public qtes: QuantiteDetails[];\n  public newFavori: FavorisDetails = {\n    pseudo: '',\n    idRecette: parseInt(this.route.snapshot.paramMap.get('id'), 10)\n  };\n\n  public newListeCourses: ListeCoursesDetails = {\n    pseudo: '',\n    listIngredients: null\n  };\n\n  public commentaires: CommentaireDetails[];\n  public newCommentaire: CommentaireDetails = {\n    message: '',\n    dateCommentaire: null,\n    ecritPar: '',\n    concerne: parseInt(this.route.snapshot.paramMap.get('id'), 10)\n  };\n\n  public newResponse: CommentaireDetails = {\n    message: '',\n    dateCommentaire: null,\n    ecritPar: '',\n    concerne: parseInt(this.route.snapshot.paramMap.get('id'), 10),\n    parent: null\n  };\n\n  public nbrePartInitial: number;\n  public ingredientQteInitial: IngredientDetails[];\n\n  public element: any;\n\n  public isFavori = false;\n\n  public latestRecipes: RecipeDetails[];\n\n  constructor(public auth: AuthentificationService, private recetteService: RecettesService,\n              private router: Router, private route: ActivatedRoute, private imagesService: ImagesService,\n              private commentairesService: CommentairesService, private ingredientsService: IngredientsService,\n              private favorisService: FavorisService, private unitesService: UnitesService,\n              private shoppingListService: ShoppingListService) {\n    this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      recette => {\n        this.recette = recette;\n        this.recette.tempsCuisson = addHours(this.recette.tempsCuisson);\n        this.recette.tempsPreparation = addHours(this.recette.tempsPreparation);\n        this.nbrePartInitial = this.recette.nbrePart;\n      }\n    );\n\n    this.recetteService.getLatestReceipes().subscribe(data => {\n      this.latestRecipes = data;\n    });\n\n    this.imagesService.getImage(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      res => {\n        console.log(res);\n        this.image = res;\n      }\n    );\n\n    this.ingredientsService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      ingredient => {\n\n        ingredient.forEach(element => {\n          element.qte = roundDecimal(element.qte);\n        });\n\n        this.ingredients = ingredient;\n        this.recette.ingredients = ingredient;\n        this.ingredientQteInitial = ingredient;\n      }\n    );\n\n    this.commentairesService.getCommentaireRecipe(parseInt(this.route.snapshot.paramMap.get('id'), 10)).subscribe(\n      commentaires => {\n        if (commentaires[0]) {\n          this.commentaires = commentaires;\n        }\n      }\n    );\n\n    if (this.auth.isLoggedIn()) {\n      this.favorisService.getFavoris().subscribe(data => {\n        data.forEach(element => {\n          if (element.idRecette === parseInt(this.route.snapshot.paramMap.get('id'), 10)) {\n            this.isFavori = true;\n          }\n        });\n      });\n      this.newFavori.pseudo = this.auth.getUserDetails().pseudo;\n      this.newListeCourses.pseudo = this.auth.getUserDetails().pseudo;\n      this.newCommentaire.ecritPar = this.auth.getUserDetails().pseudo;\n      this.newResponse.ecritPar = this.auth.getUserDetails().pseudo;\n    }\n  }\n\n  onClick() {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload();\n        });\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Cette recette n\\'existe pas !');\n          }\n        }\n      });\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.images = file;\n    }\n  }\n\n  getUtiliserIngredientsByIdRecette(id: any): QuantiteDetails[] {\n    this.ingredientsService.getUtiliserIngredientsByIdRecette(id).subscribe(\n      (qtes: QuantiteDetails[]) => {\n        this.qtes = qtes;\n      }, err => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log('Il n\\'y a pas d\\'ingrédients !');\n          }\n        }\n      }\n    );\n    return this.qtes;\n  }\n\n  getUniteByIdUnite(id: any): UniteDetails {\n    this.unitesService.getUniteById(id).subscribe(\n      (unite: UniteDetails) => {\n        this.unite = unite;\n      }, err => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log('Il n\\'y a pas d\\'ingrédients !');\n          }\n        }\n      }\n    );\n    return this.unite;\n  }\n\n  addFavoris() {\n    this.favorisService.addFavoris(this.newFavori).subscribe();\n    this.isFavori = true;\n    window.location.reload();\n  }\n\n  deleteFavoris() {\n    this.favorisService.deleteFavoris(this.newFavori.idRecette).subscribe();\n    this.isFavori = false;\n    window.location.reload();\n  }\n\n  addListeCourses() {\n    this.newListeCourses.listIngredients = this.ingredients;\n    this.shoppingListService.addListeCourses(this.newListeCourses);\n\n    this.router.navigate(['/shoppingList']).then(() => {\n      window.location.reload();\n    });\n\n\n  }\n  deleteCommentaire(idCommentaire: any) {\n    this.commentairesService.deleteCommentaire(idCommentaire)\n      .subscribe(res => {\n        this.router.navigate(['/recipe/' + parseInt(this.route.snapshot.paramMap.get('id'), 10)]).then(() => {\n          window.location.reload();\n        });\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n  addCommentaire(message: any) {\n    if (this.images) {\n      const formData = new FormData();\n      formData.append('file', this.images);\n      this.newCommentaire.message = message;\n      this.imagesService.addImage(formData).subscribe(res => {\n        this.newCommentaire.idImage = res[0];\n        this.commentairesService.addCommentaire(this.newCommentaire).subscribe(res2 => {\n          this.newCommentaire.idCommentaire = res2.idCommentaire;\n          this.commentairesService.addImageToCommentaire(this.newCommentaire).subscribe();\n          window.location.reload();\n        });\n      });\n    } else {\n      this.newCommentaire.message = message;\n      this.commentairesService.addCommentaire(this.newCommentaire).subscribe();\n      window.location.reload();\n    }\n\n    // window.location.reload()\n  }\n\n  addReponse(event, idCommentaire) {\n    if (this.images) {\n      const formData = new FormData();\n      formData.append('file', this.images);\n      this.newResponse.message = event.target.message.value;\n      this.newResponse.parent = idCommentaire;\n      this.imagesService.addImage(formData).subscribe(res => {\n        this.newResponse.idImage = res[0];\n        this.commentairesService.addCommentaire(this.newResponse).subscribe(res2 => {\n          this.newResponse.idCommentaire = res2.idCommentaire;\n          this.commentairesService.addImageToCommentaire(this.newResponse).subscribe();\n          window.location.reload();\n        });\n      });\n    } else {\n      this.newResponse.message = event.target.message.value;\n      this.newResponse.parent = idCommentaire;\n      this.commentairesService.addCommentaire(this.newResponse).subscribe();\n      window.location.reload();\n    }\n    // window.location.reload()\n  }\n\n\n  onProportionChange(searchValue: string): void {\n    this.recette.ingredients.forEach(element => {\n      element.qte = (element.qte * parseInt(searchValue, 10)) / this.recette.nbrePart;\n    });\n    this.recette.nbrePart = parseInt(searchValue, 10);\n  }\n\n  onProportionLess(value: number): void {\n    this.recette.ingredients.forEach(element => {\n      element.qte = roundDecimal((element.qte * value) / this.recette.nbrePart);\n    });\n    this.recette.nbrePart = this.recette.nbrePart - 1;\n  }\n\n  onProportionMore(value: number): void {\n    this.recette.ingredients.forEach(element => {\n      element.qte = roundDecimal((element.qte * value) / this.recette.nbrePart);\n    });\n    this.recette.nbrePart = this.recette.nbrePart + 1;\n  }\n\n}\n","<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>\n\n<header class=\"site-header\">\n\n    <div id=\"titreRecette\" class=\"header-content\">\n\n        <div class=\"title-area\">\n\n            <h1>{{recette?.nomRecette}}</h1>\n            <p id=\"timer\">{{recette?.nbVues}} 👁 {{recette?.nbFavoris}} <svg class=\"bi bi-heart-fill\" width=\"1em\"\n                    height=\"1em\" viewBox=\"0 0 16 16\" fill=\"red\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\"\n                        d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n                        clip-rule=\"evenodd\" />\n                </svg>\n            </p>\n            <h2></h2>\n\n            <div id=\"timer\"\n                class=\"wprm-recipe-servings-container wprm-recipe-block-container wprm-recipe-block-container-separate wprm-block-text-normal\">\n                <div id=\"logoRecette\">\n                    <img *ngIf=\"recette?.tempsPreparation != null\" src=\"../../../assets/img/preparation.png\"\n                        width=\"50em\" height=\"50em\"> {{recette?.tempsPreparation}}\n                </div>\n\n                <div id=\"logoRecette\">\n                    <img *ngIf=\"recette?.tempsCuisson != null\" src=\"../../../assets/img/cuisson.png\" width=\"50em\"\n                        height=\"50em\"> {{recette?.tempsCuisson}}\n                </div>\n\n                <div id=\"logoRecette\">\n                    <span id=\"part\" class=\"wprm-recipe-icon wprm-recipe-servings-icon\"><svg\n                            xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n                            y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\">\n                            <g>\n                                <path fill=\"#333333\"\n                                    d=\"M10,0C9.4,0,9,0.4,9,1v4H7V1c0-0.6-0.4-1-1-1S5,0.4,5,1v4H3V1c0-0.6-0.4-1-1-1S1,0.4,1,1v8c0,1.7,1.3,3,3,3v10c0,1.1,0.9,2,2,2s2-0.9,2-2V12c1.7,0,3-1.3,3-3V1C11,0.4,10.6,0,10,0z\">\n                                </path>\n                                <path data-color=\"color-2\" fill=\"#333333\"\n                                    d=\"M19,0c-3.3,0-6,2.7-6,6v9c0,0.6,0.4,1,1,1h2v6c0,1.1,0.9,2,2,2s2-0.9,2-2V1C20,0.4,19.6,0,19,0z\">\n                                </path>\n                            </g>\n                        </svg>\n                    </span>{{recette?.nbrePart}} {{recette?.libellePart}}\n                    <span class=\"wprm-recipe-servings-unit wprm-recipe-details-unit wprm-block-text-normal\">\n                    </span>\n                </div>\n\n\n            </div>\n            <p id=\"btn-p\" *ngIf=\"!isFavori\">\n                <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-danger\"\n                    (click)=\"addFavoris()\">♥ Ajouter la recettes à mes favoris</button>\n            </p>\n            <p id=\"btn-p\" *ngIf=\"isFavori\">\n                <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-danger\"\n                    (click)=\"deleteFavoris()\">♥ Supprimer la recettes de mes favoris</button>\n            </p>\n\n\n\n        </div>\n\n    </div>\n    <div class=\"hero-graphic\" *ngFor=\"let img of image\">\n        <img id=\"hero-graphic\" src=\"{{img.lienImage}}\" alt=\"Photo de la recette\">\n\n\n        <!-- always, right? -->\n    </div>\n\n</header>\n\n<main class=\"main-content\">\n\n    <article id=\"hamburger-juicy\">\n\n        <h2 id=\"no-hamburger-juicy\">Ingrédients</h2>\n\n        <p id=\"nbrePart\">Nombre de {{recette?.libellePart}}</p>\n\n        <div class=\"recipe-ingredients__qt-counter\">\n            <div class=\"recipe-ingredients__qt-counter__increment recipe-ingredients__qt-counter__increment-minus\"\n                (click)=\"onProportionLess(recette?.nbrePart - 1)\">-</div>\n            <input class=\"recipe-ingredients__qt-counter__value title-5\" type=\"text\" name=\"\"\n                value=\"{{recette?.nbrePart}}\">\n            <div class=\"recipe-ingredients__qt-counter__increment recipe-ingredients__qt-counter__increment-plus\"\n                (click)=\"onProportionMore(recette?.nbrePart + 1)\">+</div>\n        </div>\n\n        <div id=\"no-hamburger-juicy\">\n            <p>\n\n                <li *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n                    {{ingredient.qte}} {{ingredient.libelleUnite}} {{ingredient.nomIngredient}}\n                </li>\n\n            </p>\n            <p id=\"btn-p\"> <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-info\"\n                    (click)=\"addListeCourses()\">Ajouter les ingrédients à ma liste de course</button></p>\n        </div>\n\n\n\n    </article>\n\n    <article id=\"burger-fourth\">\n\n        <h2>Préparation </h2>\n\n        <pre>{{recette?.etapes}}</pre>\n\n    </article>\n\n    <article>\n\n        <h2>Astuces</h2>\n\n        <pre>{{recette?.astuce}}</pre>\n        <div class=\"byline\" *ngIf=\"recette?.astuce\">\n            <span>By</span> Marine\n        </div>\n        <div id=\"partage\">\n\n            <p> <i class=\"fa fa-lg fa-instagram\"></i> Partagez moi votre résultat 😍 Mentionnez <a\n                    href=\"https://www.instagram.com/marineteroitin/?hl=fr\">@marineteroitin</a> ou taguez <a\n                    href=\"https://www.instagram.com/explore/tags/marinesrecipes/?hl=fr\"> #marinesrecipes</a>!\n            </p>\n        </div>\n\n    </article>\n\n    <article id=\"burger-fourth\">\n\n        <h2>Commentaires</h2>\n        <div *ngIf=\"!auth.isLoggedIn()\" class=\"blog-text-color\">\n            <span class=\"blog-button-color\" routerLink=\"/register\">Connexion</span> pour rédiger un commentaire.\n        </div>\n        <div *ngIf=\"auth.isLoggedIn()\" class=\"card v-card v-sheet theme--light elevation-2\"><span\n                class=\"headline\">Laisser un commentaire</span>\n            <div class=\"sign-in-wrapper\">\n                <div class=\"caption disclaimer\">\n                    <textarea class=\"form-control\" #message=\"ngModel\" [(ngModel)]=\"newCommentaire.message\"\n                        [ngModelOptions]=\"{standalone: true}\" id=\"exampleFormControlTextarea1\" cols=\"45\" rows=\"8\"\n                        aria-required=\"true\" required></textarea>\n                    <form>\n                        <div id=\"image\">\n                            <input type=\"file\" id=\"file\" name=\"file\" class=\"inputfile\" name=\"image\"\n                                (change)=\"selectImage($event)\" />\n                            <label id=\"positionImage\" for=\"file\" style=\"font-size: 16px;\">Choisir une image</label>\n                        </div>\n                        <br>\n                    </form>\n                </div>\n                <p class=\"error-message\"></p>\n                <button id=\"envoyer\" (click)=\"addCommentaire(newCommentaire.message)\">Envoyer</button>\n            </div>\n\n\n            <!---->\n        </div>\n\n        <div *ngIf=\"commentaires\" id=\"comments\" class=\"post-comments elevation-2\">\n\n            <div>\n                <ol class=\"comment-list\">\n                    <li class=\"comment even thread-even depth-1 parent\" *ngFor=\"let commentaire of commentaires\">\n                        <article class=\"comment-body\">\n                            <footer class=\"comment-meta\">\n                                <div *ngIf=\"!commentaire.admin\" class=\"comment-author vcard\">\n                                    <img alt=\"\" src=\"../../../assets/img/avatar.png\"\n                                        class=\"avatar avatar-60 photo grav-hashed grav-hijack\" height=\"60\" width=\"60\">\n                                    <b class=\"fn\">{{commentaire.ecritPar}}</b></div>\n                                <div *ngIf=\"commentaire.admin\" class=\"comment-author vcard\">\n                                    <img id=\"logo\" src=\"../../../assets/img/logo.jpeg\"\n                                        class=\"avatar avatar-60 photo grav-hashed grav-hijack\" height=\"60\" width=\"auto\">\n                                    <b class=\"fn\">{{commentaire.ecritPar}}</b></div>\n                                <!-- .comment-author -->\n\n                                <div class=\"comment-metadata\">\n                                    <a>\n                                        <time datetime=\"2020-04-09T16:20:54+02:00\">\n                                            {{commentaire.dateCommentaire}}</time>\n                                    </a>\n                                </div><!-- .comment-metadata -->\n\n                            </footer><!-- .comment-meta -->\n\n                            <div class=\"comment-content row\">\n                                <div class=\"column1\">\n                                    <div class=\"row\">\n                                        <p>{{commentaire.message}}</p>\n                                        <div>\n                                            <img id=\"imageCommentaire\" src=\"{{commentaire.lienImage}}\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"column2\">\n                                    <button id=\"btnCancel\" *ngIf=\"auth.isAdmin()\" class=\"btn btn-sm btn-danger\"\n                                        (click)=\"deleteCommentaire(commentaire.idCommentaire)\"><i\n                                            class=\" fa fa-trash \"></i></button>\n                                </div>\n                            </div><!-- .comment-content -->\n\n                            <div class=\"comment-btn\" *ngIf=\"commentaire.children && auth.isLoggedIn()\">\n                                <form class=\"formCommentaire\" (ngSubmit)=\"addReponse($event, commentaire.idCommentaire)\">\n                                    <textarea name=\"message\" type=\"textarea\" class=\"text\" rows=\"3\"></textarea>\n                                    <form>\n                                        <div id=\"image\">\n                                            <input type=\"file\" id=\"{{commentaire.idCommentaire}}\" name=\"file\" class=\"inputfile\" name=\"image\"\n                                                (change)=\"selectImage($event)\" />\n                                            <label id=\"positionImage\" for=\"{{commentaire.idCommentaire}}\">Choisir une image</label>\n                                        </div>\n                                        <br>\n                                    </form>\n                                    <div id=\"envoyerCommentaire\">\n                                        <button type=\"submit\">Répondre</button>\n                                    </div>\n                                </form>\n                            </div>\n\n\n                        </article><!-- .comment-body -->\n                        <div *ngIf=\"commentaire.children\" id=\"children\">\n                            <ol class=\"children\">\n                                <li class=\"comment byuser comment-author-healthyclemsy bypostauthor odd alt depth-2\"\n                                    *ngFor=\"let children of commentaire.children ; last as isLast\">\n                                    <article class=\"comment-body\">\n                                        <footer class=\"comment-meta\">\n                                            <div *ngIf=\"!children.admin\" class=\"comment-author vcard\">\n                                                <img alt=\"\" src=\"../../../assets/img/avatar.png\"\n                                                    class=\"avatar avatar-60 photo grav-hashed grav-hijack\" height=\"60\"\n                                                    width=\"60\"> <b class=\"fn\">{{children.ecritPar}}</b></div>\n                                            <div *ngIf=\"children.admin\" class=\"comment-author vcard\">\n                                                <img alt=\"\" src=\"../../../assets/img/logo.jpeg\" id=\"logo\"\n                                                    class=\"avatar avatar-60 photo grav-hashed grav-hijack\" height=\"60\"\n                                                    width=\"auto\"> <b class=\"fn\">{{children.ecritPar}}</b></div>\n                                            <!-- .comment-author -->\n\n                                            <div class=\"comment-metadata\">\n                                                <a>\n                                                    <time datetime=\"2020-04-12T10:36:28+02:00\">\n                                                        {{children.dateCommentaire}}</time>\n                                                </a>\n                                            </div><!-- .comment-metadata -->\n\n                                        </footer><!-- .comment-meta -->\n\n                                        <div class=\"comment-content row\">\n                                            <div class=\"column1\">\n                                                <div class=\"row\">\n                                                    <p>{{children.message}}</p>\n                                                    <div>\n                                                        <img id=\"imageCommentaire\" src=\"{{children.lienImage}}\">\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"column2\">\n                                                <button id=\"btnCancel\" *ngIf=\"auth.isAdmin()\"\n                                                    class=\"btn btn-sm btn-danger\"\n                                                    (click)=\"deleteCommentaire(children.idCommentaire)\"><i\n                                                        class=\" fa fa-trash \"></i></button>\n                                            </div>\n                                        </div><!-- .comment-content -->\n\n\n                                        <div class=\"reply\">\n\n                                        </div><!-- #respond -->\n\n                                        <div class=\"comment-btn\" *ngIf=\"isLast && auth.isLoggedIn()\">\n                                            <form class=\"formCommentaire\"\n                                                (ngSubmit)=\"addReponse($event, commentaire.idCommentaire)\">\n                                                <textarea name=\"message\" type=\"textarea\" class=\"text\"\n                                                    rows=\"3\"></textarea>\n                                                <form>\n                                                    <div id=\"image\">\n                                                        <input type=\"file\" id=\"{{children.idCommentaire}}\" name=\"file\" class=\"inputfile\"\n                                                            name=\"image\" (change)=\"selectImage($event)\" />\n                                                        <label id=\"positionImage\" for=\"{{children.idCommentaire}}\">Choisir une image</label>\n                                                    </div>\n                                                    <br>\n                                                </form>\n                                                <div id=\"envoyerCommentaire\">\n                                                    <button type=\"submit\">Répondre</button>\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    </article><!-- .comment-body -->\n                                </li><!-- #comment-## -->\n                            </ol><!-- .children -->\n                        </div>\n\n                    </li><!-- #comment-## -->\n                </ol><!-- .comment-list -->\n            </div>\n\n        </div>\n\n    </article>\n</main>\n<div id=\"recentPost\">\n    <h2>Post récents</h2>\n    <div class=\"container marketing\">\n\n        <!-- Three columns of text below the carousel -->\n        <div class=\"row\">\n            <div class=\"col-lg-4\" *ngFor=\"let recette of latestRecipes\">\n                <div id=\"imgSize\">\n                    <div class=\"box\">\n                        <img id=\"imgCard\" class=\"bd-placeholder-img\" width=\"180\" height=\"auto\"\n                            src=\"{{recette.lienImage}}\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\"\n                            role=\"img\">\n                    </div>\n                </div>\n                <ul class=\"post-categories2\">\n                    <li *ngFor=\"let category of recette.categories\"><a\n                            rel=\"category tag\">{{category.libelleCategorie}}</a>\n                    </li>\n                </ul>\n                <h3 id=\"cardTitle\">{{recette.nomRecette}}</h3>\n                <div id=\"container\">\n                    <div class=\"centre\">\n                        {{recette.mot}}\n                    </div><!-- centre -->\n                </div>\n                <p><a (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\"\n                        class=\"btn btn-primary btn-effect top\">\n                        <span>Voir »</span>\n                        <span><i class=\"fa fa-long-arrow-right\"></i></span>\n                    </a></p>\n            </div><!-- /.col-lg-4 -->\n        </div><!-- /.row -->\n    </div>\n</div>","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { RecettesService, AuthentificationService, ImagesService, CategoriesService, FavorisService } from '../../service';\nimport { RecipeDetails, CategoryDetails, FavorisDetails } from '../../models';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-recettes',\n  templateUrl: './recettes.component.html',\n  styleUrls: ['./recettes.component.scss']\n})\nexport class RecettesComponent implements OnInit, OnChanges {\n\n  page = 1;\n\n  public actualCategory: number = null;\n  public recipeByCategory: HashTable<RecipeDetails[]> = {};\n  public recipeCategory: RecipeDetails[] = [];\n\n  public recettes$: Observable<RecipeDetails[]>;\n  public categories: CategoryDetails[];\n  public filteredRecipe$: Observable<RecipeDetails[]>;\n  public filter: FormControl;\n  public filter$: Observable<string>;\n\n  public newFavori: FavorisDetails = {\n    pseudo: '',\n    idRecette: null\n  };\n  public favoris: number[] = [];\n\n  public researchForm: FormGroup;\n\n  public allRecipe: RecipeDetails[];\n  public allRecipe2: RecipeDetails[];\n  currentPage: number;\n\n  constructor(private recetteService: RecettesService, private router: Router, public auth: AuthentificationService,\n              private formBuilder: FormBuilder, private route: ActivatedRoute, private imagesService: ImagesService,\n              private categoriesService: CategoriesService, private favorisService: FavorisService) {\n    // pour la recherche dynamique\n    this.recettes$ = this.recetteService.getAllRecipesAndIngredients();\n\n    if (this.route.snapshot.paramMap.get('id')) {\n      this.getRecipeByCategory(this.route.snapshot.paramMap.get('id'));\n    } else {\n      this.recetteService.getAllRecipesAndIngredients().subscribe(data => {\n        this.allRecipe = data;\n        this.allRecipe2 = data;\n      });\n    }\n\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) => {\n        return recipes.filter(recipe =>\n          recipe.ingredients.filter(ingredient =>\n            ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)\n          && recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1\n        );\n      }));\n\n    if (this.auth.isLoggedIn()) {\n      this.newFavori.pseudo = this.auth.getUserDetails().pseudo;\n      this.getFavoris();\n    }\n\n    this.categoriesService.getAllCategory().subscribe(\n      (categorie: CategoryDetails[]) => {\n        this.categories = categorie;\n        categorie.forEach(data => {\n          this.recetteService.getRecipeByCategory(data.idCategorie).subscribe(recipes => {\n            this.recipeCategory = recipes;\n            this.recipeByCategory[data.idCategorie] = this.recipeCategory;\n          });\n        });\n      });\n    this.initResearchForm();\n    this.currentPage = 1;\n  }\n\n  // dans ngOnInit on récupère les données à afficher au lancement de la page\n  ngOnInit(): void {\n  }\n\n  ngOnChanges() {\n    this.allRecipe = this.allRecipe2;\n    this.initResearchForm();\n    document.body.scrollTop = 0;\n  }\n\n  onPageChange(page: number) {\n    this.currentPage = page;\n    window.scrollTo(0, 0);\n }\n\n  initResearchForm() {\n    this.researchForm = this.formBuilder.group({\n      filter: ['']\n    });\n  }\n\n  research() {\n    const formValue = this.researchForm.value;\n\n    if (this.actualCategory != null) {\n      if (formValue.filter !== '') {\n        const researchResult: RecipeDetails[] = [];\n        this.recipeByCategory[this.actualCategory].forEach(recipe => {\n          if (recipe.nomRecette.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n            if (!researchResult.includes(recipe)) {\n              researchResult.push(recipe);\n            }\n          }\n          recipe.ingredients.forEach(ingredient => {\n            if (ingredient.nomIngredient.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n              if (!researchResult.includes(recipe)) {\n                researchResult.push(recipe);\n              }\n            }\n          });\n        });\n        this.allRecipe = researchResult;\n      } else {\n        this.allRecipe = this.allRecipe2;\n      }\n    } else {\n      if (formValue.filter !== '') {\n        const researchResult: RecipeDetails[] = [];\n\n        this.allRecipe2.forEach(recipe => {\n          if (recipe.nomRecette.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n            if (!researchResult.includes(recipe)) {\n              researchResult.push(recipe);\n            }\n          }\n          recipe.ingredients.forEach(ingredient => {\n            if (ingredient.nomIngredient.toLowerCase().indexOf(formValue.filter.toLowerCase()) !== -1) {\n              if (!researchResult.includes(recipe)) {\n                researchResult.push(recipe);\n              }\n            }\n          });\n        });\n        this.allRecipe = researchResult;\n      } else {\n        this.allRecipe = this.allRecipe2;\n      }\n    }\n  }\n\n  getAllRecipes() {\n\n    this.actualCategory = null;\n\n    this.recettes$ = this.recetteService.getAllRecipesAndIngredients();\n\n    this.recetteService.getAllRecipesAndIngredients().subscribe(data => {\n      this.allRecipe = data;\n    });\n\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe =>\n          recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n  }\n\n  getImageByIdRecipe(id: number): any {\n    this.imagesService.getImage(id).subscribe(\n      res => {\n        return res.lienImage;\n      });\n  }\n\n  getAllCategory() {\n    this.categoriesService.getAllCategory().subscribe(\n      (categorie: CategoryDetails[]) => {\n\n        this.categories = categorie;\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Il n\\'y a pas de catégorie.');\n\n\n          }\n\n        }\n      }\n    );\n  }\n\n  getRecipeByCategory(idCategorie: any) {\n\n    this.actualCategory = idCategorie;\n\n    this.recettes$ = this.recetteService.getRecipeByCategory(idCategorie);\n\n    this.recetteService.getRecipeByCategory(idCategorie).subscribe(data => {\n      this.allRecipe = data;\n    });\n\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload();\n        });\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Cette recette n\\'existe pas !');\n          }\n        }\n      });\n  }\n\n  addFavoris(id: number) {\n    this.newFavori.idRecette = id;\n    this.favorisService.addFavoris(this.newFavori).subscribe(res => {\n      this.getFavoris();\n      this.recetteService.getAllRecipesAndIngredients().subscribe(data => {\n        this.allRecipe = data;\n      });\n    });\n  }\n\n\n  getFavoris() {\n    this.favoris = [];\n    this.favorisService.getFavoris().subscribe(\n      (favoris: RecipeDetails[]) => {\n        favoris.forEach(element => {\n          this.favoris.push(element.idRecette);\n        });\n\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log('Cette user n\\'a pas de favoris');\n          }\n        }\n      });\n  }\n\n  deleteFavoris(idRecette: any) {\n    this.favorisService.deleteFavoris(idRecette).subscribe(res => {\n      this.getFavoris();\n      this.recetteService.getAllRecipesAndIngredients().subscribe(data => {\n        this.allRecipe = data;\n      });\n    }); /* rafraichit la page */\n  }\n}\n\nexport interface HashTable<T> {\n  [key: number]: T;\n}\n","<ul id=\"menu\" class=\"nav justify-content-center\">\n    <li class=\"nav justify-content-center\">\n        <a class=\"nav-link active\" routerLink=\"/allRecipes\" (click)=\"getAllRecipes()\">Toutes les recettes</a>\n    </li>\n\n    <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n        <a class=\"nav-link\" routerLink=\"/allRecipes\"\n            (click)=\"getRecipeByCategory(categ.idCategorie)\">{{categ.libelleCategorie}}</a>\n    </li>\n    <!--<li>\n        <form class=\"form-inline my-2 my-lg-0\">\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recette..\" aria-label=\"Search\"\n                [formControl]=\"filter\">\n        </form>\n    </li>-->\n</ul>\n\n<br>\n\n<ul class=\"nav justify-content-center\">\n    <li>\n        <form class=\"form-inline\" [formGroup]=\"researchForm\" (ngSubmit)=\"research()\">\n            <div class=\"col text-center\">\n                <input class=\"form-control\" type=\"search\" placeholder=\"Recette, ingrédient..\" aria-label=\"Search\"\n                    formControlName=\"filter\" (click)=\"ngOnChanges()\">\n            </div>\n            <div class=\"col text-center\">\n                <button id=\"validateButton\" type=\"submit\" class=\"btn btn-primary\">Rechercher</button>\n            </div>\n        </form>\n    </li>\n</ul>\n\n<br>\n\n<div class=\"row\">\n    <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"\n        *ngFor=\"let recette of allRecipe | paginate: { id: 'listing_pagination', itemsPerPage:12, currentPage: currentPage}\">\n        <article class=\"card wrap\">\n            <div id=\"photo\" [ngStyle]=\"{'background-image': 'url(&quot;' + recette.lienImage + '&quot;)'}\"\n                (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">\n            </div>\n            <div>\n                <a>\n                </a>\n                <div id=\"titleRecipe\">\n                    <h3 class=\"food\">\n                        {{recette.nomRecette}}\n                    </h3>\n                </div>\n                <div id=\"logoRecette\">\n                    <div class=\"logo\">\n                        <i class=\"fa fa-clock-o\"></i><a class=\"picto-item\" aria-label=\"Temps de préparation\"><i\n                                id=\"textlogo\">{{recette.globalTime}}</i></a>\n                    </div>\n                    <div class=\"logo\">\n                        <i class=\"fa fa-users\"></i><a class=\"picto-item\" aria-label=\"Nombre de parts\"><i\n                                id=\"textlogo\">{{recette.nbrePart}} {{recette.libellePart}}</i></a>\n                    </div>\n                    <div class=\"logo\">\n                        <a class=\"picto-item\" aria-label=\"Nombre de vues\"><i id=\"textlogo\">{{recette?.nbVues}}</i><i\n                                id=\"vue\"> 👁</i></a>\n                    </div>\n                    <div id=\"coeur\" class=\"logo\">\n                        <a *ngIf=\"this.auth.isLoggedIn() && !this.favoris.includes(recette.idRecette)\" id=\"btn\"\n                            (click)=\"addFavoris(recette?.idRecette)\" class=\"picto-item\"\n                            aria-label=\"Ajouter aux favoris\"><i id=\"textlogo\">{{recette?.nbFavoris}} </i><i\n                                class=\"fa fa-heart-o\"></i></a>\n                        <a *ngIf=\"this.auth.isLoggedIn() && this.favoris.includes(recette.idRecette)\" id=\"btn\"\n                            (click)=\"deleteFavoris(recette.idRecette)\" class=\"picto-item\"\n                            aria-label=\"Supprimer des favoris\"><i id=\"textlogo\">{{recette?.nbFavoris}} </i><i\n                                class=\"class= fa fa-heart\"></i></a>\n                    </div>\n                </div>\n            </div>\n        </article>\n    </div>\n</div>\n<div id=\"paginationRecette\" #scrollContainer>\n    <pagination-controls id='listing_pagination' (pageChange)=\"onPageChange($event)\" previousLabel=\"Précédent\"\n        nextLabel=\"Suivant\"></pagination-controls>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-refresh',\n  templateUrl: './refresh.component.html',\n  styleUrls: ['./refresh.component.css']\n})\n\nexport class RefreshComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute, private route: Router) { }\n\n  ngOnInit() {\n    this.activatedRoute\n        .queryParams\n        .subscribe(params => {\n          if (params.url) {\n            this.route.navigate([params.url]);\n          }\n        });\n  }\n\n}\n","<p>refresh works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\n\n@Component({\n  selector: 'app-request-reset',\n  templateUrl: './request-reset.component.html',\n  styleUrls: ['./request-reset.component.css']\n})\n\nexport class RequestResetComponent implements OnInit {\n  RequestResetForm: FormGroup;\n  forbiddenEmails: any;\n  errorMessage: string;\n  successMessage: string;\n  IsvalidForm = true;\n\n  constructor(\n    private authService: AuthentificationService,\n    private router: Router,\n   ) {\n\n  }\n\n\n  ngOnInit() {\n\n    this.RequestResetForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email], this.forbiddenEmails),\n    });\n  }\n\n\n  RequestResetUser(form) {\n    if (form.valid) {\n      this.IsvalidForm = true;\n      this.authService.requestReset(this.RequestResetForm.value).subscribe(\n        data => {\n          this.RequestResetForm.reset();\n          this.successMessage = 'Un email vous a été envoyé pour changer votre mot de passe.';\n          setTimeout(() => {\n            this.successMessage = null;\n            this.router.navigate(['login']);\n          }, 3000);\n        },\n        err => {\n\n          if (err.error.message) {\n            this.errorMessage = err.error.message;\n          }\n        }\n      );\n    } else {\n      this.IsvalidForm = false;\n    }\n  }\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 mt-5 mx-auto\">\n\n                <h1 id=\"lien\" class=\"h3 mb-3 font-weight-normal\">Mot de passe oublié</h1>\n\n                <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n                    <span>{{errorMessage}}</span>\n                </div>\n                <div id=\"successMsg\" *ngIf=\"successMessage\">\n                    <span>{{successMessage}}</span>\n                </div>\n                <form class=\"contact-form\" [formGroup]=\"RequestResetForm\" (ngSubmit)=\"RequestResetUser(RequestResetForm)\" data-toggle=\"validator\" role=\"form\">\n\n                    <div class=\"form-group\">\n                        <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\" placeholder=\"exemple@exemple.fr\" type=\"text\" id=\"email\" formControlName=\"email\" />\n                        <span *ngIf=\"!RequestResetForm.get('email').valid && !IsvalidForm\" class=\"help-block\">Entrer une adresse valide!</span>\n                    </div>\n                    <div class=\"form-group\">\n\n                        <input id=\"send_email\" class=\"btn btn-lg btn-primary\" type=\"submit\" value=\"Valider\">\n\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-response-reset',\n  templateUrl: './response-reset.component.html',\n  styleUrls: ['./response-reset.component.css']\n})\n\nexport class ResponseResetComponent implements OnInit {\n  ResponseResetForm: FormGroup;\n  errorMessage: string;\n  successMessage: string;\n  resetToken: null;\n  CurrentState: any;\n  IsResetFormValid = true;\n  constructor(\n    private authService: AuthentificationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder ) {\n\n    this.CurrentState = 'Wait';\n    this.route.params.subscribe(params => {\n      this.resetToken = params.token;\n      this.VerifyToken();\n    });\n  }\n\n\n  ngOnInit() {\n\n    this.Init();\n  }\n\n  VerifyToken() {\n    this.authService.ValidPasswordToken({ resettoken: this.resetToken }).subscribe(\n      data => {\n        this.CurrentState = 'Verified';\n      },\n      err => {\n        this.CurrentState = 'NotVerified';\n      }\n    );\n  }\n\n  Init() {\n    this.ResponseResetForm = this.fb.group(\n      {\n        resettoken: [this.resetToken],\n        newPassword: ['', [Validators.required, Validators.minLength(4)]],\n        confirmPassword: ['', [Validators.required, Validators.minLength(4)]]\n      }\n    );\n  }\n\n  Validate(passwordFormGroup: FormGroup) {\n    const newPassword = passwordFormGroup.controls.newPassword.value;\n    const confirmPassword = passwordFormGroup.controls.confirmPassword.value;\n\n    if (confirmPassword.length <= 0) {\n      return null;\n    }\n\n    if (confirmPassword !== newPassword) {\n      return {\n        doesNotMatch: true\n      };\n    }\n\n    return null;\n  }\n\n\n  ResetPassword(form) {\n    if (form.valid) {\n      this.IsResetFormValid = true;\n      this.authService.newPassword(this.ResponseResetForm.value).subscribe(\n        data => {\n          this.ResponseResetForm.reset();\n          this.successMessage = data.message;\n          setTimeout(() => {\n            this.successMessage = null;\n            this.router.navigate(['login']);\n          }, 3000);\n        },\n        err => {\n          if (err.error.message) {\n            this.errorMessage = err.error.message;\n          }\n        }\n      );\n    } else { this.IsResetFormValid = false; }\n  }\n}\n","<div class=\"container-fluid form\">\n    <div class=\"row\" *ngIf=\"CurrentState=='Wait'\">\n        <div class=\"col-md-12  close-form\">\n            <h2> Please Wait...</h2>\n        </div>\n    </div>\n    <div class=\"row\"\n        *ngIf=\"CurrentState=='NotVerified'\">\n        <div class=\"col-md-12\">\n            <h2> Invalid URL.</h2>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"CurrentState=='Verified'\">\n        <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n            <div class=\"card card-signin my-5\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title text-center\">Set New Password</h5>\n                    <div>\n                        <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n                            <span>{{errorMessage}}</span>\n                        </div>\n                        <div id=\"successMsg\" *ngIf=\"successMessage\">\n                            <span>{{successMessage}}</span>\n                        </div>\n                        <form action=\"\" [formGroup]=\"ResponseResetForm\" (ngSubmit)=\"ResetPassword(ResponseResetForm)\">\n                            <div class=\"form-group\">\n                                <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\" placeholder=\"Password\"\n                                    type=\"password\" id=\"password\" formControlName=\"newPassword\" />\n                                <span *ngIf=\"!ResponseResetForm.get('newPassword').valid && !IsResetFormValid\"\n                                    class=\"help-block\">Password is required with atleast 4 characters.</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\"\n                                    placeholder=\"Confirm Password\" type=\"password\" id=\"cpassword\"\n                                    formControlName=\"confirmPassword\" />\n                                <span *ngIf=\"!ResponseResetForm.get('confirmPassword').valid && !IsResetFormValid\"\n                                    class=\"help-block\">. </span>\n                                <span\n                                    *ngIf=\"ResponseResetForm.get('confirmPassword').valid && (ResponseResetForm.get('confirmPassword').value != ResponseResetForm.get('newPassword').value) && !IsResetFormValid\"\n                                    class=\"help-block\">Confirm Password does not match with password.</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <div>\n\n                                    <button type=\"submit\" class=\"  btn btn-primary\">Update\n                                        Password</button>\n\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, TokenPayload } from '../../service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-se-connecter',\n  templateUrl: './se-connecter.component.html',\n  styleUrls: ['./se-connecter.component.css']\n})\nexport class SeConnecterComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  credentials: TokenPayload = {\n    pseudo: '',\n    email: '',\n    mdp: '',\n    mdp2: '',\n    admin: false,\n    abonneNews: true,\n    error: ''\n  };\n\n  constructor(private auth: AuthentificationService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      mdp: ['', Validators.required],\n    });\n  }\n\n  login() {\n\n    const formValue = this.loginForm.value;\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.mdp = formValue.mdp;\n\n    this.auth.login(this.credentials).subscribe(\n      (res) => {\n        if (res.error === 'Mot de passe et/ou pseudo incorrect') {\n          alert(res.error);\n        } else {\n          if (this.auth.emailConfirmed()) {\n            this.router.navigateByUrl('/');\n            alert('Bienvenue sur Marine\\'s Recipe');\n          } else {\n            this.auth.logout();\n            window.location.reload();\n            alert('Vous devez vérifier votre adresse mail avant de pouvoir vous connecter ! :)');\n          }\n\n        }\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n  // Fonction appelée lors du clic\n  clicSurBouton() {\n    alert('Si vous n\\'avez pas reçu de mail pour la confirmation de votre adresse mail,' +\n      'veuillez consulter vos mails indésirables. Si le problème persiste, veuillez nous contacter via l\\'onglet Contact.');\n  }\n\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 mt-5 mx-auto\">\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"contact-form\">\n                    <h1 id=\"lien\" class=\"h3 mb-3 font-weight-normal\">Se connecter</h1>\n                    <hr>\n                    <div class=\"form-group\">\n                        <label>Pseudo</label>\n                        <input type=\"text\" class=\"form-control\" required name=\"pseudo\" placeholder=\"pseudo\" formControlName=\"pseudo\">\n                    </div>\n                    <hr>\n                    <div class=\"form-group\">\n                        <label>Mot de passe</label>\n                        <input type=\"password\" class=\"form-control\" required name=\"mdp\" placeholder=\"****\" formControlName=\"mdp\">\n                    </div>\n                    <hr>\n    \n                    <input class=\"btn btn-lg btn-primary\" type=\"submit\" value = \"Se connecter\">\n                </form>\n                <hr>\n                <div id=\"lien\">\n                    <a href=\"request-reset-password\">Mot de passe oublié</a>\n                </div>\n                <hr>\n                <div id=\"lien\">\n                  \n                    <button type=\"button\" id=\"btnemail\" (click)=\"clicSurBouton()\">Je n'ai pas reçu de mail pour la confirmation de mon adresse mail</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecettesService, UnitesService} from '../../service';\nimport { UniteDetails } from '../../models';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-unite',\n  templateUrl: './unite.component.html',\n  styleUrls: ['./unite.component.scss']\n})\nexport class UniteComponent implements OnInit {\n\n  public unites$: Observable<UniteDetails[]>;\n  public unites: UniteDetails[];\n\n  public unite: UniteDetails = {\n    idUnite: null,\n    libelleUnite: ''\n  };\n\n  public filteredUnite$: Observable<UniteDetails[]>;\n  public filter: FormControl;\n  public filter$: Observable<string>;\n\n  constructor(private recettesService: RecettesService, private router: Router, private unitesService: UnitesService) {\n     // pour la recherche dynamique\n     this.unites$ = this.unitesService.getAllUnite();\n     this.filter = new FormControl('');\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n     // tslint:disable-next-line: deprecation\n     this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n       .pipe(map(([unites, filterString]) =>\n         unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllUnite() {\n\n    this.unites$ = this.unitesService.getAllUnite();\n    this.filter = new FormControl('');\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\n    // tslint:disable-next-line: deprecation\n    this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n      .pipe(map(([unites, filterString]) =>\n        unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\n\n  }\n\n  deleteUnite(idUnite: any) {\n    this.unitesService.deleteUnite(idUnite)\n      .subscribe(res => {\n        this.router.navigate(['/unite'], {\n          queryParams: {refresh: new Date().getTime()}\n       });\n        }, (err) => {\n          console.log(err);\n        }\n      );\n    window.location.reload(); /* rafraichit la page */\n  }\n\n\n  updateUnite(unite: UniteDetails) {\n    this.unitesService.updateUnite(unite).subscribe((res: any) => {\n        window.location.reload();\n      }, (err: any) => {\n        console.error(err);\n      }\n    );\n  }\n\n  addUnite() {\n    this.unitesService.addUnite(this.unite);\n    window.location.reload();\n  }\n\n\n}\n","<main class=\"page-row page-row-expanded\">\n    <div class=\"main-inner\">\n        <div class=\"item1 container\">\n            <div class=\"element1\">\n                <aside id=\"aside\" class=\"sidebar is-visible\">\n                    <div class=”sidebar-content”>\n                        <ul>\n                            <li><a id=\"nav\" href=\"/handleRecipes\">Gérer les recettes</a></li>\n                            <li><a id=\"nav\" href=\"/ingredient\">Ingrédients</a></li>\n                            <li><a id=\"nav\" href=\"/category\">Catégories</a></li>\n                            <li class=\"active\"><a id=\"nav\" href=\"/unite\">Unités</a></li>\n                            <li><a id=\"nav\" href=\"/add-recipe\">Créer une nouvelle recette</a></li>\n                        </ul>\n                    </div>\n                </aside>\n            </div>\n        </div>\n        <div class=\"item2 container\">\n            <div class=\"element2\">\n                <section class=\"page\">\n                    <div class=\"container\">\n                        <div id=\"titre\">\n                            <h1>Unités</h1>\n                        \n                        </div>\n                        \n                        <div class='flex-container'>\n\n                            <div id=\"addUnite\">\n                                <h6 id=\"question \"> Ajouter une nouvelle unité </h6>\n                                <form (submit)=\"addUnite() \">\n                                    <input type=\"text \" class=\"form-control \" name=\"libelleUnite \" placeholder=\"libelle unité \" [(ngModel)]=\"unite.libelleUnite \">\n                        \n                                    <button id=\"btn\" class=\"btn btn-outline-info \" type=\"submit \">Valider</button>\n                        \n                                </form>\n                            </div>\n                        \n                            <div>\n                                <form class=\"form-inline my-2 my-lg-0\">\n                                    <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher une unité\" aria-label=\"Search\" [formControl]=\"filter\">\n                                </form>\n                                <table class=\"table col-md-12 mx-auto\" *ngFor=\"let unite of filteredUnite$ | async\">\n                        \n                                    <tr>\n                                        <td>\n                        \n                                            <form (submit)=\"updateUnite(unite)\">\n                                                <div class=\"form-row align-items-center\">\n                                                    <div class=\"col-auto\">\n                                                        <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"libelleUnite\" value={{unite.libelleUnite}} [(ngModel)]=\"unite.libelleUnite\">\n                                                    </div>\n                        \n                                                    <div class=\"col-auto\">\n                                                        <button id=\"btn\" type=\"submit\" class=\"btn btn-sm btn-warning\"><i class=\"fa fa-pencil\" ></i></button>\n                        \n                        \n                                                    </div>\n                                                    <div class=\"col-auto\">\n                        \n                                                        <button id=\"btn\" class=\"btn btn-sm btn-danger\" (click)=\"deleteUnite(unite.idUnite)\"><i class=\" fa fa-trash \"></i></button>\n                        \n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                            \n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserMdp } from '../../service';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-update-password',\n  templateUrl: './update-password.component.html',\n  styleUrls: ['./update-password.component.css']\n})\nexport class UpdatePasswordComponent implements OnInit {\n\n  credentials: UserMdp = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    mdp: '',\n    newmdp: '',\n    mdp2: '',\n    error: '',\n    success: ''\n  };\n\n  public updatePasswordForm: FormGroup;\n\n  constructor(private auth: AuthentificationService, private router: Router, private modalService: NgbModal,\n              private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initUpdatePasswordForm();\n  }\n\n  initUpdatePasswordForm() {\n    this.updatePasswordForm = this.formBuilder.group({\n      mdp: ['', Validators.required],\n      newmdp: ['', [Validators.required]],\n      mdp2: ['', Validators.required]\n    });\n  }\n\n  updatePassword() {\n\n    const formValue = this.updatePasswordForm.value;\n\n    this.credentials.mdp = formValue.mdp;\n    this.credentials.newmdp = formValue.newmdp;\n    this.credentials.mdp2 = formValue.mdp2;\n\n    this.initUpdatePasswordForm();\n\n    if (formValue.newmdp !== formValue.mdp2) {\n      alert('Les nouveaux mots de passe ne sont pas identiques.');\n      return;\n    }\n\n    this.auth.updatePassword(this.credentials).subscribe((res: any) => {\n      if (res.error === 'Mot de passe incorrect!') {\n        alert('L\\'ancien mot de passe n\\'est pas correct.');\n        return;\n      } else {\n        this.router.navigateByUrl('/profile');\n      }\n    }, (err: any) => {\n      console.log(err);\n    }\n    );\n  }\n}\n","<section class=\"contact pt-100 pb-100\" id=\"contact\">\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form [formGroup]=\"updatePasswordForm\" (ngSubmit)=\"updatePassword()\">\n                <h1 class=\"h3 mb-3 font-weight-normal\">Modifier mon mot de passe</h1>\n                \n                <div class=\"form-group\">\n                    <label>Ancien mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp\" placeholder=\"****\" formControlName=\"mdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Nouveau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"newmdp\" placeholder=\"****\" formControlName=\"newmdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Confirmer le nouveaau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp2\" placeholder=\"****\" formControlName=\"mdp2\">\n                </div>\n                <div class=\"text-center\">\n                    <button class=\"btn btn-outline-info\" type=\"submit\">Enregistrer</button>\n                </div>\n                \n            </form>\n        </div>\n    </div>\n</div>\n</section>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthentificationService } from './authentification.service';\n\n@Injectable()\nexport class AdminAuthService implements CanActivate {\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate() {\n        if (!this.auth.isAdmin()) {\n            this.router.navigateByUrl('/');\n            return false;\n        }\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthentificationService } from './authentification.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    private token: string;\n\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate() {\n        if (!this.auth.isLoggedIn()) {\n            this.router.navigateByUrl('/');\n            return false;\n        }\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { ContactDetail } from '../pages/contact/contact.component';\n\n// login\nexport interface UserDetails {\n    pseudo: string;\n    email: string;\n    mdp: string;\n    admin: boolean;\n    emailConfirmed?: boolean;\n    abonneNews: boolean;\n    exp: number;\n    iat: number;\n}\n\ninterface TokenResponse {\n    token: string;\n    error: string;\n}\n\ninterface Response {\n    error: string;\n}\n\n// inscription\nexport interface TokenPayload {\n    pseudo: string;\n    email: string;\n    mdp: string;\n    mdp2: string;\n    admin: boolean;\n    abonneNews: boolean;\n    error: string;\n}\n\n// changement mdp\nexport interface UserMdp {\n    pseudo: string;\n    mdp: string;\n    newmdp: string;\n    mdp2: string;\n    error: string;\n    success: string;\n}\n\n// modif profile\nexport interface UserProfile {\n    pseudo: string;\n    email: string;\n    abonneNews: boolean;\n    success: string;\n}\n\n@Injectable()\nexport class AuthentificationService {\n    private token: string;\n    private error: string;\n\n    constructor(private http: HttpClient, private router: Router) {\n\n    }\n\n    private saveToken(token: string): void {\n        localStorage.setItem('userToken', token);\n        this.token = token;\n    }\n\n    private getToken(): string {\n        if (!this.token) {\n            this.token = localStorage.getItem('userToken');\n        }\n        return this.token;\n    }\n\n    public getUserDetails(): UserDetails {\n        const token = this.getToken();\n        let payload;\n        if (token) {\n            payload = token.split('.')[1];\n            payload = window.atob(payload);\n            return JSON.parse(payload);\n        } else {\n            return null;\n        }\n    }\n\n    public isLoggedIn(): boolean {\n        const user = this.getUserDetails();\n        if (user) {\n            return user.exp > Date.now() / 1000;\n        } else {\n            return false;\n        }\n    }\n\n    public emailConfirmed(): boolean {\n        const user = this.getUserDetails();\n        if (user) {\n            return user.emailConfirmed;\n        } else {\n            return false;\n        }\n    }\n\n    public isAdmin(): boolean {\n        const user = this.getUserDetails();\n        if (user) {\n            return user.admin;\n        } else {\n            return false;\n        }\n    }\n\n    public register(user: TokenPayload): Observable<any> {\n        const base = this.http.post('/server/register', user);\n\n        const request = base.pipe(\n            map((data: TokenResponse) => {\n                if (data.token) {\n                    this.saveToken(data.token);\n                }\n                return data;\n            })\n        );\n        return request;\n    }\n\n    public login(user: TokenPayload): Observable<any> {\n        const base = this.http.post('/server/login', user);\n        const request = base.pipe(\n            map((data: TokenResponse) => { // map permet de récupérer des données\n                if (data.token) {\n                    this.saveToken(data.token);\n                }\n                return data;\n            })\n        );\n        return request;\n    }\n\n    public profile(): Observable<any> {\n        return this.http.get('/server/profile', {\n            headers: { Authorization: `${this.getToken()}` }\n        });\n    }\n\n    public logout(): void {\n        this.token = '';\n        window.localStorage.removeItem('userToken');\n        this.router.navigateByUrl('/');\n    }\n\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            // TODO: send the error to remote logging infrastructure\n            console.error(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n\n    public updatePassword(user: UserMdp): Observable<any> {\n        const base = this.http.put(`/server/update-password/${user.pseudo}`, user);\n\n        return base.pipe(\n            map((data: Response) => {\n                return data;\n            })\n        );\n    }\n\n    public deleteProfile(pseudo: string): Observable<any> {\n        const url = `/server/delete-profile/${pseudo}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${pseudo}`)),\n            catchError(this.handleError<any>('deleteProfile'))\n        );\n    }\n\n    public updateProfile(user: UserProfile): Observable<any> {\n        const base = this.http.put(`/server/mon-profile/${user.pseudo}`, user);\n\n        return base.pipe(\n            tap(_ => console.log(`updated ${user.pseudo}`)),\n            catchError(this.handleError<any>('updateProfile'))\n        );\n    }\n\n    public getAbonneNews(): any {\n        return this.http.get(`/server/abonneNews`);\n    }\n\n    public sentEmailToNewRecipe(to: any, idRecette: number): any {\n        return this.http.get(`/server/newRecipe/${to.pseudo}/${idRecette}`);\n    }\n\n    public requestReset(body): Observable<any> {\n        return this.http.post(`/server/req-reset-password`, body);\n    }\n\n    public newPassword(body): Observable<any> {\n        return this.http.post(`/server/new-password`, body);\n    }\n\n    public ValidPasswordToken(body): Observable<any> {\n        return this.http.post(`/server/valid-password-token`, body);\n    }\n\n    public sendEmailContact(infos: ContactDetail): any {\n        let params = new HttpParams();\n\n        params = params.append(`name`, infos.nameUser);\n        params = params.append(`email`, infos.emailUser);\n        params = params.append(`subject`, infos.subject);\n        params = params.append(`message`, infos.message);\n\n        return this.http.get(`/server/contact/send`, { params });\n    }\n\n    public getUser(pseudo: string): any {\n        return this.http.get(`/server/user/${pseudo}`);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CategoryDetails } from 'src/app/models';\nimport { map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  constructor(private http: HttpClient) { }\n\n  public getCategoryByRecette(idRecette: any): Observable<CategoryDetails[]> {\n    const base = this.http.get(`/server/category/recipe/${idRecette}`);\n    return base.pipe(map((data: CategoryDetails[]) => {\n      return data;\n    }));\n  }\n\n  public getAllCategory(): Observable<CategoryDetails[]> {\n    return this.http.get<any>(`/server/category`)\n      .pipe(map((data: CategoryDetails[]) => {\n        return data;\n      }));\n  }\n\n  public deleteCategory(id: any): Observable<any> {\n    const url = `/server/category/delete/${id}`;\n    return this.http.delete<any>(url).pipe(\n      tap(_ => console.log(`deleted ${id}`)),\n    );\n  }\n\n  public updateCategory(categorie: CategoryDetails): Observable<any> {\n    return this.http.put(`/server/category/update`, categorie)\n      .pipe(map((data: CategoryDetails[]) => {\n        return data;\n      }));\n  }\n\n  public addCategory(categorie: CategoryDetails): any {\n    this.http.post('/server/category/add', categorie).subscribe(res => {\n      {\n        return res;\n      }\n    });\n  }\n\n  public getRestCategory(idRecette: any): any {\n    return this.http.get<any>(`/server/category/rest/recipe/${idRecette}`)\n      .pipe(map((data: CategoryDetails[]) => {\n        return data;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CommentaireDetails } from 'src/app/models';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { AuthentificationService } from '../authentification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentairesService {\n\n  constructor(private http: HttpClient, private auth: AuthentificationService) { }\n\n  public addCommentaire(commentaire: CommentaireDetails): Observable<any> {\n    return this.http.post(`/server/commentaires/add`, commentaire)\n      .pipe(map((data: any) => {\n        return data;\n      }));\n  }\n\n  public addImageToCommentaire(commentaire: CommentaireDetails): Observable<any> {\n    return this.http.post<any>(`/server/image/commentaires/addImage`, commentaire)\n      .pipe(map((data: any) => {\n        return data;\n      }));\n  }\n\n  public modifyCommentaire(commentaire: CommentaireDetails): any {\n    this.http.post<any>(`/server/commentaires/update`, commentaire)\n      .subscribe((data: any) => {\n        return data;\n      });\n  }\n\n  public getCommentaireRecipe(id: any): Observable<any> {\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n    return this.http.get<any>(`/server/commentaires/recipe/${id}`)\n      .pipe(map((data: any) => {\n        data.forEach(element => {\n          this.http.get(`/server/image/commentaire/${element.idCommentaire}`).subscribe((data: any) => {\n            element.lienImage = data[0]?.lienImage;\n          });\n\n          const d = new Date(element.dateCommentaire);\n\n          element.dateCommentaire = d.toLocaleString('FR-fr', options);\n\n          this.auth.getUser(element.ecritPar).subscribe(data => {\n            element.admin = data.admin;\n          });\n          let element2 = element;\n          let bool = true;\n\n          while (bool) {\n            this.getReponseCommentaireRecipe(id, element.idCommentaire).subscribe(commentaire => {\n              element.children = commentaire;\n            });\n            if (element2.children) {\n              element2 = element2.children;\n            } else {\n              bool = false;\n            }\n\n          }\n        });\n        return data;\n      }));\n  }\n\n  public getReponseCommentaireRecipe(id: any, idCommentaire: any): Observable<any> {\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n    return this.http.get<any>(`/server/commentaires/recipe/${id}/reponse/${idCommentaire}`)\n      .pipe(map((commentaire: any) => {\n        commentaire.forEach(element => {\n          this.http.get(`/server/image/commentaire/${element.idCommentaire}`).subscribe((data: any) => {\n            element.lienImage = data[0]?.lienImage;\n          });\n\n          const d = new Date(element.dateCommentaire);\n\n          element.dateCommentaire = d.toLocaleString('FR-fr', options);\n\n          this.auth.getUser(element.ecritPar).subscribe(data => {\n            element.admin = data.admin;\n          });\n          this.getReponseCommentaireRecipe(id, element.idCommentaire).subscribe(commentaire => {\n            element.children = commentaire;\n          });\n        });\n        return commentaire;\n      }));\n  }\n\n  public deleteCommentaire(id: any): Observable<any> {\n    const url = `/server/commentaires/commentaire/${id}/delete`;\n    return this.http.delete<any>(url).pipe(\n      tap(_ => console.log(`deleted ${id}`)),\n    );\n  }\n\n  public getCommentaireUser(pseudo: any): Observable<any> {\n    return this.http.get<any>(`/server/commentaires/${pseudo}/mescommentaires`)\n      .pipe(map((data: any) => {\n        return data;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FavorisDetails, RecipeDetails } from 'src/app/models';\nimport { Observable } from 'rxjs';\nimport { IngredientsService } from '../ingredients/ingredients.service';\nimport { map } from 'rxjs/operators';\nimport { AuthentificationService } from '../authentification.service';\nimport { addTimes, addHours } from '../../utils/Utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FavorisService {\n\n  constructor(private http: HttpClient, private ingredientService: IngredientsService, private auth: AuthentificationService) { }\n\n  public addFavoris(newFavori: FavorisDetails): Observable<any> {\n    return this.http.post(`/server/favorites/add`, newFavori).pipe(res => {\n      return res;\n    });\n  }\n\n  public getFavoris(): Observable<RecipeDetails[]> {\n    const pseudo = this.auth.getUserDetails().pseudo;\n    const base = this.http.get(`/server/favorites/recipe/${pseudo}`);\n    return base.pipe(map((data: RecipeDetails[]) => {\n      data.forEach(element => {\n        this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n          element.lienImage = data[0]?.lienImage;\n        });\n        this.ingredientService.getIngredientsByIdRecette(element.idRecette).subscribe(data => {\n          element.ingredients = data;\n        });\n        element.globalTime = addHours(addTimes(element.tempsPreparation, element.tempsCuisson));\n      });\n      return data;\n    }));\n  }\n\n  public getFavorisByCategory(idCategorie: number): Observable<RecipeDetails[]> {\n    const pseudo = this.auth.getUserDetails().pseudo;\n    const base = this.http.get(`/server/favorites/recipe/${pseudo}/${idCategorie}`);\n    return base.pipe(map((data: RecipeDetails[]) => {\n      data.forEach(element => {\n        this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n          element.lienImage = data[0]?.lienImage;\n        });\n        this.ingredientService.getIngredientsByIdRecette(element.idRecette).subscribe(data => {\n          element.ingredients = data;\n        });\n        element.globalTime = addHours(addTimes(element.tempsPreparation, element.tempsCuisson));\n      });\n      return data;\n    }));\n  }\n\n  public deleteFavoris(id: any): Observable<any> {\n    const pseudo = this.auth.getUserDetails().pseudo;\n    const url = `/server/favorites/${pseudo}/delete/${id}`;\n    return this.http.delete<any>(url).pipe(res => {\n      return res;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImagesService {\n\n  constructor(private http: HttpClient) { }\n\n  public addImage(file: any): Observable<any> {\n    return this.http.post(`/server/image/uploads`, file).pipe(map((data: any) => {\n      return data;\n    }));\n  }\n\n  public getImage(id: number): any {\n    return this.http.get(`/server/image/${id}`).pipe(map((data: any) => {\n      return data;\n    }));\n  }\n\n  public addImageToRecipe(imageToModify: any): any {\n    this.http.post<any>(`/server/image/recipe/update/image`, imageToModify)\n      .subscribe((data: any) => {\n        return data;\n      });\n  }\n}\n","export * from './admin-auth.service';\nexport * from './auth-guard.service';\nexport * from './authentification.service';\nexport * from './recettes/recettes.service';\nexport * from './ingredients/ingredients.service';\nexport * from './categories/categories.service';\nexport * from './unites/unites.service';\nexport * from './commentaires/commentaires.service';\nexport * from './favoris/favoris.service';\nexport * from './images/images.service';\nexport * from './shoppingList/shopping-list.service';\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { QuantiteDetails, IngredientDetails } from 'src/app/models';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngredientsService {\n\n  constructor(private http: HttpClient) { }\n\n  public getIngredientsByIdRecette(id: any): any {\n    return this.http.get<any>('/server/recipe/' + id + '/ingredients');\n  }\n\n  public getUtiliserIngredientsByIdRecette(id: any): Observable<QuantiteDetails[]> {\n    const base = this.http.get('/server/recipe/' + id + '/utiliserIngredients');\n    const utiliserIngredients = base.pipe(map((data: QuantiteDetails[]) => {\n      return data;\n    }));\n    return utiliserIngredients;\n  }\n\n  public getIngredientById(idIngredient: any): Observable<IngredientDetails> {\n    const base = this.http.get('/server/ingredient/' + idIngredient);\n    return base.pipe(map((data: IngredientDetails) => {\n      return data;\n    }));\n  }\n\n  public getAllIngredients(): Observable<IngredientDetails[]> {\n    return this.http.get<any>(`/server/ingredient`)\n      .pipe(map((data: IngredientDetails[]) => {\n        return data;\n      }));\n  }\n\n  public getRestIngredients(idRecette: any): any {\n    return this.http.get<any>(`/server/ingredient/recipe/${idRecette}/rest`)\n      .pipe(map((data: IngredientDetails[]) => {\n        return data;\n      }));\n  }\n\n  public deleteIngredient(id: any): Observable<any> {\n    const url = `/server/ingredient/delete/${id}`;\n    return this.http.delete<any>(url).pipe(\n      tap(_ => console.log(`deleted ${id}`)),\n    );\n  }\n\n  public updateIngredient(ingredient: IngredientDetails): Observable<any> {\n    return this.http.put(`/server/ingredient/update`, ingredient)\n      .pipe(map((data: IngredientDetails[]) => {\n        return data;\n      }));\n  }\n\n  public addIngredient(ingredient: any): any {\n    this.http.post('/server/ingredient/add', ingredient).subscribe(res => {\n      {\n        return res;\n      }\n    });\n  }\n\n  public getRestOfIngredients(ingredients: number[]): any {\n    let params = new HttpParams();\n\n    ingredients.forEach((idIngredient: number) => {\n        params = params.append(`ingredients[]`, idIngredient.toString());\n    });\n    return this.http.get<any>(`/server/ingredient/rest`, { params })\n        .pipe(map((data: IngredientDetails[]) => {\n            return data;\n        }));\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { AuthentificationService } from '../authentification.service';\nimport { addTimes, addHours } from '../../utils/Utils';\nimport {\n    CategoryDetails, CreateRecipe,\n    IngredientDetails, RecipeDetails\n} from '../../models';\nimport { CategoriesService } from '../categories/categories.service';\nimport { IngredientsService } from '../ingredients/ingredients.service';\n\n@Injectable()\nexport class RecettesService {\n\n    constructor(private http: HttpClient, private auth: AuthentificationService, private ingredientService: IngredientsService,\n                private categoryService: CategoriesService) { }\n\n    public getAllRecipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/recipe/allRecipes`);\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage;\n                });\n                this.categoryService.getCategoryByRecette(element.idRecette).subscribe((data: any) => {\n                    element.categories = data;\n                });\n            });\n            return data;\n        }));\n    }\n\n    public getAllRecipesAndIngredients(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/recipe/allRecipes`);\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage;\n                });\n\n                element.ingredients = [];\n                this.ingredientService.getIngredientsByIdRecette(element.idRecette).subscribe(data => {\n                    element.ingredients = data;\n                });\n                element.globalTime = addHours(addTimes(element.tempsPreparation, element.tempsCuisson));\n                this.categoryService.getCategoryByRecette(element.idRecette).subscribe((data: any) => {\n                    element.categories = data;\n                });\n            });\n            return data;\n        }));\n    }\n\n    public getRecipeById(id: any): Observable<any> {\n        return this.http.get<any>('/server/recipe/get/' + id);\n    }\n\n    public getLatestReceipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/recipe/latestRecipes`);\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage;\n                    element.globalTime = addHours(addTimes(element.tempsPreparation, element.tempsCuisson));\n                });\n                this.categoryService.getCategoryByRecette(element.idRecette).subscribe((data: any) => {\n                    element.categories = data;\n                });\n            });\n            return data;\n        }));\n    }\n\n    public getMostPopularRecipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/recipe/mostPopularRecipes`);\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage;\n                    element.globalTime = addHours(addTimes(element.tempsPreparation, element.tempsCuisson));\n                });\n                this.categoryService.getCategoryByRecette(element.idRecette).subscribe((data: any) => {\n                    element.categories = data;\n                });\n            });\n            return data;\n        }));\n    }\n\n    public deleteRecipe(id: any): Observable<any> {\n        const url = `/server/recipe/delete-recipe/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public getRecipeByCategory(idCategorie: any): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/recipe/category/${idCategorie}`);\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage;\n                });\n                this.ingredientService.getIngredientsByIdRecette(element.idRecette).subscribe(data => {\n                    element.ingredients = data;\n                });\n                element.globalTime = addHours(addTimes(element.tempsCuisson, element.tempsPreparation));\n            });\n            return data;\n        }));\n    }\n\n    public updateNbView(recette: RecipeDetails): Observable<any> {\n        return this.http.put<any>(`/server/recipe/update-nbView/${recette.idRecette}`, recette);\n    }\n\n    public updateRecipeIng(recette: RecipeDetails, ingredient: IngredientDetails): Observable<any> {\n        return this.http.put(`/server/recipe/${recette.idRecette}/ingredient/update`, ingredient)\n            .pipe(map((res) => {\n                return res;\n            }));\n    }\n\n    public createRecipe(recipe: CreateRecipe): Observable<any> {\n        const res = this.http.post('/server/recipe/add-recipe', recipe);\n        return res.pipe(map((res) => {\n            return res;\n        }));\n    }\n\n    public addIngredientsAndCategoryToNewRecipe(recipe: CreateRecipe): Observable<any> {\n        const res = this.http.post('/server/recipe/addIngredientAndCategorie', recipe);\n        return res.pipe(map((res) => {\n            return res;\n        }));\n    }\n\n    public addRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails): Observable<any> {\n        return this.http.post(`/server/recipe/${recette.idRecette}/category/add`, categorie)\n            .pipe(map((res) => {\n                return res;\n            }));\n    }\n\n    public getCategory(id: any): any {\n        return this.http.get<any>(`/server/recipe/${id}/category`)\n            .pipe(map((data: any) => {\n                return data;\n            }));\n    }\n\n    public updateRecipeName(recette: RecipeDetails): Observable<any> {\n\n        return this.http.put(`/server/recipe/name/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data;\n            }));\n\n\n    }\n\n    public updateSteps(recette: RecipeDetails): Observable<any> {\n\n        return this.http.put(`/server/recipe/step/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data;\n            }));\n\n\n    }\n\n    public updateAstuce(recette: RecipeDetails): Observable<any> {\n        return this.http.put(`/server/recipe/astuce/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data;\n            }));\n    }\n\n    public updatePart(recette: RecipeDetails): Observable<any> {\n        return this.http.put(`/server/recipe/part/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data;\n            }));\n    }\n\n    public updateTemps(recette: RecipeDetails): Observable<any> {\n        return this.http.put(`/server/recipe/temps/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data;\n            }));\n    }\n\n    public deleteIngredientRecipe(ingredient: IngredientDetails, recette: RecipeDetails): Observable<any> {\n        const url = `/server/recipe/${recette.idRecette}/ingredient/${ingredient.idIngredient}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${ingredient.idIngredient} from recipe ${recette.idRecette}`)),\n        );\n    }\n\n    public addIngredientRecette(newIngredient: IngredientDetails): any {\n        this.http.post(`/server/recipe/${newIngredient.idRecette}/add/ingredient/${newIngredient.idIngredient}`, newIngredient)\n            .subscribe(res => {\n                {\n                    return res;\n                }\n            });\n    }\n\n    public deleteRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails): Observable<any> {\n        const url = `/server/recipe/${recette.idRecette}/category/${categorie.idCategorie}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${categorie.idCategorie} from recipe ${recette.idRecette}`)),\n        );\n    }\n\n    public getMenu(): Observable<any> {\n        return this.http.get<any>('/server/menu/recipe')\n            .pipe(map((data: any) => {\n                return data;\n            }));\n    }\n\n    public getPetitDej(): Observable<any> {\n        return this.http.get<any>('/server/menu/petitDej')\n            .pipe(map((element: any) => {\n                this.http.get(`/server/image/${element[0].idRecette}`).subscribe((data: any) => {\n                    element[0].lienImage = data[0]?.lienImage;\n                });\n                this.categoryService.getCategoryByRecette(element[0].idRecette).subscribe((data: any) => {\n                    element[0].categories = data;\n                });\n                return element[0];\n            }));\n    }\n\n    public getRepas(): Observable<any> {\n        return this.http.get<any>('/server/menu/repas')\n            .pipe(map((element: any) => {\n                this.http.get(`/server/image/${element[0].idRecette}`).subscribe((data: any) => {\n                    element[0].lienImage = data[0]?.lienImage;\n                });\n                this.categoryService.getCategoryByRecette(element[0].idRecette).subscribe((data: any) => {\n                    element[0].categories = data;\n                });\n                return element[0];\n            }));\n    }\n\n    public getDouceur(): Observable<any> {\n        return this.http.get<any>('/server/menu/douceur')\n            .pipe(map((element: any) => {\n                this.http.get(`/server/image/${element[0].idRecette}`).subscribe((data: any) => {\n                    element[0].lienImage = data[0]?.lienImage;\n                });\n                this.categoryService.getCategoryByRecette(element[0].idRecette).subscribe((data: any) => {\n                    element[0].categories = data;\n                });\n                return element[0];\n            }));\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ListeCoursesDetails, IngredientDetails } from 'src/app/models';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { AuthentificationService } from '../authentification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingListService {\n\n  constructor(private http: HttpClient, private auth: AuthentificationService) { }\n\n  public addListeCourses(newListeCourses: ListeCoursesDetails) {\n    this.http.post(`/server/shoppingList/add`, newListeCourses).subscribe(res => {\n      {\n        return res;\n      }\n\n    });\n  }\n\n  public getListeCourses(): Observable<IngredientDetails[]> {\n    const pseudo = this.auth.getUserDetails().pseudo;\n    const base = this.http.get(`/server/shoppingList/${pseudo}`);\n    return base.pipe(map((data: IngredientDetails[]) => {\n      return data;\n    }));\n\n  }\n\n  public getRestListeCourses(): Observable<IngredientDetails[]> {\n    const pseudo = this.auth.getUserDetails().pseudo;\n    const base = this.http.get(`/server/shoppingList/rest/${pseudo}`);\n    return base.pipe(map((data: IngredientDetails[]) => {\n      return data;\n    }));\n  }\n\n  public addIngredientShoppingList(ingredient: any): any {\n    return this.http.post(`/server/shoppingList/add/ingredient`, ingredient).subscribe(res => {\n      {\n        return res;\n      }\n    });\n\n  }\n\n  public deleteListeCourse(id: any): Observable<any> {\n    const pseudo = this.auth.getUserDetails().pseudo;\n    const url = `/server/shoppingList/delete/${id}/${pseudo}`;\n    return this.http.delete<any>(url).pipe(\n      tap(_ => console.log(`deleted ${id}`)),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\nimport { UniteDetails } from 'src/app/models';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnitesService {\n\n  constructor(private http: HttpClient) { }\n\n  public getAllUnite(): Observable<UniteDetails[]> {\n    return this.http.get<any>('/server/unite')\n      .pipe(map((data: UniteDetails[]) => {\n        return data;\n      }));\n  }\n\n  public deleteUnite(id: any): Observable<any> {\n    const url = `/server/unite/delete/${id}`;\n    return this.http.delete<any>(url).pipe(\n      tap(_ => console.log(`deleted ${id}`)),\n    );\n  }\n\n  public updateUnite(unite: UniteDetails): Observable<any> {\n    return this.http.put(`/server/unite/update`, unite)\n      .pipe(map((data: UniteDetails[]) => {\n        return data;\n      }));\n  }\n\n  public addUnite(unite: any): any {\n    this.http.post('/server/unite/add', unite).subscribe(res => {\n      {\n        return res;\n      }\n    });\n  }\n\n  public getUniteById(idUnite: any): Observable<UniteDetails> {\n    const base = this.http.get('/server/recipe/unite/' + idUnite);\n    return base.pipe(map((data: UniteDetails) => {\n        return data;\n    }));\n}\n}\n","export function roundDecimal(nombre, precision){\n    var precision = precision || 2;\n    var tmp = Math.pow(10, precision);\n    return Math.round( nombre*tmp )/tmp;\n}\n\nexport function addTimes(startTime, endTime) {\n    var times = [0, 0, 0]\n    var max = times.length\n\n    var a = (startTime || '').split(':')\n    var b = (endTime || '').split(':')\n\n    // normalize time values\n    for (var i = 0; i < max; i++) {\n        a[i] = isNaN(parseInt(a[i])) ? 0 : parseInt(a[i])\n        b[i] = isNaN(parseInt(b[i])) ? 0 : parseInt(b[i])\n    }\n\n    // store time values\n    for (var i = 0; i < max; i++) {\n        times[i] = a[i] + b[i]\n    }\n\n    var hours = times[0]\n    var minutes = times[1]\n    var seconds = times[2]\n\n    if (seconds >= 60) {\n        var m = (seconds / 60) << 0\n        minutes += m\n        seconds -= 60 * m\n    }\n\n    if (minutes >= 60) {\n        var h = (minutes / 60) << 0\n        hours += h\n        minutes -= 60 * h\n    }\n\n    return ('0' + hours).slice(-2) + ':' + ('0' + minutes).slice(-2) + ':' + ('0' + seconds).slice(-2)\n}\n\nexport function addHours(time) {\n    let dateTime = new Date();\n    let temps = time.toString().split(':');\n    dateTime.setHours(parseInt(temps[0]));\n    dateTime.setMinutes(parseInt(temps[1]));\n    dateTime.setSeconds(parseInt(temps[2]));\n    if (dateTime.getHours() > 1) {\n        if (dateTime.getMinutes() > 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min\"\n            }\n        } else if (dateTime.getMinutes() == 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min\"\n            }\n        } else {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes.toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h\"\n            }\n        }\n    } else if (dateTime.getHours() == 1) {\n        if (dateTime.getMinutes() > 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min\"\n            }\n        } else if (dateTime.getMinutes() == 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min et \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getMinutes().toString() + \" min\"\n            }\n        } else {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getHours().toString() + \" h \" + dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return dateTime.getHours().toString() + \" h\"\n            }\n        }\n    } else {\n        if (dateTime.getMinutes() > 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString()\n            } else {\n                return dateTime.getMinutes().toString() + \" min\"\n            }\n        } else if (dateTime.getMinutes() == 1) {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getMinutes().toString() + \" min \" + dateTime.getSeconds().toString()\n            } else {\n                return dateTime.getMinutes().toString() + \" min\"\n            }\n        } else {\n            if (dateTime.getSeconds() > 1) {\n                return dateTime.getSeconds().toString() + \" s\"\n            } else {\n                return null\n            }\n        }\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}