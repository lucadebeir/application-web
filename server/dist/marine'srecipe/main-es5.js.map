{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/service/admin-auth.service.ts","webpack:///src/app/service/auth-guard.service.ts","webpack:///src/app/service/authentification.service.ts","webpack:///src/app/service/index.ts","webpack:///src/app/service/recettes.service.ts","webpack:///src/app/views/accueil/accueil.component.ts","webpack:///src/app/views/accueil/accueil.component.html","webpack:///src/app/views/ajout-recette/ajout-recette.component.ts","webpack:///src/app/views/ajout-recette/ajout-recette.component.html","webpack:///src/app/views/apropos/apropos.component.ts","webpack:///src/app/views/apropos/apropos.component.html","webpack:///src/app/views/categories/categories.component.ts","webpack:///src/app/views/categories/categories.component.html","webpack:///src/app/views/contact/contact.component.ts","webpack:///src/app/views/contact/contact.component.html","webpack:///src/app/views/gerer-les-recettes/gerer-les-recettes.component.ts","webpack:///src/app/views/gerer-les-recettes/gerer-les-recettes.component.html","webpack:///src/app/views/ingredients/ingredients.component.ts","webpack:///src/app/views/ingredients/ingredients.component.html","webpack:///src/app/views/inscrire/inscrire.component.ts","webpack:///src/app/views/inscrire/inscrire.component.html","webpack:///src/app/views/ma-liste-de-courses/ma-liste-de-courses.component.ts","webpack:///src/app/views/ma-liste-de-courses/ma-liste-de-courses.component.html","webpack:///src/app/views/mes-commentaires/mes-commentaires.component.ts","webpack:///src/app/views/mes-commentaires/mes-commentaires.component.html","webpack:///src/app/views/mes-recettes/mes-recettes.component.ts","webpack:///src/app/views/mes-recettes/mes-recettes.component.html","webpack:///src/app/views/modifier-recette/modifier-recette.component.ts","webpack:///src/app/views/modifier-recette/modifier-recette.component.html","webpack:///src/app/views/mon-profile/mon-profile.component.ts","webpack:///src/app/views/mon-profile/mon-profile.component.html","webpack:///src/app/views/recette/recette.component.ts","webpack:///src/app/views/recette/recette.component.html","webpack:///src/app/views/recettes/recettes.component.ts","webpack:///src/app/views/recettes/recettes.component.html","webpack:///src/app/views/refresh/refresh.component.ts","webpack:///src/app/views/refresh/refresh.component.html","webpack:///src/app/views/request-reset/request-reset.component.ts","webpack:///src/app/views/request-reset/request-reset.component.html","webpack:///src/app/views/response-reset/response-reset.component.ts","webpack:///src/app/views/response-reset/response-reset.component.html","webpack:///src/app/views/se-connecter/se-connecter.component.ts","webpack:///src/app/views/se-connecter/se-connecter.component.html","webpack:///src/app/views/unite/unite.component.ts","webpack:///src/app/views/unite/unite.component.html","webpack:///src/app/views/update-password/update-password.component.ts","webpack:///src/app/views/update-password/update-password.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","auth","AppComponent","selector","templateUrl","styleUrls","path","component","canActivate","AppModule","declarations","providers","bootstrap","AdminAuthService","router","isAdmin","navigateByUrl","AuthGuardService","isLoggedIn","AuthentificationService","http","token","localStorage","setItem","getItem","getToken","payload","split","window","atob","JSON","parse","user","getUserDetails","exp","Date","now","emailConfirmed","admin","base","post","request","pipe","data","saveToken","get","headers","Authorization","removeItem","operation","result","error","console","put","pseudo","url","delete","_","log","handleError","to","idRecette","body","infos","params","append","nameUser","emailUser","subject","message","RecettesService","forEach","element","subscribe","lienImage","ingredients","getIngredientsByIdRecette","push","utiliserIngredients","idIngredient","idUnite","idCategorie","recette","categorie","ingredient","res","recipe","unite","newFavori","newListeCourses","newIngredient","file","toString","AccueilComponent","recetteService","getLatestReceipes","getMostPopularRecipes","latestRecipes","err","status","mostPopularRecipes","updateNbView","navigate","location","reload","AjoutRecetteComponent","formBuilder","modalService","nomRecette","categories","idImage","etapes","selectIngredient","nomIngredient","dropdownList","selectedItems","fileToUpload","getAllIngredients","disabled","getAllUnite","unites","getAllCategory","dropdownSettings","singleSelection","idField","textField","enableCheckAll","itemsShowLimit","allowSearchFilter","searchPlaceholderText","initRecipeForm","createIngredientsForm","onChanges","event","target","files","length","images","formData","FormData","reader","FileReader","dataURL","onload","fileMetaData","originalname","name","type","buffer","addImage","formValue","recipeForm","value","ingredientFormValue","ingredientForm","alert","qte","createRecipe","addIngredientsAndCategoryToNewRecipe","listAbonneNews$","getAbonneNews","sentEmailToNewRecipe","group","required","array","createIngredientForm","compose","min","valueChanges","val","content","open","ariaLabelledBy","addIngredient","setTimeout","selectImage","AProposComponent","CategoriesComponent","recettesService","libelleCategorie","deleteCategory","queryParams","refresh","getTime","updateCategory","addCategory","ContactComponent","contactSend","initContactForm","email","contactForm","sendEmailContact","sendEmail","GererLesRecettesComponent","recettes$","getAllRecipes","filter","filter$","filteredRecipe$","recipes","filterString","toLowerCase","indexOf","deleteRecipe","IngredientsComponent","libelleUnite","ingredients$","filteredIngredient$","deleteIngredient","updateIngredient","InscrireComponent","credentials","mdp","mdp2","abonneNews","initForm","userForm","register","logout","MaListeDeCoursesComponent","ingredientToDelete","ingredientToAdd","getListeCourses","restIngredients$","getRestListeCourses","deleteListeCourse","addIngredientShoppingList","MesCommentairesComponent","MesRecettesComponent","getFavoris","getFavorisByCategory","deleteFavoris","ModifierRecetteComponent","route","parseInt","snapshot","paramMap","datePublication","nbFavoris","nbVues","getRecipeById","getImage","image","getRestIngredients","allIngredients","allUnites","getRestCategory","allCategories","getCategory","updateRecipeName","updateSteps","updateRecipeIng","deleteIngredientRececipe","deleteRecipeCategory","addRecipeCategory","addIngredientRecette","onSubmit","Ingredient","quantite","MonProfileComponent","success","profile","updateProfile","bind","deleteProfile","RecetteComponent","listIngredients","getUtiliserIngredientsByIdRecette","qtes","getUniteById","addFavoris","addListeCourses","RecettesComponent","getAllRecipesAndIngredients","getRecipeByCategory","RefreshComponent","activatedRoute","RequestResetComponent","authService","IsvalidForm","RequestResetForm","forbiddenEmails","form","valid","requestReset","reset","successMessage","errorMessage","RequestResetUser","ResponseResetComponent","fb","IsResetFormValid","CurrentState","resetToken","VerifyToken","Init","ValidPasswordToken","resettoken","ResponseResetForm","newPassword","minLength","confirmPassword","passwordFormGroup","new_password","controls","confirm_password","doesNotMatch","SeConnecterComponent","loginForm","login","clicSurBouton","UniteComponent","unites$","filteredUnite$","deleteUnite","updateUnite","addUnite","UpdatePasswordComponent","newmdp","initUpdatePasswordForm","updatePasswordForm","updatePassword","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthentificationService } from './service/authentification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(public auth: AuthentificationService){ }\n}\n","<script>\n  //pour que la navbar responsive se referme lorsqu'on sélectionne un ongle\n  $(document).on('click', '.navbar-collapse.show', function (e) {\n    $(this).collapse('hide');\n  });\n</script>\n\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" role=\"navigation\">\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\"\n    aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toogle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n\n  </button>\n  <img src=\"../assets/img/logo.jpeg\" class=\"rounded float-left\" alt=\"logo\" id=\"logo\">\n  <div class=\"collapse navbar-collapse justify-content-md-center\" id=\"navbarNavDropdown\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/\">Accueil </a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/allRecipes\">Recettes</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/aboutMe\">A propos</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" [routerLink]=\"['/refresh']\" [queryParams]=\"{url:'contact'}\" skipLocationChange=\"true\">Contact</a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" [routerLink]=\"['/refresh']\" [queryParams]=\"{url:'login'}\" skipLocationChange=\"true\">Se connecter</a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" [routerLink]=\"['/refresh']\" [queryParams]=\"{url:'register'}\" skipLocationChange=\"true\">S'inscrire</a>\n      </li>\n\n      <li class=\"nav-item dropdown\" *ngIf=\"auth.isLoggedIn()\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link dropdown-toggle\"\n          id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          {{auth.getUserDetails()?.pseudo}}\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n          <a class=\"dropdown-item\" routerLink=\"/profile\">Mon profil</a>\n          <a class=\"dropdown-item\" routerLink=\"/favorites\">Mes recettes ♥</a>\n          <a class=\"dropdown-item\" routerLink=\"/shoppingList\">Ma liste de course</a>\n          <a class=\"dropdown-item\" routerLink=\"/comment\">Mes commentaires</a>\n          <a class=\"dropdown-item\" *ngIf=\"auth.isAdmin()\" routerLink=\"/handleRecipes\">Gerer les recettes</a>\n          <a class=\"dropdown-item\" routerLink=\"\" (click)=\"auth.logout()\">Deconnexion</a>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n\n<!--footer-->\n<!--logo insta-->\n<link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" type='text/css'>\n\n<footer>\n\n  <div class=\"dark-line\">\n  <h2> Marine's recipes |</h2>\n  <p>\"Eat good, feel good\" ||</p>\n  <div class=\"social\">\n  <a href=\"https://www.instagram.com/marineteroitin/?hl=fr\"><i class=\"fa fa-lg fa-instagram\"></i></a>\n  </div>\n  <span class=\"copyright\"><a>© Proudly created by Marine Téroitin • Tous droits réservés (textes et images) </a></span>\n  </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { RouterModule, Routes } from '@angular/router'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { InscrireComponent } from './views/inscrire/inscrire.component'\nimport { SeConnecterComponent } from './views/se-connecter/se-connecter.component'\nimport { AccueilComponent } from './views/accueil/accueil.component'\nimport { AuthentificationService, AuthGuardService, AdminAuthService, RecettesService } from './service'\nimport { ContactComponent } from './views/contact/contact.component';\nimport { GererLesRecettesComponent } from './views/gerer-les-recettes/gerer-les-recettes.component';\nimport { MaListeDeCoursesComponent } from './views/ma-liste-de-courses/ma-liste-de-courses.component';\nimport { MesCommentairesComponent } from './views/mes-commentaires/mes-commentaires.component';\nimport { MesRecettesComponent } from './views/mes-recettes/mes-recettes.component';\nimport { MonProfileComponent } from './views/mon-profile/mon-profile.component';\nimport { RecettesComponent } from './views/recettes/recettes.component';\nimport { UpdatePasswordComponent } from './views/update-password/update-password.component';\nimport { AProposComponent } from './views/apropos/apropos.component';\nimport { RecetteComponent } from './views/recette/recette.component';\nimport { IngredientsComponent } from './views/ingredients/ingredients.component';\nimport { CategoriesComponent } from './views/categories/categories.component';\nimport { UniteComponent } from './views/unite/unite.component';\nimport { AjoutRecetteComponent } from './views/ajout-recette/ajout-recette.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { ModifierRecetteComponent } from './views/modifier-recette/modifier-recette.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RequestResetComponent } from './views/request-reset/request-reset.component';\nimport { ResponseResetComponent } from './views/response-reset/response-reset.component';\nimport { RefreshComponent } from './views/refresh/refresh.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AccueilComponent },\n  { path: 'login', component: SeConnecterComponent },\n  { path: 'register', component: InscrireComponent },\n  { path: 'profile', component: MonProfileComponent, canActivate: [AuthGuardService] },\n  { path: 'update-password', component: UpdatePasswordComponent, canActivate: [AuthGuardService] },\n  { path: 'aboutMe', component: AProposComponent },\n  { path: 'allRecipes', component: RecettesComponent },\n  { path: 'recipe/:id', component: RecetteComponent },\n  { path: 'handleRecipes', component: GererLesRecettesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'category', component: CategoriesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'ingredient', component: IngredientsComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'add-recipe', component: AjoutRecetteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'unite', component: UniteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'contact', component: ContactComponent},\n  { path: 'shoppingList', component: MaListeDeCoursesComponent, canActivate: [AuthGuardService] },\n  { path: 'comment', component: MesCommentairesComponent, canActivate: [AuthGuardService] },\n  { path: 'favorites', component: MesRecettesComponent, canActivate: [AuthGuardService] },\n  { path: 'updateRecipe/:id', component: ModifierRecetteComponent, canActivate: [AdminAuthService, AuthGuardService] },\n  { path: 'request-reset-password', component: RequestResetComponent },\n  { path: 'response-reset-password/:token', component: ResponseResetComponent },\n  { path: 'refresh', component: RefreshComponent }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccueilComponent,\n    MonProfileComponent,\n    InscrireComponent,\n    SeConnecterComponent,\n    ContactComponent,\n    GererLesRecettesComponent,\n    MaListeDeCoursesComponent,\n    MesCommentairesComponent,\n    MesRecettesComponent,\n    RecettesComponent,\n    UpdatePasswordComponent,\n    RecetteComponent,\n    IngredientsComponent,\n    CategoriesComponent,\n    UniteComponent,\n    AjoutRecetteComponent,\n    ModifierRecetteComponent,\n    RequestResetComponent,\n    ResponseResetComponent,\n    RefreshComponent\n  ],\n  imports: [\n    NgbModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [AuthGuardService, AuthentificationService, RecettesService, AdminAuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core'\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthentificationService } from './authentification.service'\n\n@Injectable()\nexport class AdminAuthService implements CanActivate {\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate () {\n        if (!this.auth.isAdmin()) {\n            this.router.navigateByUrl('/')\n            return false\n        }\n        return true\n    }\n}","import { Injectable } from '@angular/core'\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthentificationService } from './authentification.service'\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    private token: string\n\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate () {\n        if (!this.auth.isLoggedIn()) {\n            this.router.navigateByUrl('/')\n            return false\n        }\n        return true\n    }\n}","import { Injectable } from '@angular/core'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Observable, of } from 'rxjs'\nimport { map, tap, catchError } from 'rxjs/operators'\nimport { Router } from '@angular/router'\nimport { ContactDetail } from '../views/contact/contact.component'\n\n//login\nexport interface UserDetails {\n    pseudo: string\n    email: string\n    mdp: string\n    admin: boolean\n    emailConfirmed?: boolean\n    abonneNews: boolean\n    exp: number\n    iat: number\n}\n\ninterface TokenResponse {\n    token: string\n    error: string\n}\n\ninterface Response {\n    error: string\n}\n\n//inscription\nexport interface TokenPayload {\n    pseudo: string\n    email: string\n    mdp: string\n    mdp2: string\n    admin: boolean\n    abonneNews: boolean\n    error: string\n}\n\n//changement mdp\nexport interface UserMdp {\n    pseudo: string\n    mdp: string\n    newmdp: string\n    mdp2: string\n    error: string\n    success: string\n}\n\n//modif profile\nexport interface UserProfile {\n    pseudo: string\n    email: string\n    abonneNews: boolean\n    success: string\n}\n\n@Injectable()\nexport class AuthentificationService {\n    private token: string\n    private error: string\n\n    constructor(private http: HttpClient, private router: Router) {\n\n    }\n\n    private saveToken(token: string): void {\n        localStorage.setItem('userToken', token)\n        this.token = token\n    }\n\n    private getToken(): string {\n        if (!this.token) {\n            this.token = localStorage.getItem('userToken')\n        }\n        return this.token\n    }\n\n    public getUserDetails(): UserDetails {\n        const token = this.getToken()\n        let payload\n        if (token) {\n            payload = token.split('.')[1]\n            payload = window.atob(payload)\n            return JSON.parse(payload)\n        } else {\n            return null\n        }\n    }\n\n    public isLoggedIn(): boolean {\n        const user = this.getUserDetails()\n        if (user) {\n            return user.exp > Date.now() / 1000\n        } else {\n            return false\n        }\n    }\n\n    public emailConfirmed(): boolean {\n        const user = this.getUserDetails()\n        if (user) {\n            return user.emailConfirmed\n        } else {\n            return false\n        }\n    }\n\n    public isAdmin(): boolean {\n        const user = this.getUserDetails()\n        if (user) {\n            return user.admin\n        } else {\n            return false\n        }\n    }\n\n    public register(user: TokenPayload): Observable<any> {\n        const base = this.http.post('/server/register', user)\n\n        const request = base.pipe(\n            map((data: TokenResponse) => {\n                if (data.token) {\n                    this.saveToken(data.token)\n                }\n                return data\n            })\n        )\n        return request\n    }\n\n    public login(user: TokenPayload): Observable<any> {\n        const base = this.http.post('/server/login', user)\n        const request = base.pipe(\n            map((data: TokenResponse) => { //map permet de récupérer des données\n                if (data.token) {\n                    this.saveToken(data.token)\n                }\n                return data\n            })\n        )\n        return request\n    }\n\n    public profile(): Observable<any> {\n        return this.http.get('/server/profile', {\n            headers: { Authorization: `${this.getToken()}` }\n        })\n    }\n\n    public logout(): void {\n        this.token = ''\n        window.localStorage.removeItem('userToken')\n        this.router.navigateByUrl('/')\n    }\n\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            // TODO: send the error to remote logging infrastructure\n            console.error(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n\n    public updatePassword(user: UserMdp): Observable<any> {\n        const base = this.http.put(`/server/update-password/${user.pseudo}`, user)\n\n        return base.pipe(\n            map((data: Response) => {\n                return data\n            })\n        );\n    }\n\n    public deleteProfile(pseudo: string): Observable<any> {\n        const url = `/server/delete-profile/${pseudo}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${pseudo}`)),\n            catchError(this.handleError<any>('deleteProfile'))\n        );\n    }\n\n    public updateProfile(user: UserProfile): Observable<any> {\n        const base = this.http.put(`/server/mon-profile/${user.pseudo}`, user)\n\n        return base.pipe(\n            tap(_ => console.log(`updated ${user.pseudo}`)),\n            catchError(this.handleError<any>('updateProfile'))\n        );\n    }\n\n    public getAbonneNews(): any {\n        return this.http.get(`/server/abonneNews`)\n    }\n\n    public sentEmailToNewRecipe(to: any, idRecette: number): any {\n        return this.http.get(`/server/newRecipe/${to.pseudo}/${idRecette}`)\n    }\n\n    public requestReset(body): Observable<any> {\n        return this.http.post(`/server/req-reset-password`, body);\n    }\n\n    public newPassword(body): Observable<any> {\n        return this.http.post(`/server/new-password`, body);\n    }\n\n    public ValidPasswordToken(body): Observable<any> {\n        return this.http.post(`/server/valid-password-token`, body);\n    }\n\n    public sendEmailContact(infos: ContactDetail): any {\n        let params = new HttpParams();\n\n        params = params.append(`name`, infos.nameUser);\n        params = params.append(`email`, infos.emailUser);\n        params = params.append(`subject`, infos.subject);\n        params = params.append(`message`, infos.message);\n\n        return this.http.get(`/server/contact/send`, { params: params})\n    }\n}\n","export * from './admin-auth.service'\nexport * from './auth-guard.service'\nexport * from './authentification.service'\nexport * from './recettes.service'\n","import { Injectable } from '@angular/core'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { map, tap } from 'rxjs/operators'\nimport { CreateRecipe } from '../views/ajout-recette/ajout-recette.component'\nimport { AuthentificationService } from './authentification.service'\nimport { element } from 'protractor'\n\n\n\nexport interface RecipeDetails {\n    idRecette: number\n    nomRecette: string\n    datePublication: Date\n    nbFavoris: number\n    nbVues: number\n    etapes: Text\n    lienImage?: any\n    idImage?: number\n    ingredients?: IngredientDetails[]\n}\n\nexport interface IngredientDetails {\n    idRecette?: number\n    idIngredient?: string\n    nomIngredient?: string\n    qte?: number\n    libelleUnite?: string\n    idUnite?: number\n    disabled?: boolean\n}\n\nexport interface UniteDetails {\n    idUnite: number\n    libelleUnite: string\n}\n\nexport interface QuantiteDetails {\n    qte: any,\n    idRecette: number\n    idIngredient: number,\n    idUnite: number\n}\n\nexport interface CategoryDetails {\n    idCategorie: number\n    libelleCategorie: string\n}\n\nexport interface FavorisDetails {\n    pseudo: string\n    idRecette: number\n}\n\nexport interface ListeCoursesDetails {\n    pseudo: string\n    listIngredients: any\n}\n\nexport interface ImageDetails {\n    idImage: number\n    lienImage: string\n}\n\n@Injectable()\nexport class RecettesService {\n\n    constructor(private http: HttpClient, private auth: AuthentificationService) { }\n\n    public getAllRecipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/allRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                })\n            });\n            return data\n        }))\n    }\n\n    public getAllRecipesAndIngredients(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/allRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                })\n                element.ingredients = []\n                this.getIngredientsByIdRecette(element.idRecette).subscribe(data => {\n                    console.log(data)\n                    element.ingredients.push(data[0])\n                })\n            });\n            return data\n        }))\n    }\n\n    public getRecipeById(id: any): Observable<any> {\n        return this.http.get<any>('/server/recipe/' + id)\n    }\n\n    public getIngredientsByIdRecette(id: any): any {\n        return this.http.get<any>('/server/recipe/' + id + '/ingredients')\n    }\n\n    public getUtiliserIngredientsByIdRecette(id: any): Observable<QuantiteDetails[]> {\n        const base = this.http.get('/server/recipe/' + id + '/utiliserIngredients')\n        const utiliserIngredients = base.pipe(map((data: QuantiteDetails[]) => {\n            return data\n        }))\n        return utiliserIngredients\n    }\n\n    public getIngredientById(idIngredient: any): Observable<IngredientDetails> {\n        const base = this.http.get('/server/ingredient/' + idIngredient)\n        return base.pipe(map((data: IngredientDetails) => {\n            return data\n        }))\n    }\n\n    public getUniteById(idUnite: any): Observable<UniteDetails> {\n        const base = this.http.get('/server/recipe/unite/' + idUnite)\n        return base.pipe(map((data: UniteDetails) => {\n            return data\n        }))\n    }\n\n    public getLatestReceipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/latestReceipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            console.log(data)\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public getMostPopularRecipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/mostPopularRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            console.log(data)\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public deleteRecipe(id: any): Observable<any> {\n        const url = `/server/delete-recipe/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public getRecipeByCategory(idCategorie: any): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/recipe/category/${idCategorie}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public getAllCategory(): any {\n        return this.http.get<any>(`/server/category`)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n    }\n\n\n\n    public updateNbView(recette: RecipeDetails): Observable<any> {\n        return this.http.put<any>(`/server/recipe/update-nbView/${recette.idRecette}`, recette)\n    }\n\n    public deleteCategory(id: any): Observable<any> {\n        const url = `/server/category/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateCategory(categorie: CategoryDetails): Observable<any> {\n        return this.http.put(`/server/category/update`, categorie)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n\n\n    }\n\n    public updateRecipeIng(recette: RecipeDetails, ingredient: IngredientDetails): Observable<any> {\n        return this.http.put(`/server/recipe/${recette.idRecette}/ingredient/update`, ingredient)\n            .pipe(map((res) => {\n                return res\n            }))\n\n\n    }\n\n    public addCategory(categorie: CategoryDetails): any {\n\n        this.http.post('/server/category/add', categorie).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public getAllIngredients(): any {\n        return this.http.get<any>(`/server/ingredient`)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public getRestIngredients(idRecette: any): any {\n        return this.http.get<any>(`/server/recipe/${idRecette}/ingredient/rest`)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public getRestCategory(idRecette: any): any {\n        return this.http.get<any>(`/server/recipe/${idRecette}/category/rest`)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n    }\n\n    public deleteIngredient(id: any): Observable<any> {\n        const url = `/server/ingredient/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateIngredient(ingredient: IngredientDetails): Observable<any> {\n        return this.http.put(`/server/ingredient/update`, ingredient)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public addIngredient(ingredient: any): any {\n        this.http.post('/server/ingredient/add', ingredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public createRecipe(recipe: CreateRecipe): Observable<any> {\n        const res = this.http.post('/server/add-recipe', recipe)\n        return res.pipe(map((res) => {\n            return res\n        }))\n    }\n\n    public addIngredientsAndCategoryToNewRecipe(recipe: CreateRecipe): Observable<any> {\n        const res = this.http.post('/server/recipe/addIngredientAndCategorie', recipe)\n        return res.pipe(map((res) => {\n            console.log(res)\n            return res\n        }))\n    }\n\n    public addRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails): Observable<any> {\n        return this.http.post(`/server/recipe/${recette.idRecette}/category/add`, categorie)\n            .pipe(map((res) => {\n                return res\n            }))\n    }\n\n    public getAllUnite(): any {\n        return this.http.get<any>('/server/unite')\n            .pipe(map((data: UniteDetails[]) => {\n                return data\n            }))\n    }\n\n    public deleteUnite(id: any): Observable<any> {\n        const url = `/server/unite/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateUnite(unite: UniteDetails): Observable<any> {\n        return this.http.put(`/server/unite/update`, unite)\n            .pipe(map((data: UniteDetails[]) => {\n                return data\n            }))\n    }\n\n    public addUnite(unite: any): any {\n        this.http.post('/server/unite/add', unite).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n\n    public addFavoris(newFavori: FavorisDetails): any {\n        return this.http.post(`/server/favorites/add`, newFavori).subscribe(res => {\n            {\n                return res\n            }\n\n        })\n    }\n\n\n    public addListeCourses(newListeCourses: ListeCoursesDetails) {\n        this.http.post(`/server/shoppingList/add`, newListeCourses).subscribe(res => {\n            {\n                return res\n            }\n\n        })\n    }\n\n\n    public getFavoris(): Observable<RecipeDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/recipe/favorites/${pseudo}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public getFavorisByCategory(idCategorie: number): Observable<RecipeDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/recipe/favorites/${pseudo}/${idCategorie}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public deleteFavoris(id: any): Observable<any> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const url = `/server/favorites/${pseudo}/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n\n    public getListeCourses(): Observable<IngredientDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/shoppingList/${pseudo}`);\n        return base.pipe(map((data: IngredientDetails[]) => {\n            return data\n        }))\n\n    }\n\n    public getRestListeCourses(): Observable<IngredientDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/shoppingList/rest/${pseudo}`);\n        return base.pipe(map((data: IngredientDetails[]) => {\n            return data\n        }))\n    }\n\n    public addIngredientShoppingList(ingredient: any): any {\n        return this.http.post(`/server/shoppingList/add/ingredient`, ingredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public deleteListeCourse(id: any): Observable<any> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const url = `/server/shoppingList/delete/${id}/${pseudo}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public getCategory(id: any): any {\n        return this.http.get<any>(`/server/recipe/${id}/category`)\n            .pipe(map((data: any) => {\n                return data\n            }))\n    }\n\n    public updateRecipeName(recette: RecipeDetails): Observable<any> {\n\n        return this.http.put(`/server/recipe/name/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public updateSteps(recette: RecipeDetails): Observable<any> {\n\n        return this.http.put(`/server/recipe/step/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public deleteIngredientRececipe(ingredient: IngredientDetails, recette: RecipeDetails): Observable<any> {\n        const url = `/server/recipe/${recette.idRecette}/ingredient/${ingredient.idIngredient}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${ingredient.idIngredient} from recipe ${recette.idRecette}`)),\n        );\n    }\n\n    public addIngredientRecette(newIngredient: IngredientDetails): any {\n        this.http.post(`/server/recipe/${newIngredient.idRecette}/add/ingredient/${newIngredient.idIngredient}`, newIngredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public deleteRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails): Observable<any> {\n        const url = `/server/recipe/${recette.idRecette}/category/${categorie.idCategorie}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${categorie.idCategorie} from recipe ${recette.idRecette}`)),\n        );\n    }\n\n    public addImage(file: any): Observable<any> {\n        console.log(file)\n        return this.http.post(`/server/uploads`, file).pipe(map((data: any) => {\n            return data\n        }))\n    }\n\n    public getImage(id: number): any {\n        return this.http.get(`/server/image/${id}`).pipe(map((data: any) => {\n            console.log(data[0])\n            return data\n        }))\n    }\n\n    public getRestOfIngredients(ingredients: number[]): any {\n        let params = new HttpParams();\n\n        ingredients.forEach((idIngredient: number) => {\n            params = params.append(`ingredients[]`, idIngredient.toString());\n        })\n        return this.http.get<any>(`/server/ingredient/rest`, { params: params })\n            .pipe(map((data: IngredientDetails[]) => {\n                console.log(data)\n                return data\n            }))\n    }\n\n}    ","import { Component, OnInit } from '@angular/core';\nimport { RecipeDetails, RecettesService } from '../../service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.css']\n})\nexport class AccueilComponent implements OnInit {\n\n  public latestRecipes: RecipeDetails[]\n  public mostPopularRecipes: RecipeDetails[]\n\n  constructor(private recetteService: RecettesService, private router: Router) { \n  }\n\n  ngOnInit(): void {\n    this.getLatestReceipes()\n    this.getMostPopularRecipes()\n  }\n\n  getLatestReceipes() {\n\n    this.recetteService.getLatestReceipes().subscribe(\n      (latestRecipes: RecipeDetails[]) => {\n        this.latestRecipes = latestRecipes\n    },err => {\n      if(err instanceof HttpErrorResponse){\n        if(err.status === 402) {\n          console.log(\"Il n'y a pas encore de recettes.\")\n        }\n      }\n    })\n  }\n\n  getMostPopularRecipes() {\n\n    this.recetteService.getMostPopularRecipes().subscribe(\n      (mostPopularRecipes: RecipeDetails[]) => {\n        this.mostPopularRecipes = mostPopularRecipes\n    },err => {\n      if(err instanceof HttpErrorResponse){\n        if(err.status === 402) {\n          console.log(\"Il n'y a pas encore de recettes.\")\n        }\n      }\n    })\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload()\n        })\n      }, err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 402) {\n          console.log(\"Cette recette n'existe pas !\")\n        }\n      }\n    })\n  }\n\n}\n","<div class=\"media\">\n    <img src=\"../../assets/img/AroundMyWorld.jpeg\" class=\"img-fluid\" alt=\"Image Around my world, eat good feel good\">\n</div>\n\n<h5>Les plus vues</h5>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of this.mostPopularRecipes\"> <!--Pour chaque recette on représente sa carte-->\n            <div class=\"card h-100\">\n                <img class=\"card-img-top img-fluid\" src=\"{{recette.lienImage}}\" alt=\"Photo de la recette\"><!--mettre image ici-->\n                <div class=\"card-body\">\n                    <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                    <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                    <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                </div>\n                <div class=\"card-footer text-center bg-white\">\n                    <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                    \n            </div>\n        </div>\n    </div>\n</div>\n\n\n<h5>Les Nouveautés</h5>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of this.latestRecipes\"> <!--Pour chaque recette on représente sa carte-->\n            <div class=\"card h-100\">\n                <img class=\"card-img-top img-fluid\" src=\"{{recette.lienImage}}\" alt=\"Photo de la recette\"><!--mettre image ici-->\n                <div class=\"card-body\">\n                    <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                    <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                    <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                </div>\n                <div class=\"card-footer text-center bg-white\">\n                    <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                    \n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CategoryDetails, IngredientDetails, UniteDetails, RecettesService, UserDetails, AuthentificationService } from '../../service';\nimport { FormGroup, FormArray, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'; //la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-ajout-recette',\n  templateUrl: './ajout-recette.component.html',\n  styleUrls: ['./ajout-recette.component.css']\n})\nexport class AjoutRecetteComponent implements OnInit {\n\n\n  images;\n\n\n  recipe: CreateRecipe = {\n    idRecette: null,\n    nomRecette: '',\n    categories: null,\n    ingredients: null,\n    idImage: null,\n    etapes: ''\n  }\n\n  public ingredients: IngredientDetails[]\n  public unites: UniteDetails[]\n  public categories: CategoryDetails[]\n\n  public recipeForm: FormGroup\n  public newIngredientForm: FormGroup\n  public ingredientForm: FormGroup\n  public ingredient: FormArray\n  public selectIngredient: number[] = []\n  private listAbonneNews$: Observable<UserDetails[]>\n\n  public newIngredient: IngredientDetails = {\n    nomIngredient: ''\n  }\n\n  //pour multiple select\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings: IDropdownSettings;\n  fileToUpload: File = null;\n\n  constructor(private recetteService: RecettesService, private formBuilder: FormBuilder, private router: Router, private modalService: NgbModal,\n    private http: HttpClient, private auth: AuthentificationService) { }\n\n  ngOnInit(): void {\n    //on récupère tous les ingrédients, unités, catégories pour les réponses possibles à notre formulaire\n    this.recetteService.getAllIngredients().subscribe(\n      ingredients => {\n        ingredients.forEach(element => {\n          element.disabled = false\n        })\n        this.ingredients = ingredients\n        console.log(this.ingredients)\n      }\n    )\n\n    this.recetteService.getAllUnite().subscribe(\n      unites => {\n        this.unites = unites\n      }\n    )\n\n    this.recetteService.getAllCategory().subscribe(\n      categories => {\n        this.categories = categories\n      }\n    )\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'idCategorie',\n      textField: 'libelleCategorie',\n      enableCheckAll: false,\n      itemsShowLimit: 3,\n      allowSearchFilter: true,\n      searchPlaceholderText: \"Rechercher\"\n    };\n\n    this.initRecipeForm()\n\n    this.createIngredientsForm()\n\n    this.onChanges()\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.images = file;\n    }\n  }\n\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('file', this.images);\n\n    this.http.post<any>('/server/uploads', formData).subscribe(\n      (res) => console.log(res),\n      (err) => console.log(err)\n    );\n  }\n\n  onFileChange(file: any) {\n\n    console.log(file)\n\n    var reader = new FileReader();\n    var dataURL;\n    reader.onload = function () {\n      dataURL = reader.result;\n      console.log(dataURL)\n    };\n\n    const fileMetaData = {\n      originalname: file[0].name,\n      type: file[0].type,\n      buffer: file[0]\n    }\n    console.log(fileMetaData)\n    this.recetteService.addImage(fileMetaData).subscribe(data => {\n      console.log(data)\n      this.recipe.idImage = data[0]\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  uploadFileToActivity() {\n    this.recetteService.addImage(this.fileToUpload).subscribe(data => {\n      // do something, if upload success\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  createRecipe() {\n\n    const formValue = this.recipeForm.value;\n    const ingredientFormValue = this.ingredientForm.value;\n    const formData = new FormData();\n    formData.append('file', this.images);\n\n    if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.etapes == '' && formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins une catégorie de la recette, au moins rajouter un ingrédient, et remplir le champ de la Préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.etapes == '' && formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins rajouter un ingrédient, et remplir le champ de la Préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.etapes == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir au moins une catégorie de la recette, au moins rajouter un ingrédient, et remplir le champ de la Préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins une catégorie de la recette, et au moins rajouter un ingrédient.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins une catégorie de la recette et le champ de la Préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && this.ingredientForm.value.ingredient[0].idIngredient == \"\") {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, et sélectionner au moins une catégorie.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ de la préparation, et sélectionner au moins une catégorie.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\") {\n      alert(\"Vous devez choisir au moins un ingrédient pour votre recette.\");\n      return;\n    }\n\n    else if (this.selectedItems.length == 0) {\n      alert(\"Vous devez choisir au moins une catégorie pour votre recette.\");\n      return;\n    }\n\n    else if (formValue.etapes == '') {\n      alert(\"Vous devez choisir le champ de la préparation.\");\n      return;\n    }\n\n    else if (formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient.forEach(element => {\n      if (element.qte <= 0) {\n        alert(\"Il faut une quantité positive pour l'ingrédient.\");\n        return;\n      }\n    }))\n\n\n      console.log(ingredientFormValue.ingredient)\n    this.recipe.ingredients = ingredientFormValue.ingredient //je récupère les info sur l'ingrédient\n    this.recipe.categories = this.selectedItems\n    this.recipe.nomRecette = formValue.nomRecette\n    this.recipe.etapes = formValue.etapes\n    this.recetteService.addImage(formData).subscribe(res => {\n      this.recipe.idImage = res[0]\n      console.log(res[0])\n      this.recetteService.createRecipe(this.recipe).subscribe(res => {\n        this.recipe.idRecette = res[0] // je récupère l'id de la recette que je viens de créer\n\n        this.recetteService.addIngredientsAndCategoryToNewRecipe(this.recipe).subscribe(res => {\n          console.log(\"succès !!!!\")\n          this.listAbonneNews$ = this.auth.getAbonneNews()\n          console.log(this.listAbonneNews$)\n          this.listAbonneNews$.subscribe(res => {\n            res.forEach(element => {\n              console.log(element)\n              this.auth.sentEmailToNewRecipe(element, this.recipe.idRecette).subscribe(res => {\n                console.log(res)\n                console.log(\"bg\")\n              })\n            });\n          });\n        })\n      })\n\n      //this.router.navigate(['/recipe/'], { queryParams: { id: this.recipe.idRecette } })\n      this.router.navigateByUrl('allRecipes')\n    })\n  }\n\n  initRecipeForm() {\n    this.recipeForm = this.formBuilder.group({\n      nomRecette: ['', Validators.required],\n      categories: ['', Validators.required],\n      ingredients: ['', Validators.required],\n      etapes: ['', Validators.required]\n    });\n  }\n\n  /******  création formulaire pour ajouter autant de lignes ingrédient (qté, nom, unite) qu'on veut *****/\n  //création initiale formulaire ingredients\n  createIngredientsForm(): FormGroup {\n    return this.ingredientForm = this.formBuilder.group({\n      ingredient: this.formBuilder.array([this.createIngredientForm()])\n    })\n  }\n\n  createIngredientForm(): FormGroup {\n    return this.formBuilder.group({\n      idIngredient: new FormControl({\n        value: '',\n        disabled: false\n      },\n        Validators.compose([Validators.required])),\n      qte: new FormControl({\n        value: '',\n        disabled: false\n      },\n        Validators.compose([Validators.required, Validators.min(0)])),\n      idUnite: new FormControl({\n        value: '',\n        disabled: false\n      },\n        Validators.compose([Validators.required]))\n    });\n  }\n\n  onChanges(): void {\n    this.ingredientForm.valueChanges.subscribe(val => {\n      console.log(val.ingredient)\n      //this.selectIngredient = []\n      this.ingredients.forEach(ingredient => {\n        ingredient.disabled = false\n      })\n      this.ingredients.forEach(ingredient => {\n        val.ingredient.forEach(element => {\n          if (element.idIngredient != '') {\n            console.log(ingredient)\n            console.log(element)\n            if (ingredient.idIngredient == element.idIngredient) {\n              ingredient.disabled = true\n            }\n            //this.selectIngredient.push(element.idIngredient)\n          }\n        })\n      })\n    })\n  }\n\n  get formData() { return this.ingredientForm.get('ingredient'); }\n\n  //pour ajouter un ingrédient\n  addIngredient(): void {\n    this.ingredient = this.ingredientForm.get('ingredient') as FormArray;\n    this.ingredient.push(this.createIngredientForm());\n  }\n  /*****************************/\n\n  //récupérer le nom du new ingrédient et l'enregistrer dans la bd\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.nomIngredient = result\n        this.recetteService.addIngredient(this.newIngredient)\n        setTimeout(() => {\n          this.recetteService.getAllIngredients().subscribe(\n            ingredients => {\n              this.ingredients = ingredients\n            }\n          )\n        }, 1000);\n      })\n  }\n\n}\n\nexport interface CreateRecipe {\n  idRecette?: number\n  nomRecette?: string\n  categories?: any[]\n  ingredients?: any[]\n  idImage?: File\n  etapes?: string\n}","<script>\n    $(document).ready(function () {\n        $('select').formSelect();\n        $('select.select_all').siblings('ul').prepend('<li id=sm_select_all><span>Select All</span></li>');\n        $('li#sm_select_all').on('click', function () {\n            var jq_elem = $(this),\n                jq_elem_span = jq_elem.find('span'),\n                select_all = jq_elem_span.text() == 'Select All',\n                set_text = select_all ? 'Select None' : 'Select All';\n            jq_elem_span.text(set_text);\n            jq_elem.siblings('li').filter(function () {\n                return $(this).find('input').prop('checked') != select_all;\n            }).click();\n        });\n    })\n</script>\n\n<div id=\"header\">\n    <h2>Ajout d'une nouvelle recette</h2>\n</div>\n\n\n<form [formGroup]=\"recipeForm\" (ngSubmit)=\"createRecipe()\">\n\n    <div id=\"conteneur\">\n        <div class=\"element 1 text-center col-md-6\">\n            <label for=\"validationTooltip05\">Nom de la recette</label>\n            <input type=\"text\" formControlName=\"nomRecette\" class=\"form-control\" id=\"validationTooltip05\" required>\n            <div class=\"invalid-tooltip\">\n                Rentrez un nom correcte.\n            </div>\n        </div>\n\n        <div class=\"element 2 text-center col-md-6\">\n            <div style=\"text-align: center\">\n                <form>      \n                  <div>\n                    <input type=\"file\" name=\"image\" (change)=\"selectImage($event)\" />\n                  </div>\n                  <br>\n                </form>\n            </div>\n        </div>\n\n        \n\n    <div class=\"element 3 card border-secondary col-md-6\">\n        <div class=\"card-header\">Catégorie</div>\n        <br>\n        <form>\n            <div id=\"ingrForm\" class=\"form-row\">\n                <div class=\"col-md-4 mb-4\">\n                    <ng-multiselect-dropdown [data]=\"categories\" placeholder=\"sélectionner\"\n                        [settings]=\"dropdownSettings\" [(ngModel)]=\"selectedItems\" [ngModelOptions]=\"{standalone: true}\">\n                    </ng-multiselect-dropdown>\n                    <div class=\"invalid-tooltip\">\n                        Selectionnez une catégorie.\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"element 4 card border-secondary col-md-6\">\n        <div class=\"card-header\">Ingrédients</div>\n        <form [formGroup]=\"ingredientForm\">\n            <!--formulaire ingrédients-->\n            <div formArrayName=\"ingredient\">\n                <div *ngFor=\"let ing of formData['controls']; let idx = index\" [formGroupName]=\"idx\" class=\"ingredient\">\n                    <!--idx = indexe d'une ligne ingrédient du formulaire-->\n                    <div id=\"ingrForm\" class=\"form-row\">\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"validationTooltip04\">Ingrédient</label>\n                            <select class=\"custom-select\" id=\"validationTooltip04\" formControlName=\"idIngredient\"\n                                required>\n                                <option *ngFor=\"let ingredient of ingredients\" [ngValue]=\"ingredient.idIngredient\" [disabled]=\"ingredient.disabled\">\n                                    {{ingredient.nomIngredient}}</option>\n                            </select>\n                            <div class=\"invalid-tooltip\">\n                                Selectionnez un ingrédient.\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"validationTooltip05\">Quantité</label>\n                            <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\" formControlName=\"qte\"\n                                required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"validationTooltip04\">Unité</label>\n                            <select class=\"custom-select\" id=\"validationTooltip04\" formControlName=\"idUnite\" required>\n                                <option *ngFor=\"let unite of unites\" [ngValue]=\"unite.idUnite\">\n                                    {{unite.libelleUnite}}\n                                </option>\n                            </select>\n                            <div class=\"invalid-tooltip\">\n                                Selectionnez une unité.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div id=\"buttonIngredient\" class=\"form-row\">\n                <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"addIngredient()\">Ajouter un nouvel\n                    ingrédient</button>\n                <ng-template #content let-modal>\n                    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\"></h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form>\n                            <div class=\"form-group\">\n                                <label for=\"nomIngredient\"> Nom de l'ingrédient </label>\n                                <div class=\"input-group\">\n                                    <input id=\"nomIngredient\" class=\"form-control\" placeholder=\"Cacahuète\"\n                                        #nomIngredient=\"ngModel\" [(ngModel)]=\"newIngredient.nomIngredient\"\n                                        [ngModelOptions]=\"{standalone: true}\">\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button tyoe=\"button\" class=\"btn btn-outline-dark\"\n                            (click)=\"modal.close(newIngredient.nomIngredient)\">Ajouter</button>\n                    </div>\n                </ng-template>\n\n                <button class=\"btn btn-outline-primary\" (click)=\"open(content)\">Créer un nouvel ingrédient</button>\n                <!--on appelle le modal-->\n            </div>\n\n        </form>\n        <!--fin du formulaire ingrédients-->\n\n    </div>\n    <div class=\"element 5 card border-secondary col-md-6\">\n        <div class=\"card-header\">Préparation</div>\n        <div class=\"card-body\">\n            <textarea class=\"form-control\" formControlName=\"etapes\" id=\"exampleFormControlTextarea1\" rows=\"8\"\n                required></textarea>\n        </div>\n    </div>\n    </div>\n    <div class=\"col text-center\">\n        <button id=\"validateButton\" type=\"submit\" [disabled]=\"ingredientForm.invalid\"\n            class=\"col-ld-6 btn btn-outline-success\">Valider</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-apropos',\n  templateUrl: './apropos.component.html',\n  styleUrls: ['./apropos.component.css']\n})\nexport class AProposComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"mt-5\">A propos</h1>\n<div id=\"conteneur\">\n  <div class=\"element 1 mb-3 col-lg-6 col-md-6 col-sm-6 p-3\">\n    <img src=\"../../assets/img/me.jpeg\" class=\"img-fluid\" width=\"auto\" height=\"auto\" alt=\"photo de l'auteur du site.\">\n  </div>\n  <div class=\"element 2 mb-3 col-lg-6 col-md-6 col-sm-6\">\n    <div id=\"conteneur1\">\n      <p id=\"c1\" class=\"mb-0\">\n        <ul>\n          <li> Je m'appelle Marine.</li>\n          <li> J'ai 21 printemps, et j'étudie dans une école d'ingénieur. </li>\n          <li> Depuis mon plus jeune âge, j'adore cuisiner. </li>\n          <li>J'ai créé ce site afin de partager les recettes que j'aime réaliser au quotidien.</li>\n        </ul>\n    \n      <p id=\"c2\" class=\"mb-0\">\n        <ul>\n          <li> Vous avez accès à toutes les recettes sans être connecté !</li>\n       <li>Créer un compte vous permettra de mettre des recettes en favoris et de les retrouver plus facilement.\n        Vous pourrez aussi créer une liste de course directement à partir des recettes.\n        Si vous le souhaitez, des notifications par mail peuvent vous avertir de l'arrivée d'une nouvelle recette afin\n        de ne rien rater.</li>\n      </ul>\n      \n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CategoryDetails, RecettesService} from '../../service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  public categories: CategoryDetails[] \n\n  public categorie: CategoryDetails = {\n    idCategorie: null,\n    libelleCategorie: ''\n  }\n   \n\n  constructor(private recettesService: RecettesService, private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.recettesService.getAllCategory().subscribe(\n      categories => {\n        this.categories = categories\n      }\n    )\n  }\n\n  deleteCategory(idCategorie: any) {\n    this.recettesService.deleteCategory(idCategorie)\n      .subscribe(res => {\n        this.router.navigate(['/category'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateCategory(categorie: CategoryDetails){\n    this.recettesService.updateCategory(categorie).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addCategory(){\n    this.recettesService.addCategory(this.categorie)\n    window.location.reload()\n  }\n}\n\n","\n<div id=\"header\">\n    <h1>Catégories</h1>\n</div>  \n\n\n<div class='flex-container'>\n  <div>\n    <table class=\"table col-md-12 mx-auto\" *ngFor=\"let categorie of categories\">\n    \n        <tr>\n            <td>\n              <form (submit)=\"updateCategory(categorie)\">\n                <div class=\"form-row align-items-center\">\n                  <div class=\"col-auto\">\n              <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\"  value= {{categorie.libelleCategorie}}\n                  [(ngModel)]=\"categorie.libelleCategorie\">\n            </div>\n            <div class=\"col-auto\">\n              <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n            </div>\n            <div class=\"col-auto\">\n              <button id=\"btn\" type=\"submit\" class=\"btn btn-outline-danger \" (click)=\"deleteCategory(categorie.idCategorie)\" >Supprimer</button>\n              </div>\n              </div>\n              </form>\n            </td>\n          </tr> \n    </table>\n  </div>\n  <div >\n    <h6 id=\"question\" > Ajouter une nouvelle catégorie </h6>\n    <form (submit)=\"addCategory()\">\n      <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\"  placeholder=\"nom catégorie\"\n                        [(ngModel)]=\"categorie.libelleCategorie\">\n\n      <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n      \n      </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  contactForm: FormGroup;\n\n  contactSend: ContactDetail = {\n    nameUser: '',\n    emailUser: '',\n    subject: '',\n    message: ''\n  }\n\n  constructor(private formBuilder: FormBuilder, private auth: AuthentificationService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.initContactForm()\n  }\n\n  initContactForm() : FormGroup {\n    if(this.auth.isLoggedIn()) {\n      const emailUser = this.auth.getUserDetails().email\n      return this.contactForm = this.formBuilder.group({\n        nameUser: ['', Validators.required],\n        email: [emailUser, [Validators.required, Validators.email]],\n        subject: ['', Validators.required],\n        message: ['', Validators.required]\n      });\n    } else {\n      return this.contactForm = this.formBuilder.group({\n        nameUser: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        subject: ['', Validators.required],\n        message: ['', Validators.required]\n      });\n    }\n    \n  }\n\n  sendEmail() {\n\n    const formValue = this.contactForm.value;\n\n    this.contactSend.nameUser = formValue.nameUser\n    this.contactSend.emailUser = formValue.email\n    this.contactSend.subject = formValue.subject\n    this.contactSend.message = formValue.message\n\n    this.auth.sendEmailContact(this.contactSend).subscribe(\n      this.router.navigate([''])\n    );\n\n  }\n\n}\n\nexport interface ContactDetail {\n  nameUser: string\n  emailUser: string\n  subject: string\n  message: string\n}","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form class=\"example-form\" [formGroup]=\"contactForm\" (ngSubmit)=\"sendEmail()\" data-toggle=\"validator\" role=\"form\">\n                <!-- Submitting will start this method -->\n                <div class=\"form-group\">\n                    <label>Nom *</label>\n                    <input id=\"name\" type=\"text\" class=\"form-control\" formControlName=\"nameUser\" placeholder=\"Nom\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"control-label\">Email *</label>\n                    <input id=\"to\" type=\"email\" class=\"form-control\" formControlName=\"email\"\n                        placeholder=\"nom.prenom@exemple.com\" id=\"inputEmail\"\n                        required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                        data-error=\"Bruh, that email address is invalid\">\n                    <div class=\"help-block with-errors\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <label>Objet *</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"subject\" placeholder=\"\" required>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Message *</label>\n                    <textarea type=\"textarea\" class=\"form-control\" rows=\"8\" formControlName=\"message\" placeholder=\"\" required></textarea>\n                </div>\n                <br>\n                <div class=\"text-center\">\n                    <button id=\"send_email\" class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"contactForm.invalid\">Envoyer</button>\n                    <br>\n                    <br>\n                    <p>* Champs obligatoires.</p>\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecipeDetails, RecettesService } from '../../service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-gerer-les-recettes',\n  templateUrl: './gerer-les-recettes.component.html',\n  styleUrls: ['./gerer-les-recettes.component.css']\n})\nexport class GererLesRecettesComponent implements OnInit {\n\n  public recette: RecipeDetails\n  public recettes$: Observable<RecipeDetails[]>\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recettesService: RecettesService, private router: Router) { \n    //pour la recherche dynamique\n    this.recettes$ = this.recettesService.getAllRecipes()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n    \n  }\n  \n  deleteRecipe(idRecette: any) {\n    this.recettesService.deleteRecipe(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/handleRecipes']).then(() => {\n          window.location.reload()\n        })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n  \n\n}\n\n","<div id=\"titre\">\n\t<h1>Gerer les recettes</h1>\n</div>\n\n\n<ul id=\"menu\" class=\"nav justify-content-center\">\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/ingredient']\">Gérer les ingrédients</a>\n\t</li>\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/category']\">Gérer les catégories</a>\n\t</li>\n\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/unite']\">Gérer les unités</a>\n\t</li>\n\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/add-recipe']\">Créer une nouvelle recette</a>\n\t</li>\n\n\t<li>\n\t\t<form class=\"form-inline my-2 my-lg-0\">\n\t\t\t<input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\"\n\t\t\t\t[formControl]=\"filter\">\n\t\t</form>\n\t</li>\n</ul>\n\n\n<div id=\"titre\">\n\t<h3>Recettes publiées</h3>\n</div>\n\n\n\n<div id=\"container\" class=\"container\">\n\t<div class=\"row mb-3\" *ngFor=\"let recette of filteredRecipe$ | async\">\n\t\t<div class=\"col-sm-3\"></div>\n\t\t<div class=\"col-md-6 col-sm-6\">\n\t\t\t<div class=\"d-flex flex-row border rounded\">\n\t\t\t\t<div class=\"p-0 w-25\">\n\t\t\t\t\t<img src=\"{{recette.lienImage}}\"\n\t\t\t\t\t\tclass=\"img-thumbnail border-0\" alt=\"photo de la recette\" />\n\n\t\t\t\t</div>\n\t\t\t\t<div class=\"pl-3 pt-2 pr-2 pb-2 w-75 border-left\">\n\n\t\t\t\t\t<h5 class=\"text\">{{recette.nomRecette}}</h5>\n\t\t\t\t\t<ul class=\"m-0 float-left\" style=\"list-style: none; margin:0; padding: 0\">\n\t\t\t\t\t\t<li><i class=\"badge badge-light\"></i>{{recette.nbFavoris}} ♥</li>\n\t\t\t\t\t\t<li><i class=\"badge badge-light\"></i> {{recette.nbVues}} 👁</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-outline-warning\" [routerLink]=\"['/updateRecipe', recette.idRecette]\">Modifier </button>\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-outline-danger\"\n\t\t\t\t\t\t(click)=\"deleteRecipe(recette.idRecette)\">Supprimer</button>\n\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-sm-3\"></div>\n\t</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { IngredientDetails, RecettesService} from '../../service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ingredients',\n  templateUrl: './ingredients.component.html',\n  styleUrls: ['./ingredients.component.css']\n})\nexport class IngredientsComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>\n  public ingredients: IngredientDetails[]\n\n  public ingredient: IngredientDetails = {\n    idIngredient: null,\n    nomIngredient: '',\n    qte: null,\n    libelleUnite: '',\n  }\n  \n  public filteredIngredient$: Observable<IngredientDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n  \n\n  constructor(private recettesService: RecettesService, private router: Router) { \n     //pour la recherche dynamique\n     this.ingredients$ = this.recettesService.getAllIngredients()\n     this.filter = new FormControl('')\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n     this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n       .pipe(map(([ingredients, filterString]) =>\n         ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllIngredients() {\n\n    this.ingredients$ = this.recettesService.getAllIngredients()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteIngredient(idIngredient: any) {\n    this.recettesService.deleteIngredient(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/ingredient'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateIngredient(ingredient: IngredientDetails){\n    this.recettesService.updateIngredient(ingredient).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addIngredient(){\n    this.recettesService.addIngredient(this.ingredient)\n    window.location.reload()\n  }\n\n}\n","<div id=\"titre\">\n  <h1>Ingrédients</h1>\n\n</div>\n\n\n\n\n<div class='flex-container'>\n\n  <div>\n    <form>\n      <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher un ingrédient\"\n        aria-label=\"Search\" [formControl]=\"filter\">\n    </form>\n    <table class=\"table col-md-12 mx-auto\" *ngFor=\"let ingredient of filteredIngredient$ | async\">\n\n      <tr>\n        <td>\n\n          \n            <form (submit)=\"updateIngredient(ingredient)\">\n              <div class=\"form-row align-items-center\">\n                <div class=\"col-auto\">\n          \n                  <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"nomIngredient\" value={{ingredient.nomIngredient}}\n                    [(ngModel)]=\"ingredient.nomIngredient\">\n                </div>\n                <div class=\"col-auto\">\n                  <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n          \n                </div>\n                <div class=\"col-auto\">\n                  <button id=\"btn\" class=\"btn btn-outline-danger \"\n                    (click)=\"deleteIngredient(ingredient.idIngredient)\">Supprimer</button>\n                </div>\n              </div>\n            </form>\n        \n        </td>\n      </tr>\n    </table>\n  </div>\n  <div>\n    <h6 id=\"question\"> Ajouter un nouvel ingredient </h6>\n    <form (submit)=\"addIngredient()\">\n      <input type=\"text\" class=\"form-control\" name=\"nomIngredient\" placeholder=\"nom ingredient\"\n        [(ngModel)]=\"ingredient.nomIngredient\">\n\n      <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n\n    </form>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, TokenPayload } from '../../service/';\nimport { Router } from '@angular/router';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-inscrire',\n  templateUrl: './inscrire.component.html',\n  styleUrls: ['./inscrire.component.css']\n})\nexport class InscrireComponent implements OnInit {\n\n  credentials: TokenPayload = {\n    pseudo: '',\n    email: '',\n    mdp: '',\n    mdp2: '',\n    admin: false,\n    abonneNews: false,\n    error: ''\n  }\n\n  userForm: FormGroup;\n\n  constructor(private auth: AuthentificationService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm()\n  }\n  \n  // We Init the form with the validators\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      mdp: ['', Validators.required],\n      mdp2: ['', Validators.required],\n      abonneNews: ['', Validators.required]\n\n    });\n  }\n\n  register() {\n\n    const formValue = this.userForm.value;\n\n    if (formValue.mdp != formValue.mdp2) {\n      alert(\"Les mots de passe ne sont pas identiques.\");\n      return;\n    }\n\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.email = formValue.email;\n    this.credentials.mdp = formValue.mdp;\n    this.credentials.mdp2 = formValue.mdp2;\n    this.credentials.abonneNews = formValue.abonneNews;\n\n    \n    this.auth.register(this.credentials).subscribe(\n      (res) => {\n        if (res.error == \"L'utilisateur existe déjà\") {\n          alert(\"L'utilisateur existe déjà\");\n          return;\n        } else {\n          this.auth.logout()\n          setTimeout(() => this.router.navigate(['login'])\n          , 5) \n        }\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n}\n","<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\n<script>\n$(document).ready(function(){\n\tvar from,to,subject,text;\n\t$(\"#send_email\").click(function(){\t\n        pseudo=$(\"#pseudo\").val();\t\n\t\tto=$(\"#to\").val();\t\t\n\t\t$(\"#message\").text(\"Sending E-mail...Please wait\");\n\t\t$.get(\"http://localhost:3000/server/sendEmail\",{to:to, pseudo:pseudo},function(data){\n\t\tif(data==\"sent\")\n\t\t{\n\t\t\t$(\"#message\").empty().html(\"<p>Email is been sent at \"+to+\" . Please check inbox !</p>\");\n\t\t}\n\n});\n\t});\n});\n</script>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form class=\"example-form\" [formGroup]=\"userForm\" (ngSubmit)=\"register()\" data-toggle=\"validator\" role=\"form\">\n                <!-- Submitting will start this method -->\n                <div class=\"form-group\">\n                    <label>Pseudo *</label>\n                    <input id=\"pseudo\" type=\"text\" class=\"form-control\" formControlName=\"pseudo\" placeholder=\"pseudo\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"control-label\">Email *</label>\n                    <input id=\"to\" type=\"email\" class=\"form-control\" formControlName=\"email\"\n                        placeholder=\"nom.prenom@exemple.com\" id=\"inputEmail\"\n                        required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                        data-error=\"Bruh, that email address is invalid\">\n                    <div class=\"help-block with-errors\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <label>Mot de passe *</label>\n                    <input type=\"password\" class=\"form-control\" formControlName=\"mdp\" placeholder=\"****\" required>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Confirmer le mot de passe *</label>\n                    <input type=\"password\" class=\"form-control\" formControlName=\"mdp2\" placeholder=\"****\" required>\n                </div>\n\n\n                <div class=\"form-group\">\n                    <label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label>\n                    <br>\n                    <input type=\"radio\" formControlName=\"abonneNews\" value=\"true\" checked> Oui\n                    <input type=\"radio\" formControlName=\"abonneNews\" value=\"false\"> Non\n                </div>\n                <button id=\"send_email\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" [disabled]=\"userForm.invalid\">Créer mon compte</button>\n                <br>\n                <p>* Champs obligatoires.</p>\n\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecettesService, IngredientDetails, AuthentificationService } from '../../service';\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-ma-liste-de-courses',\n  templateUrl: './ma-liste-de-courses.component.html',\n  styleUrls: ['./ma-liste-de-courses.component.css']\n})\nexport class MaListeDeCoursesComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>\n  public restIngredients$: Observable<IngredientDetails[]>\n\n  public filteredIngredient$: Observable<IngredientDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  public ingredientToDelete: IngredientShoppingList = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    idIngredient: null\n  }\n\n  public ingredientToAdd: IngredientShoppingList = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    idIngredient: null\n  }\n\n\n  constructor(private recetteService: RecettesService, private router: Router, private auth: AuthentificationService, private modalService: NgbModal) {\n    this.ingredients$ = this.recetteService.getListeCourses()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n    this.restIngredients$ = this.recetteService.getRestListeCourses()\n  }\n\n  ngOnInit(): void {\n  }\n\n  getListeCourses() {\n    this.ingredients$ = this.recetteService.getListeCourses()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteListeCourse(idIngredient: any) {\n    this.ingredientToDelete.idIngredient = idIngredient\n    this.recetteService.deleteListeCourse(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/shoppingList'], {\n          queryParams: { refresh: new Date().getTime() }\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    window.location.reload() /* rafraichit la page */\n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.ingredientToAdd.idIngredient = result.idIngredient\n        console.log(this.ingredientToAdd)\n        this.recetteService.addIngredientShoppingList(this.ingredientToAdd)\n        setTimeout(() => {\n          this.restIngredients$ = this.recetteService.getRestListeCourses()\n          this.ingredients$ = this.recetteService.getListeCourses()\n          this.filter = new FormControl('')\n          this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n          this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n            .pipe(map(([ingredients, filterString]) =>\n              ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n        }, 1000);\n      })\n  }\n}\n\nexport interface IngredientShoppingList {\n  pseudo: string\n  idIngredient: number\n}","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<section class=\"jumbotron text-center\">\n    <div class=\"container\">\n        <h1 class=\"jumbotron-heading\">Ma liste de courses</h1>\n    </div>\n</section>\n<div class=\"container mb-4\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"table-responsive\">\n                <table class=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\"> </th>\n                            <th scope=\"col\">Ingrédient</th>\n                           \n                            <th scope=\"col\"><form class=\"form-inline my-2 my-lg-0\">\n                                <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n                                <ng-template #content let-modal>\n                                    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                                    <div class=\"modal-header\">\n                                        <h4 class=\"modal-title\"></h4>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        <form>\n                                            <div class=\"form-row\">\n                                                <div class=\"col-md-6\">\n                                                    <label for=\"validationTooltip04\">Ingrédient</label>\n                                                    <select class=\"custom-select\" id=\"validationTooltip04\" #idIngredient=\"ngModel\"\n                                                        [(ngModel)]=\"ingredientToAdd.idIngredient\" [ngModelOptions]=\"{standalone: true}\"\n                                                        required>\n                                                        <option *ngFor=\"let ingredient of restIngredients$ | async\"\n                                                            [ngValue]=\"ingredient.idIngredient\">\n                                                            {{ingredient.nomIngredient}}</option>\n                                                    </select>\n                                                    <div class=\"invalid-tooltip\">\n                                                        Selectionnez un ingrédient.\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button tyoe=\"button\" class=\"btn btn-outline-dark\"\n                                            (click)=\"modal.close(ingredientToAdd)\">Ajouter</button>\n                                    </div>\n                                </ng-template>\n                                <div class=\"text-right\">\n                                    <button class=\"btn btn-outline-primary\" (click)=\"open(content)\">Ajouter un nouvel ingrédient</button>\n                                </div>\n                              </form>\n                            </th>\n\n                        </tr>\n                    </thead>\n                    <tbody *ngFor=\"let ingredient of filteredIngredient$ | async\">\n                        <tr>\n                            <td><img id=\"image\" src=\"../../assets/img/shoppingList.jpeg\" /> </td>\n                            <td> {{ingredient.nomIngredient}}</td> \n                           \n                            <td class=\"text-right\"> \n                              \n                                <button class=\"btn btn-sm btn-danger\" (click)=deleteListeCourse(ingredient.idIngredient)><i class=\"fa fa-trash\"></i></button>\n                             </td>\n                        </tr>\n                    </tbody>\n                </table>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mes-commentaires',\n  templateUrl: './mes-commentaires.component.html',\n  styleUrls: ['./mes-commentaires.component.css']\n})\nexport class MesCommentairesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Cette fonctionnalité n'est pas disponnible pour le moment </h1>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails } from '../../service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-mes-recettes',\n  templateUrl: './mes-recettes.component.html',\n  styleUrls: ['./mes-recettes.component.css']\n})\nexport class MesRecettesComponent implements OnInit {\n\n  public recettes$: Observable<RecipeDetails[]>\n  public categories: CategoryDetails[]\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recetteService: RecettesService, private router: Router) {\n    //pour la recherche dynamique\n    this.recettes$ = this.recetteService.getFavoris()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  } \n\n  ngOnInit(): void {\n    this.recetteService.getAllCategory().subscribe(\n      res => {\n        this.categories = res\n      }\n    )\n  }\n\n  getFavoris() {\n    this.recettes$ = this.recetteService.getFavoris()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  getFavorisByCategory(idCategorie: any){\n   \n    this.recettes$ = this.recetteService.getFavorisByCategory(idCategorie)\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n  //voir si on peut la récupérer au lieu de la recopier!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload()\n        })\n      }, err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 402) {\n          console.log(\"Cette recette n'existe pas !\")\n        }\n      }\n    })\n  }\n\n  \n  deleteFavoris(idRecette: any) {\n    this.recetteService.deleteFavoris(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/favorites'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n}\n","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<div id=\"titre\">\n    <h1>Mes recettes ♥</h1>  \n</div>\n\n<ul id=\"menu\" class=\"nav justify-content-center\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" routerLink=\"/favorites\" (click)=\"getFavoris()\">Tous mes favoris</a>\n  </li>\n  <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n    <a class=\"nav-link\" routerLink=\"/favorites\" (click)=\"getFavorisByCategory(categ.idCategorie)\">{{categ.libelleCategorie}}</a>\n  </li> \n  <li>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n    </form>\n</ul>\n\n\n\n<div class=\"container\">\n  <div class=\"row\">\n      <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of filteredRecipe$ | async\"> \n          <div class=\"card h-100\">\n              <img class=\"card-img-top img-fluid\" src=\"{{recette.lienImage}}\" alt=\"Photo de la recette\"> \n              <div class=\"card-body\">\n                  <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                  <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                  <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                  <button id=\"poubelle\" class=\"btn btn-sm btn-danger\" (click)=deleteFavoris(recette.idRecette)><i class=\"fa fa-trash\"></i></button> \n                \n              </div>\n              <div class=\"card-footer text-center bg-white\">\n                  <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                 \n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails, IngredientDetails, QuantiteDetails, UniteDetails } from '../../service';\nimport { HttpResponse, HttpClient } from '@angular/common/http'\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'; //la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\n\n@Component({\n  selector: 'app-modifier-recette',\n  templateUrl: './modifier-recette.component.html',\n  styleUrls: ['./modifier-recette.component.css']\n})\nexport class ModifierRecetteComponent implements OnInit {\n\n  public newIngredient: IngredientDetails = {\n    qte: null,\n    idRecette: parseInt(this.route.snapshot.paramMap.get('id')),\n    idIngredient: null,\n    idUnite: null\n  }\n\n  public recette: RecipeDetails = {\n    idRecette: null,\n    nomRecette: 'string',\n    datePublication: null,\n    nbFavoris: null,\n    nbVues: null,\n    idImage: null,\n    lienImage: null,\n    etapes: null\n  }\n  public ingredients: IngredientDetails\n  public unite: UniteDetails\n  public qtes: QuantiteDetails[]\n  public categories: CategoryDetails[]\n  \n  public image\n  public allIngredients: IngredientDetails[] //ingredients disponibles\n  public allUnites: UniteDetails[]\n  public allCategories: CategoryDetails[] //catégories disponibles\n\n \n\n  constructor(private recetteService: RecettesService, private router: Router, private route: ActivatedRoute, private formBuilder: FormBuilder, private modalService: NgbModal,\n    private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      recette => {\n        this.recette = recette\n      }\n    );\n\n    this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredient => {\n        this.ingredients = ingredient\n      }\n    );\n\n    this.recetteService.getImage(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      res => {\n        console.log(res)\n        this.recette.idImage = res[0].idImage\n        console.log(this.recette)\n        this.image = res\n      }\n    );\n\n    this.recetteService.getRestIngredients(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredients => {\n        this.allIngredients = ingredients\n      }\n    )\n\n    this.recetteService.getAllUnite().subscribe(\n      unites => {\n        this.allUnites = unites\n      }\n    )\n\n    this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      categories => {\n        this.allCategories = categories\n      }\n    )\n\n   \n    this.getCategory(parseInt(this.route.snapshot.paramMap.get('id')))\n\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.image = file;\n    }\n  }\n\n  onSubmit(){\n    const formData = new FormData();\n    formData.append('file', this.image);\n    console.log(this.recette)\n\n    this.http.post<any>(`/server/update/${this.recette.idImage}/${this.recette.idRecette}`, formData).subscribe(\n      (res) => {\n        window.location.reload()\n      }\n    );\n\n\n\n    \n  }\n\n  getCategory(id: any): any {\n    this.recetteService.getCategory(id).subscribe(\n      (categories: CategoryDetails[]) => {\n        this.categories = categories\n      }, err => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log(\"cette recette n'a pas de catégorie!\")\n          }\n        }\n      }\n    )\n    return this.categories\n  }\n\n\n\n  updateRecipeName(recette: RecipeDetails) {\n    this.recetteService. updateRecipeName(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n  updateSteps(recette: RecipeDetails) {\n    this.recetteService.updateSteps(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  updateRecipeIng(recette: RecipeDetails,ingredient: IngredientDetails) {\n    this.recetteService.updateRecipeIng(recette, ingredient).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  deleteIngredientRececipe(ingredient: IngredientDetails, recette: RecipeDetails) {\n    this.recetteService.deleteIngredientRececipe(ingredient, recette)\n      .subscribe(res => {\n        this.router.navigate(['updateRecipe/:id']).then(() => {\n          window.location.reload()\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  \n  }\n\n  deleteRecipeCategory(categorie: CategoryDetails,recette: RecipeDetails){\n  \n    this.recetteService.deleteRecipeCategory(categorie, recette)\n    .subscribe(res => {\n      setTimeout(() => {\n        this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n          categories => {\n            this.allCategories = categories\n          }\n        )\n        this.recetteService.getCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n          categories => {\n            this.categories = categories\n          }\n        )\n      }, 1000)\n    }, (err) => {\n      console.log(err);\n    }\n    );\n  }\n\n  addRecipeCategory(categorie: CategoryDetails,recette: RecipeDetails){\n    this.recetteService.addRecipeCategory(categorie,recette)\n    .subscribe(res => {\n      setTimeout(() => {\n        this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n          categories => {\n            this.allCategories = categories\n          }\n        )\n        this.recetteService.getCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n          categories => {\n            this.categories = categories\n          }\n        )\n      }, 1000)\n\n    }, (err) => {\n      console.log(err);\n    }\n    );\n  }\n\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.idIngredient = result.idIngredient\n        this.newIngredient.qte = result.qte\n        this.newIngredient.idUnite = result.idUnite\n        this.recetteService.addIngredientRecette(this.newIngredient)\n        setTimeout (() => {\n          this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n            ingredient => {\n              this.ingredients = ingredient\n            }\n          )\n       }, 1000);\n      })\n  }\n\n}\nexport class Ingredient {\n  idIngredient = '';\n  quantite = '';\n  idUnite = '';\n}\n\n","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<form class=\"form-inline\" id=\"titre\" (submit)=\"updateRecipeName(recette)\">\n\n\n    <div class=\"form-group mb-2\">\n        <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"nomRecette\" value=\"{{recette?.nomRecette}}\"\n            #nomRecette=\"ngModel\" [(ngModel)]=\"recette.nomRecette\">\n    </div>\n\n    <button id=\"btnTitre\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n\n</form>\n\n<form>\n    <div id=\"photo\">\n        <div>\n            <div style=\"text-align: center\">\n                <form>      \n                  <div>\n                    <input type=\"file\" name=\"image\" (change)=\"selectImage($event)\" />\n                  </div>\n                  <br>\n                  <div>\n                    <button type=\"submit\" class=\"btn btn-warning\" (click)=\"onSubmit()\">Modifier</button>\n                  </div>\n                </form>\n            </div>\n        </div>\n        <div *ngIf=\"image\">\n            <figure class=\"figure\" *ngFor=\"let img of image\">\n                <img src=\"{{img.lienImage}}\" class=\"rounded mx-auto d-block\" alt=\"Responsive image\" id=\"resp\">\n                <hr>\n                <!-- Button trigger modal -->\n                <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                    Modifier l'image de la recette\n                </button>\n    \n                <!-- Modal -->\n                <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n                    aria-hidden=\"true\">\n                    <div class=\"modal-dialog\" role=\"document\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modification de l'image de la recette</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                                <figcaption class=\"figure-caption\">\n                                    <!--bouton modifier photo à faire-->\n                                    <div style=\"text-align: center\">\n                                        <form>\n                                            <div>\n                                                <input type=\"file\" name=\"image\" (change)=\"selectImage($event)\" />\n                                            </div>\n                                        </form>\n                                    </div>\n                                </figcaption>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">Modifier</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr>\n            </figure>\n        </div>\n    </div>\n</form>\n\n<!--afficher la/ les catégorie-->\n<div id=\"conteneur1\">\n    <!--afficher la/ les catégorie-->\n    <div id=\"cat\">Catégories</div>\n    <!--catégories de la recette-->\n    <div *ngFor=\"let categ of categories\">\n        <button id=\"poubelle\" class=\"btn btn-sm btn-danger\" (click)=\"deleteRecipeCategory(categ,recette)\"><i\n                class=\"fa fa-trash\"></i></button>\n        {{categ.libelleCategorie}}\n    </div>\n    <!--catégorie dont la recette ne fait pas partie-->\n    <div *ngFor=\"let cat of allCategories\">\n        <button id=\"add\" class=\"btn btn-sm btn-success\" (click)=\"addRecipeCategory(cat,recette)\"><i\n                class=\"fa fa-plus-circle\"></i></button>\n\n        {{cat.libelleCategorie}}\n    </div>\n</div>\n\n\n<br>\n\n<!--ingrédients-->\n<div id=\"conteneur\">\n    <div class=\"element 1\">\n        <div id=\"card\" class=\"element 1 card border-secondary mb-3 col-lg-6 col-md-9 col-sm-6 p-3\">\n            <div class=\"card-header\">Ingrédients</div>\n            <ul>\n                <div class=\"card-body text-secondary\" id=\"ing\">\n                    <div *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n\n                        <form (submit)=\"updateRecipeIng(recette,ingredient)\">\n\n                            <h3>{{ingredient.nomIngredient}}</h3>\n\n\n\n                            <div class=\"form-row\">\n\n                                <div class=\"col-md-3 mb-3\">\n                                    <input id=\"qte\" type=\"text\" class=\"form-control\" name=\"qte\"\n                                        value=\"{{ingredient.qte}}\" #qte=\"ngModel\" [(ngModel)]=\"ingredient.qte\">\n                                </div>\n\n                                <div class=\"col-md-3 mb-3\">\n                                    <select class=\"custom-select\" id=\"unit\" #idUnite=\"ngModel\"\n                                        [(ngModel)]=\"ingredient.idUnite\" [ngModelOptions]=\"{standalone: true}\" required>\n                                        <option [ngValue]=\"ingredient.idUnite\" selected>{{ingredient.libelleUnite}}\n                                        </option>\n                                        <option *ngFor=\"let unite of allUnites\" [ngValue]=\"unite.idUnite\">\n                                            {{unite.libelleUnite}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n\n                            <button id=\"crayon\" class=\"btn btn-sm btn-warning\">Modifier</button>\n\n                            <button id=\"poubelle\" class=\"btn btn-sm btn-danger\"\n                                (click)=deleteIngredientRececipe(ingredient,recette)><i\n                                    class=\"fa fa-trash\"></i></button>\n\n\n\n\n                        </form>\n\n                    </div>\n                </div>\n                <ng-template #content let-modal>\n                    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\"></h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form>\n                            <div class=\"form-row\">\n                                <div class=\"col-md-3 mb-3\">\n                                    <label for=\"validationTooltip04\">Ingrédient</label>\n                                    <select class=\"custom-select\" id=\"validationTooltip04\" #idIngredient=\"ngModel\"\n                                        [(ngModel)]=\"newIngredient.idIngredient\" [ngModelOptions]=\"{standalone: true}\"\n                                        required>\n                                        <option *ngFor=\"let ingredient of allIngredients\"\n                                            [ngValue]=\"ingredient.idIngredient\">\n                                            {{ingredient.nomIngredient}}</option>\n                                    </select>\n                                    <div class=\"invalid-tooltip\">\n                                        Selectionnez un ingrédient.\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3 mb-3\">\n                                    <label for=\"validationTooltip05\">Quantité</label>\n                                    <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\" #qte=\"ngModel\"\n                                        [(ngModel)]=\"newIngredient.qte\" [ngModelOptions]=\"{standalone: true}\" required>\n                                    <div class=\"invalid-tooltip\">\n                                        Rentrez une quantité correcte.\n                                        <!--Vérifier que c'est pas négatif ou nulle-->\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3 mb-3\">\n                                    <label for=\"validationTooltip04\">Unité</label>\n                                    <select class=\"custom-select\" id=\"validationTooltip04\" #idUnite=\"ngModel\"\n                                        [(ngModel)]=\"newIngredient.idUnite\" [ngModelOptions]=\"{standalone: true}\"\n                                        required>\n                                        <option *ngFor=\"let unite of allUnites\" [ngValue]=\"unite.idUnite\">\n                                            {{unite.libelleUnite}}\n                                        </option>\n                                    </select>\n                                    <div class=\"invalid-tooltip\">\n                                        Selectionnez une unité.\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button tyoe=\"button\" class=\"btn btn-outline-dark\"\n                            (click)=\"modal.close(newIngredient)\">Ajouter</button>\n                    </div>\n                </ng-template>\n\n                <button class=\"btn btn-outline-primary\" (click)=\"open(content)\">Ajouter un nouvel ingrédient</button>\n\n\n                <!--on appelle le modal-->\n\n\n            </ul>\n        </div>\n\n\n    </div>\n    <div class=\"element 2 card border-secondary mb-3 col-lg-6 col-md-6 col-sm-6\">\n        <div class=\"card-header\">Préparation</div>\n        <div class=\"card-body text-secondary center\">\n\n            <form (submit)=\"updateSteps(recette)\">\n                <textarea class=\"form-control\" #etapes=\"ngModel\" rows=\"15em\" name=\"etapes\" [(ngModel)]=\"recette.etapes\"\n                    value=\" {{recette?.etapes}}\"></textarea>\n\n                <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n            </form>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserProfile } from '../../service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { __param } from 'tslib';\n@Component({\n  selector: 'app-mon-profile',\n  templateUrl: './mon-profile.component.html',\n  styleUrls: ['./mon-profile.component.css']\n})\nexport class MonProfileComponent implements OnInit {\n\n  credentials: UserProfile = {\n    pseudo: '',\n    email: '',\n    abonneNews: true,\n    success: ''\n  }\n\n  constructor(private auth: AuthentificationService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.auth.profile().subscribe(\n      user => {\n        this.credentials = user\n      },\n      err => {\n        console.error(err)\n      }\n    )\n    if(this.route.queryParams) {\n      this.route.queryParams\n      .subscribe(params => {\n        this.credentials.success = params.success;\n      })\n    }   \n  }\n\n  updateProfile(){\n    this.auth.updateProfile(this.credentials).subscribe((res: any) => {\n      this.credentials.success = res.success\n        this.router.navigateByUrl('/profile').then(() => {\n          setTimeout(window.location.reload.bind(window.location), 2500);\n        })\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n\n  deleteProfile(pseudo: any) {\n    this.auth.logout();\n    this.auth.deleteProfile(pseudo)\n      .subscribe(res => {\n          this.router.navigate(['/']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","\n<div class=\"container\">\n    <div class=\"jumbotron mt-5\">\n        <div class=\"col-sm-10 mx-auto\" ng-controller=\"formCtrl\" ng-app=\"myApp\">\n            <form (submit)=\"updateProfile()\">\n            <h1 class=\"text-center\">Mes informations personnelles</h1>\n\n            <div *ngIf=\"credentials.success\" class=\"alert alert-success\" role=\"alert\">\n                <label>{{credentials.success}}</label>\n            </div>\n\n            <table class=\"table col-md-8 mx-auto\">\n                <tr>\n                    <td>Pseudo</td>\n                    <td>{{credentials?.pseudo}}</td>\n                </tr>\n    \n               \n                \n                <tr>  \n                    <td><label>Email </label>\n                        <div *ngIf=\"email.errors && (email.invalid || email.touched)\">\n                        <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Entrez une adresse mail valide !</small>\n                    </div>\n                    </td>\n                    <td><input type=\"email\" #email=\"ngModel\" class=\"form-control\" name=\"email\" value= {{credentials?.email}}\n                        [class.is-invalid]=\"email.invalid && email.touched\" required\n                        pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" \n                        [(ngModel)]=\"credentials.email\"></td>\n                       \n                </tr>\n            \n                <tr>\n                    <td>Mot de passe</td>\n                    <td><button class=\"btn btn-outline-dark\" routerLink='/update-password'>Modifier</button></td> \n                </tr>\n                <tr>\n                    <td><label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label></td> \n                    <div *ngIf=\"credentials?.abonneNews\">\n                        <td>\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                checked [(ngModel)]=\"credentials.abonneNews\"> Oui\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                [(ngModel)]=\"credentials.abonneNews\"> Non\n                        </td>\n                    </div>\n                    <div *ngIf=\"!credentials?.abonneNews\">\n                        <td>\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                [(ngModel)]=\"credentials.abonneNews\"> Oui\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                checked [(ngModel)]=\"credentials.abonneNews\"> Non\n                        </td>\n                    </div>\n                    \n                    \n                </tr>\n            </table>\n            <button class=\"btn btn-outline-info btn-block col-sm-8 mx-auto\" *ngIf=\"!email.errors\" type=\"submit\">Enregistrer les modifications</button>\n            <button class=\"btn btn-outline-info btn-block col-sm-8 mx-auto\"  *ngIf=\"email.errors\" type=\"submit\" disabled>Enregistrer les modifications</button>\n            \n            <button class=\"btn btn-outline-danger btn-block col-sm-8 mx-auto\" (click)=\"deleteProfile(credentials?.pseudo)\" \n                type=\"submit\">Supprimer mon compte</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RecipeDetails, RecettesService, IngredientDetails, UniteDetails, QuantiteDetails, FavorisDetails, ListeCoursesDetails, AuthentificationService } from '../../service';\nimport { HttpResponse} from '@angular/common/http'\nimport {Router, ActivatedRoute} from '@angular/router'\nimport {Observable} from 'rxjs'\n\n@Component({\n  selector: 'app-recette',\n  templateUrl: './recette.component.html',\n  styleUrls: ['./recette.component.css']\n})\nexport class RecetteComponent implements OnInit {\n\n  public image\n  public recette: RecipeDetails\n  public ingredients: Observable<IngredientDetails[]>\n  public unite: UniteDetails\n  public qtes: QuantiteDetails[]\n  public newFavori: FavorisDetails = {\n    pseudo : this.auth.getUserDetails().pseudo,\n    idRecette : parseInt(this.route.snapshot.paramMap.get('id'))\n  }\n\n  public newListeCourses: ListeCoursesDetails = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    listIngredients : null\n  }\n\n  constructor(public auth: AuthentificationService ,private recetteService: RecettesService, private router: Router, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      recette => {\n        this.recette = recette\n      }\n    );\n\n    this.recetteService.getImage(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      res => {\n        console.log(res)\n        this.image = res\n      }\n    );\n\n    this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredient => {\n        this.ingredients = ingredient\n       \n      }\n    );\n  }\n\n  getUtiliserIngredientsByIdRecette(id: any) : QuantiteDetails[] {\n    this.recetteService.getUtiliserIngredientsByIdRecette(id).subscribe(\n      (qtes: QuantiteDetails[]) => {\n        this.qtes = qtes\n      }, err => {\n        if(err instanceof HttpResponse) {\n          if(err.status === 402) {\n            console.log(\"Il n'y a pas d'ingrédients !\")\n          }\n        }\n      }\n    )\n    return this.qtes\n  }\n\n  getUniteByIdUnite(id: any) : UniteDetails {\n    this.recetteService.getUniteById(id).subscribe(\n      (unite: UniteDetails) => {\n        this.unite = unite\n      }, err => {\n        if(err instanceof HttpResponse) {\n          if(err.status === 402) {\n            console.log(\"Il n'y a pas d'ingrédients !\")\n          }\n        }\n      }\n    )\n    return this.unite\n  }\n\n  addFavoris() {\n    this.recetteService.addFavoris(this.newFavori)\n    this.router.navigateByUrl('/favorites').then(() => {\n      window.location.reload()\n    })\n  }\n\n  addListeCourses(){\n    this.newListeCourses.listIngredients = this.ingredients\n    this.recetteService.addListeCourses(this.newListeCourses)\n    \n    this.router.navigate(['/shoppingList']).then(() => {\n      window.location.reload()\n    })\n\n   \n  }\n\n}\n","<div id=\"titre\">\n    <h2>{{recette?.nomRecette}}</h2>\n  \n    <figure class=\"figure\" *ngFor=\"let img of image\">\n        <img src=\"{{img.lienImage}}\" class=\"rounded mx-auto d-block\"  alt=\"Responsive image\" id=\"resp\">\n       <figcaption class=\"figure-caption\">\n            <span class=\"badge badge-light\" id=\"vew\">{{recette?.nbVues}} 👁</span>\n            \n            <span class=\"badge badge-light\" id=\"fav\">{{recette?.nbFavoris}} ♥</span>\n        </figcaption>\n      \n    </figure>\n</div>\n\n<div id=\"conteneur\">\n    <div class=\"element 1\">\n        <div id=\"card\" class=\"element 1 card border-secondary mb-3 col-lg-4 col-md-4 col-sm-4 p-3\">\n            <div class=\"card-header\">Ingrédients</div>\n            <ul> <!--liste points-->\n                <div class=\"card-body text-secondary\" id=\"ing\">\n                    <li *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n                        {{ingredient.qte}}\n                        {{ingredient.libelleUnite}}\n                        {{ingredient.nomIngredient}}\n                    </li>\n                </div>\n            </ul>\n        </div>\n        <!--bouttons visibles que si on est inscrit-->\n    <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-info\" (click)=\"addListeCourses()\">Ajouter les ingrédients à ma liste de course</button>\n    <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addFavoris()\">♥ Ajouter le recettes à mes favoris</button>\n    </div>\n    <div class=\"element 2 card border-secondary mb-3 col-lg-8 col-md-8 col-sm-8\">\n        <div class=\"card-header\">Préparation</div>\n        <div class=\"card-body text-secondary center\">\n            <pre style=\"line-height: 2.5\" class=\"card-text\"> {{recette?.etapes}}</pre>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith, tap } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails } from '../../service';\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recettes',\n  templateUrl: './recettes.component.html',\n  styleUrls: ['./recettes.component.css']\n})\nexport class RecettesComponent implements OnInit {\n\n  public recettes$: Observable<RecipeDetails[]>\n  public categories: CategoryDetails[]\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recetteService: RecettesService, private router: Router) {\n    //pour la recherche dynamique\n    this.recettes$ = this.recetteService.getAllRecipesAndIngredients()\n    this.recettes$.subscribe(data => {\n      console.log(data)\n    })\n\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) => {\n        return recipes.filter(recipe => \n          \n          recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1 ||\n          recipe.ingredients.forEach(element =>\n              element.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)\n          \n      )}))\n    \n    this.filteredRecipe$.subscribe(data => {\n      console.log(data)\n    })\n    this.filter$.subscribe(data => {\n      console.log(data)\n    })\n  }\n\n  //dans ngOnInit on récupère les données à afficher au lancement de la page\n  ngOnInit(): void {\n    this.getAllCategory()\n  }\n\n  getAllRecipes() {\n\n    this.recettes$ = this.recetteService.getAllRecipesAndIngredients()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe =>\n          recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  getImageByIdRecipe(id: number): any {\n    this.recetteService.getImage(id).subscribe(\n      res => {\n        console.log(res)\n        return res.lienImage\n      })\n  }\n\n  getAllCategory() {\n    this.recetteService.getAllCategory().subscribe(\n      (categorie: CategoryDetails[]) => {\n\n        this.categories = categorie\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Il n'y a pas de catégorie.\")\n\n\n          }\n\n        }\n      }\n    )\n  }\n\n  getRecipeByCategory(idCategorie: any) {\n\n    this.recettes$ = this.recetteService.getRecipeByCategory(idCategorie)\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload()\n        })\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 402) {\n            console.log(\"Cette recette n'existe pas !\")\n          }\n        }\n      })\n    console.log(\"cocuouc\")\n  }\n}\n","<ul id=\"menu\" class=\"nav justify-content-center\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link active\" routerLink=\"/allRecipes\" (click)=\"getAllRecipes()\">Toutes les recettes</a>\n    </li>\n    <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n      <a class=\"nav-link\" routerLink=\"/allRecipes\" (click)=\"getRecipeByCategory(categ.idCategorie)\">{{categ.libelleCategorie}}</a>\n    </li>\n    <li>\n      <form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n      </form>\n    </li>\n  </ul>\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of filteredRecipe$ | async\"> <!--Pour chaque recette on représente sa carte-->\n                <div class=\"card h-100\">\n                    <img class=\"card-img-top img-fluid\" src=\"{{recette.lienImage}}\" alt=\"Photo de la recette\"> \n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                        <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                        <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                    </div>\n                    <div class=\"card-footer text-center bg-white\">\n                        <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                        \n                </div>\n            </div>\n        </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-refresh',\n  templateUrl: './refresh.component.html',\n  styleUrls: ['./refresh.component.css']\n})\n\nexport class RefreshComponent implements OnInit {\n\n  constructor(private activatedRoute:ActivatedRoute,private route:Router) { }\n\n  ngOnInit() {\n    this.activatedRoute\n        .queryParams\n        .subscribe(params => {                \n          if(params.url){\n            this.route.navigate([params.url]);\n          }\n        });\n  }\n\n}\n","<p>refresh works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\n\n@Component({\n  selector: 'app-request-reset',\n  templateUrl: './request-reset.component.html',\n  styleUrls: ['./request-reset.component.css']\n})\n\nexport class RequestResetComponent implements OnInit {\n  RequestResetForm: FormGroup;\n  forbiddenEmails: any;\n  errorMessage: string;\n  successMessage: string;\n  IsvalidForm = true;\n\n  constructor(\n    private authService: AuthentificationService,\n    private router: Router,\n   ) {\n\n  }\n\n\n  ngOnInit() {\n\n    this.RequestResetForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email], this.forbiddenEmails),\n    });\n  }\n\n\n  RequestResetUser(form) {\n    console.log(form)\n    if (form.valid) {\n      this.IsvalidForm = true;\n      this.authService.requestReset(this.RequestResetForm.value).subscribe(\n        data => {\n          this.RequestResetForm.reset();\n          this.successMessage = \"Un email vous a été envoyé pour changer votre mot de passe.\";\n          setTimeout(() => {\n            this.successMessage = null;\n            this.router.navigate(['login']);\n          }, 3000);\n        },\n        err => {\n\n          if (err.error.message) {\n            this.errorMessage = err.error.message;\n          }\n        }\n      );\n    } else {\n      this.IsvalidForm = false;\n    }\n  }\n}\n","<div class=\"container-fluid form\">\n    <div class=\"row form-row \">\n        <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n            <div class=\"card my-5\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title text-center\">Mot de passe oublié</h5>\n                    <div>\n                        <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n                            <span>{{errorMessage}}</span>\n                        </div>\n                        <div id=\"successMsg\" *ngIf=\"successMessage\">\n                            <span>{{successMessage}}</span>\n                        </div>\n                        <form action=\"\" [formGroup]=\"RequestResetForm\" (ngSubmit)=\"RequestResetUser(RequestResetForm)\">\n                            <div class=\"form-group\">\n                                <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\" placeholder=\"exemple@exemple.fr\"\n                                    type=\"text\" id=\"email\" formControlName=\"email\" />\n                                <span *ngIf=\"!RequestResetForm.get('email').valid && !IsvalidForm\"\n                                    class=\"help-block\">Entrer une adresse valide!</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <div>\n                                    <button id=\"btn\" type=\"submit\" class=\" btn btn-primary\">Valider</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-response-reset',\n  templateUrl: './response-reset.component.html',\n  styleUrls: ['./response-reset.component.css']\n})\n\nexport class ResponseResetComponent implements OnInit {\n  ResponseResetForm: FormGroup;\n  errorMessage: string;\n  successMessage: string;\n  resetToken: null;\n  CurrentState: any;\n  IsResetFormValid = true;\n  constructor(\n    private authService: AuthentificationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder ) {\n\n    this.CurrentState = 'Wait';\n    this.route.params.subscribe(params => {\n      this.resetToken = params.token;\n      console.log(this.resetToken);\n      this.VerifyToken();\n    });\n  }\n\n\n  ngOnInit() {\n\n    this.Init();\n  }\n\n  VerifyToken() {\n    this.authService.ValidPasswordToken({ resettoken: this.resetToken }).subscribe(\n      data => {\n        this.CurrentState = 'Verified';\n      },\n      err => {\n        this.CurrentState = 'NotVerified';\n      }\n    );\n  }\n\n  Init() {\n    this.ResponseResetForm = this.fb.group(\n      {\n        resettoken: [this.resetToken],\n        newPassword: ['', [Validators.required, Validators.minLength(4)]],\n        confirmPassword: ['', [Validators.required, Validators.minLength(4)]]\n      }\n    );\n  }\n\n  Validate(passwordFormGroup: FormGroup) {\n    const new_password = passwordFormGroup.controls.newPassword.value;\n    const confirm_password = passwordFormGroup.controls.confirmPassword.value;\n\n    if (confirm_password.length <= 0) {\n      return null;\n    }\n\n    if (confirm_password !== new_password) {\n      return {\n        doesNotMatch: true\n      };\n    }\n\n    return null;\n  }\n\n\n  ResetPassword(form) {\n    console.log(form.get('confirmPassword'));\n    if (form.valid) {\n      this.IsResetFormValid = true;\n      this.authService.newPassword(this.ResponseResetForm.value).subscribe(\n        data => {\n          this.ResponseResetForm.reset();\n          this.successMessage = data.message;\n          setTimeout(() => {\n            this.successMessage = null;\n            this.router.navigate(['login']);\n          }, 3000);\n        },\n        err => {\n          if (err.error.message) {\n            this.errorMessage = err.error.message;\n          }\n        }\n      );\n    } else { this.IsResetFormValid = false; }\n  }\n}\n","<div class=\"container-fluid form\">\n    <div class=\"row\" *ngIf=\"CurrentState=='Wait'\">\n        <div class=\"col-md-12  close-form\">\n            <h2> Please Wait...</h2>\n        </div>\n    </div>\n    <div class=\"row\"\n        *ngIf=\"CurrentState=='NotVerified'\">\n        <div class=\"col-md-12\">\n            <h2> Invalid URL.</h2>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"CurrentState=='Verified'\">\n        <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n            <div class=\"card card-signin my-5\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title text-center\">Set New Password</h5>\n                    <div>\n                        <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n                            <span>{{errorMessage}}</span>\n                        </div>\n                        <div id=\"successMsg\" *ngIf=\"successMessage\">\n                            <span>{{successMessage}}</span>\n                        </div>\n                        <form action=\"\" [formGroup]=\"ResponseResetForm\" (ngSubmit)=\"ResetPassword(ResponseResetForm)\">\n                            <div class=\"form-group\">\n                                <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\" placeholder=\"Password\"\n                                    type=\"password\" id=\"password\" formControlName=\"newPassword\" />\n                                <span *ngIf=\"!ResponseResetForm.get('newPassword').valid && !IsResetFormValid\"\n                                    class=\"help-block\">Password is required with atleast 4 characters.</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\"\n                                    placeholder=\"Confirm Password\" type=\"password\" id=\"cpassword\"\n                                    formControlName=\"confirmPassword\" />\n                                <span *ngIf=\"!ResponseResetForm.get('confirmPassword').valid && !IsResetFormValid\"\n                                    class=\"help-block\">. </span>\n                                <span\n                                    *ngIf=\"ResponseResetForm.get('confirmPassword').valid && (ResponseResetForm.get('confirmPassword').value != ResponseResetForm.get('newPassword').value) && !IsResetFormValid\"\n                                    class=\"help-block\">Confirm Password does not match with password.</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <div>\n\n                                    <button type=\"submit\" class=\"  btn btn-primary\">Update\n                                        Password</button>\n\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, TokenPayload } from '../../service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-se-connecter',\n  templateUrl: './se-connecter.component.html',\n  styleUrls: ['./se-connecter.component.css']\n})\nexport class SeConnecterComponent implements OnInit {\n\n  loginForm: FormGroup\n\n  credentials: TokenPayload = {\n    pseudo: '',\n    email: '',\n    mdp: '',\n    mdp2: '',\n    admin: false,\n    abonneNews: true,\n    error: ''\n  }\n\n  constructor(private auth: AuthentificationService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm()\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      mdp: ['', Validators.required],\n    });\n  }\n\n  login() {\n\n    const formValue = this.loginForm.value;\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.mdp = formValue.mdp;\n\n    this.auth.login(this.credentials).subscribe(\n      (res) => {\n        if (res.error == \"Mot de passe et/ou pseudo incorrect\") {\n          alert(res.error);\n        } else {\n          if (this.auth.emailConfirmed()) {\n            this.router.navigateByUrl('/profile')\n            alert(\"Bienvenue sur Marine's Recipe\")\n          } else {\n            this.auth.logout()\n            window.location.reload()\n            alert(\"Vous devez vérifier votre adresse mail avant de pouvoir vous connecter ! :)\")\n          }\n          \n        }\n      },\n      err => {\n        console.error(err)\n      }\n    )\n  }\n\n  //Fonction appelée lors du clic\n  clicSurBouton(){\n    alert(\"Si vous n'avez pas reçu de mail pour la confirmation de votre adresse mail, veuillez consulter vos mails indésirables. Si le problème persiste, veuillez nous contacter via l'onglet Contact.\");\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                <h1 id=\"lien\" class=\"h3 mb-3 font-weight-normal\">Se connecter</h1>\n                <hr>\n                <div class=\"form-group\">\n                    <label>Pseudo</label>\n                    <input type=\"text\" class=\"form-control\" required name=\"pseudo\" placeholder=\"pseudo\" formControlName=\"pseudo\">\n                </div>\n                <hr>\n                <div class=\"form-group\">\n                    <label>Mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" required name=\"mdp\" placeholder=\"****\" formControlName=\"mdp\">\n                </div>\n                <hr>\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Se connecter</button>\n            </form>\n            <hr>\n            <div id=\"lien\">\n                <a href=\"request-reset-password\">Mot de passe oublié</a>\n            </div>\n            <hr>\n            <div id=\"lien\">\n                <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"clicSurBouton()\">Je n'ai pas reçu de mail pour la confirmation de mon adresse mail</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { UniteDetails, RecettesService} from '../../service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-unite',\n  templateUrl: './unite.component.html',\n  styleUrls: ['./unite.component.css']\n})\nexport class UniteComponent implements OnInit {\n\n  public unites$: Observable<UniteDetails[]>\n  public unites: UniteDetails[]\n\n  public unite: UniteDetails = {\n    idUnite: null,\n    libelleUnite: ''\n  }\n  \n  public filteredUnite$: Observable<UniteDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recettesService: RecettesService, private router: Router) { \n     //pour la recherche dynamique\n     this.unites$ = this.recettesService.getAllUnite()\n     this.filter = new FormControl('')\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n     this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n       .pipe(map(([unites, filterString]) =>\n         unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllUnite() {\n\n    this.unites$ = this.recettesService.getAllUnite()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n      .pipe(map(([unites, filterString]) =>\n        unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteUnite(idUnite: any) {\n    this.recettesService.deleteUnite(idUnite)\n      .subscribe(res => {\n        this.router.navigate(['/unite'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateUnite(unite: UniteDetails){\n    this.recettesService.updateUnite(unite).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addUnite(){\n    this.recettesService.addUnite(this.unite)\n    window.location.reload()\n  }\n \n\n}\n","<div id=\"header\">\n  <h1>Unités</h1>\n\n</div>\n\n\n<div class='flex-container'>\n\n  <div>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher une unité\" aria-label=\"Search\"\n        [formControl]=\"filter\">\n    </form>\n    <table class=\"table col-md-12 mx-auto\" *ngFor=\"let unite of filteredUnite$ | async\">\n\n      <tr>\n        <td>\n\n          <form (submit)=\"updateUnite(unite)\">\n            <div class=\"form-row align-items-center\">\n              <div class=\"col-auto\">\n                <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"libelleUnite\" value={{unite.libelleUnite}}\n                  [(ngModel)]=\"unite.libelleUnite\">\n              </div>\n              <div class=\"col-auto\">\n                <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n              </div>\n              <div class=\"col-auto\">\n                <button id=\"btn\" class=\"btn btn-outline-danger \" (click)=\"deleteUnite(unite.idUnite)\">Supprimer</button>\n              </div>\n            </div>\n          </form>\n        </td>\n      </tr>\n    </table>\n  </div>\n  <div>\n    <h6 id=\"question\"> Ajouter une nouvelle unité </h6>\n    <form (submit)=\"addUnite()\">\n      <input type=\"text\" class=\"form-control\" name=\"libelleUnite\" placeholder=\"libelle unité\"\n        [(ngModel)]=\"unite.libelleUnite\">\n\n      <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserMdp } from '../../service';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-update-password',\n  templateUrl: './update-password.component.html',\n  styleUrls: ['./update-password.component.css']\n})\nexport class UpdatePasswordComponent implements OnInit {\n\n  credentials: UserMdp = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    mdp: '',\n    newmdp: '',\n    mdp2: '',\n    error: '',\n    success: ''\n  }\n\n  public updatePasswordForm: FormGroup\n\n  constructor(private auth: AuthentificationService, private router: Router, private modalService: NgbModal, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initUpdatePasswordForm()\n  }\n\n  initUpdatePasswordForm() {\n    this.updatePasswordForm = this.formBuilder.group({\n      mdp: ['', Validators.required],\n      newmdp: ['', [Validators.required]],\n      mdp2: ['', Validators.required]\n    });\n  }\n\n  updatePassword() {\n\n    const formValue = this.updatePasswordForm.value;\n\n    this.credentials.mdp = formValue.mdp\n    this.credentials.newmdp = formValue.newmdp\n    this.credentials.mdp2 = formValue.mdp2\n\n    this.initUpdatePasswordForm()\n\n    if (formValue.newmdp != formValue.mdp2) {\n      alert(\"Les nouveaux mots de passe ne sont pas identiques.\");\n      return;\n    }\n\n    this.auth.updatePassword(this.credentials).subscribe((res: any) => {\n      if (res.error == \"Mot de passe incorrect!\") {\n        alert(\"L'ancien mot de passe n'est pas correct.\");\n        return;\n      } else {\n        this.router.navigateByUrl('/profile')\n      }\n    }, (err: any) => {\n      console.log(err);\n    }\n    );\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form [formGroup]=\"updatePasswordForm\" (ngSubmit)=\"updatePassword()\">\n                <h1 class=\"h3 mb-3 font-weight-normal\">Modifier mon mot de passe</h1>\n                \n                <div class=\"form-group\">\n                    <label>Ancien mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp\" placeholder=\"****\" formControlName=\"mdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Nouveau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"newmdp\" placeholder=\"****\" formControlName=\"newmdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Confirmer le nouveaau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp2\" placeholder=\"****\" formControlName=\"mdp2\">\n                </div>\n\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Enregistrer</button>\n            </form>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}