{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/service/admin-auth.service.ts","webpack:///src/app/service/auth-guard.service.ts","webpack:///src/app/service/authentification.service.ts","webpack:///src/app/service/index.ts","webpack:///src/app/service/recettes.service.ts","webpack:///src/app/views/accueil/accueil.component.ts","webpack:///src/app/views/accueil/accueil.component.html","webpack:///src/app/views/ajout-recette/ajout-recette.component.ts","webpack:///src/app/views/ajout-recette/ajout-recette.component.html","webpack:///src/app/views/apropos/apropos.component.ts","webpack:///src/app/views/apropos/apropos.component.html","webpack:///src/app/views/categories/categories.component.ts","webpack:///src/app/views/categories/categories.component.html","webpack:///src/app/views/contact/contact.component.ts","webpack:///src/app/views/contact/contact.component.html","webpack:///src/app/views/gerer-les-recettes/gerer-les-recettes.component.ts","webpack:///src/app/views/gerer-les-recettes/gerer-les-recettes.component.html","webpack:///src/app/views/ingredients/ingredients.component.ts","webpack:///src/app/views/ingredients/ingredients.component.html","webpack:///src/app/views/inscrire/inscrire.component.ts","webpack:///src/app/views/inscrire/inscrire.component.html","webpack:///src/app/views/ma-liste-de-courses/ma-liste-de-courses.component.ts","webpack:///src/app/views/ma-liste-de-courses/ma-liste-de-courses.component.html","webpack:///src/app/views/mes-commentaires/mes-commentaires.component.ts","webpack:///src/app/views/mes-commentaires/mes-commentaires.component.html","webpack:///src/app/views/mes-recettes/mes-recettes.component.ts","webpack:///src/app/views/mes-recettes/mes-recettes.component.html","webpack:///src/app/views/modifier-recette/modifier-recette.component.ts","webpack:///src/app/views/modifier-recette/modifier-recette.component.html","webpack:///src/app/views/mon-profile/mon-profile.component.ts","webpack:///src/app/views/mon-profile/mon-profile.component.html","webpack:///src/app/views/recette/recette.component.ts","webpack:///src/app/views/recette/recette.component.html","webpack:///src/app/views/recettes/recettes.component.ts","webpack:///src/app/views/recettes/recettes.component.html","webpack:///src/app/views/se-connecter/se-connecter.component.ts","webpack:///src/app/views/se-connecter/se-connecter.component.html","webpack:///src/app/views/unite/unite.component.ts","webpack:///src/app/views/unite/unite.component.html","webpack:///src/app/views/update-password/update-password.component.ts","webpack:///src/app/views/update-password/update-password.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","auth","AppComponent","selector","templateUrl","styleUrls","path","component","canActivate","AppModule","declarations","providers","bootstrap","AdminAuthService","router","isAdmin","navigateByUrl","AuthGuardService","isLoggedIn","AuthentificationService","http","token","localStorage","setItem","getItem","getToken","payload","split","window","atob","JSON","parse","user","getUserDetails","exp","Date","now","admin","base","post","request","pipe","data","saveToken","get","headers","Authorization","removeItem","operation","result","error","console","put","pseudo","url","delete","_","log","handleError","RecettesService","forEach","element","idRecette","subscribe","lienImage","utiliserIngredients","idIngredient","idUnite","idCategorie","recette","categorie","ingredient","res","recipe","unite","newFavori","newListeCourses","newIngredient","file","AccueilComponent","recetteService","getLatestReceipes","getMostPopularRecipes","latestRecipes","err","status","mostPopularRecipes","updateNbView","navigate","location","reload","AjoutRecetteComponent","formBuilder","modalService","nomRecette","categories","ingredients","idImage","etapes","nomIngredient","dropdownList","selectedItems","fileToUpload","getAllIngredients","getAllUnite","unites","getAllCategory","dropdownSettings","singleSelection","idField","textField","enableCheckAll","itemsShowLimit","allowSearchFilter","searchPlaceholderText","initRecipeForm","createIngredientsForm","addIngredient","event","target","files","length","images","formData","FormData","append","reader","FileReader","dataURL","onload","fileMetaData","originalname","name","type","buffer","addImage","formValue","recipeForm","value","ingredientFormValue","ingredientForm","alert","qte","createRecipe","addIngredientsAndCategoryToNewRecipe","group","required","array","createIngredientForm","min","push","content","open","ariaLabelledBy","setTimeout","selectImage","onSubmit","onFileChange","AProposComponent","CategoriesComponent","recettesService","libelleCategorie","deleteCategory","queryParams","refresh","getTime","updateCategory","addCategory","ContactComponent","GererLesRecettesComponent","recettes$","getAllRecipes","filter","filter$","valueChanges","filteredRecipe$","recipes","filterString","toLowerCase","indexOf","deleteRecipe","IngredientsComponent","libelleUnite","ingredients$","filteredIngredient$","deleteIngredient","updateIngredient","InscrireComponent","credentials","email","mdp","mdp2","abonneNews","initForm","userForm","register","MaListeDeCoursesComponent","ingredientToDelete","getListeCourses","deleteListeCourse","MesCommentairesComponent","MesRecettesComponent","getFavoris","getFavorisByCategory","deleteFavoris","ModifierRecetteComponent","route","parseInt","snapshot","paramMap","datePublication","nbFavoris","nbVues","getRecipeById","getIngredientsByIdRecette","getImage","image","getRestIngredients","allIngredients","allUnites","getRestCategory","allCategories","getCategory","updateRecipeName","updateSteps","updateRecipeIng","deleteIngredientRececipe","deleteRecipeCategory","addRecipeCategory","addIngredientRecette","Ingredient","quantite","MonProfileComponent","success","profile","params","updateProfile","bind","logout","deleteProfile","RecetteComponent","listIngredients","getUtiliserIngredientsByIdRecette","qtes","getUniteById","addFavoris","addListeCourses","RecettesComponent","getRecipeByCategory","SeConnecterComponent","loginForm","login","UniteComponent","unites$","filteredUnite$","deleteUnite","updateUnite","addUnite","UpdatePasswordComponent","newmdp","initUpdatePasswordForm","updatePasswordForm","updatePassword","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthentificationService } from './service/authentification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(public auth: AuthentificationService){ }\n}\n","<script>\n  //pour que la navbar responsive se referme lorsqu'on sélectionne un ongle\n  $(document).on('click', '.navbar-collapse.show', function (e) {\n    $(this).collapse('hide');\n  });\n</script>\n\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" role=\"navigation\">\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\"\n    aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toogle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n\n  </button>\n  <img src=\"../assets/img/logo.jpeg\" class=\"rounded float-left\" alt=\"logo\" id=\"logo\">\n  <div class=\"collapse navbar-collapse justify-content-md-center\" id=\"navbarNavDropdown\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/\">Accueil </a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/allRecipes\">Recettes</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/aboutMe\">A propos</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/contact\">Contact</a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/login\">Se connecter</a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link\" routerLink=\"/register\">S'inscrire</a>\n      </li>\n\n      <li class=\"nav-item dropdown\" *ngIf=\"auth.isLoggedIn()\">\n        <a data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"nav-link dropdown-toggle\"\n          id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          {{auth.getUserDetails()?.pseudo}}\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n          <a class=\"dropdown-item\" routerLink=\"/profile\">Mon profil</a>\n          <a class=\"dropdown-item\" routerLink=\"/favorites\">Mes recettes ♥</a>\n          <a class=\"dropdown-item\" routerLink=\"/shoppingList\">Ma liste de course</a>\n          <a class=\"dropdown-item\" routerLink=\"/comment\">Mes commentaires</a>\n          <a class=\"dropdown-item\" *ngIf=\"auth.isAdmin()\" routerLink=\"/handleRecipes\">Gerer les recettes</a>\n          <a class=\"dropdown-item\" routerLink=\"\" (click)=\"auth.logout()\">Deconnexion</a>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n\n<!--footer-->\n<!--logo insta-->\n<link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" type='text/css'>\n\n<footer>\n\n  <div class=\"dark-line\">\n  <h2> Marine's recipes |</h2>\n  <p>\"Eat good, feel good\" ||</p>\n  <div class=\"social\">\n  <a href=\"https://www.instagram.com/marineteroitin/?hl=fr\"><i class=\"fa fa-lg fa-instagram\"></i></a>\n  </div>\n  <span class=\"copyright\"><a>© Proudly created by Marine Téroitin • Tous droits réservés (textes et images) </a></span>\n  </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { RouterModule, Routes } from '@angular/router'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { InscrireComponent } from './views/inscrire/inscrire.component'\nimport { SeConnecterComponent } from './views/se-connecter/se-connecter.component'\nimport { AccueilComponent } from './views/accueil/accueil.component'\nimport { AuthentificationService, AuthGuardService, AdminAuthService, RecettesService } from './service'\nimport { ContactComponent } from './views/contact/contact.component';\nimport { GererLesRecettesComponent } from './views/gerer-les-recettes/gerer-les-recettes.component';\nimport { MaListeDeCoursesComponent } from './views/ma-liste-de-courses/ma-liste-de-courses.component';\nimport { MesCommentairesComponent } from './views/mes-commentaires/mes-commentaires.component';\nimport { MesRecettesComponent } from './views/mes-recettes/mes-recettes.component';\nimport { MonProfileComponent } from './views/mon-profile/mon-profile.component';\nimport { RecettesComponent } from './views/recettes/recettes.component';\nimport { UpdatePasswordComponent } from './views/update-password/update-password.component';\nimport { AProposComponent } from './views/apropos/apropos.component';\nimport { RecetteComponent } from './views/recette/recette.component';\nimport { IngredientsComponent } from './views/ingredients/ingredients.component';\nimport { CategoriesComponent } from './views/categories/categories.component';\nimport { UniteComponent } from './views/unite/unite.component';\nimport { AjoutRecetteComponent } from './views/ajout-recette/ajout-recette.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { ModifierRecetteComponent } from './views/modifier-recette/modifier-recette.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n\nconst routes: Routes = [\n  { path: '', component: AccueilComponent },\n  { path: 'login', component: SeConnecterComponent },\n  { path: 'register', component: InscrireComponent },\n  { path: 'profile', component: MonProfileComponent, canActivate: [AuthGuardService] },\n  { path: 'update-password', component: UpdatePasswordComponent, canActivate: [AuthGuardService] },\n  { path: 'aboutMe', component: AProposComponent },\n  { path: 'allRecipes', component: RecettesComponent },\n  { path: 'recipe/:id', component: RecetteComponent },\n  { path: 'handleRecipes', component: GererLesRecettesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'category', component: CategoriesComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'ingredient', component: IngredientsComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'add-recipe', component: AjoutRecetteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'unite', component: UniteComponent, canActivate: [AdminAuthService, AuthGuardService]  },\n  { path: 'contact', component: ContactComponent},\n  { path: 'shoppingList', component: MaListeDeCoursesComponent, canActivate: [AuthGuardService] },\n  { path: 'comment', component: MesCommentairesComponent, canActivate: [AuthGuardService] },\n  { path: 'favorites', component: MesRecettesComponent, canActivate: [AuthGuardService] },\n  { path: 'updateRecipe/:id', component: ModifierRecetteComponent, canActivate: [AdminAuthService, AuthGuardService] }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccueilComponent,\n    MonProfileComponent,\n    InscrireComponent,\n    SeConnecterComponent,\n    ContactComponent,\n    GererLesRecettesComponent,\n    MaListeDeCoursesComponent,\n    MesCommentairesComponent,\n    MesRecettesComponent,\n    RecettesComponent,\n    UpdatePasswordComponent,\n    RecetteComponent,\n    IngredientsComponent,\n    CategoriesComponent,\n    UniteComponent,\n    AjoutRecetteComponent,\n    ModifierRecetteComponent\n  ],\n  imports: [\n    NgbModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [AuthGuardService, AuthentificationService, RecettesService, AdminAuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core'\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthentificationService } from './authentification.service'\n\n@Injectable()\nexport class AdminAuthService implements CanActivate {\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate () {\n        if (!this.auth.isAdmin()) {\n            this.router.navigateByUrl('/')\n            return false\n        }\n        return true\n    }\n}","import { Injectable } from '@angular/core'\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthentificationService } from './authentification.service'\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private auth: AuthentificationService, private router: Router) { }\n\n    canActivate () {\n        if (!this.auth.isLoggedIn()) {\n            this.router.navigateByUrl('/')\n            return false\n        }\n        return true\n    }\n}","import {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http'\nimport {Observable, of} from 'rxjs'\nimport { map, tap, catchError } from 'rxjs/operators'\nimport { Router } from '@angular/router'\n\n//login\nexport interface UserDetails {\n    pseudo: string\n    email: string\n    mdp: string\n    admin: boolean\n    abonneNews: boolean\n    exp: number\n    iat: number\n}\n\ninterface TokenResponse {\n    token: string\n    error: string\n}\n\ninterface Response {\n    error: string\n}\n\n//inscription\nexport interface TokenPayload {\n    pseudo: string\n    email: string\n    mdp: string\n    mdp2: string\n    admin: boolean\n    abonneNews: boolean\n    error: string\n}\n\n//changement mdp\nexport interface UserMdp{\n    pseudo: string\n    mdp: string\n    newmdp: string\n    mdp2: string\n    error: string\n    success: string\n}\n\n//modif profile\nexport interface UserProfile{\n    pseudo: string\n    email: string\n    abonneNews: boolean\n    success: string\n}\n\n@Injectable()\nexport class AuthentificationService {\n    private token: string\n    private error: string\n\n    constructor(private http: HttpClient, private router: Router) {\n\n    }\n\n    private saveToken (token: string): void {\n        localStorage.setItem('userToken', token)\n        this.token = token\n    }\n\n    private getToken (): string {\n        if (!this.token) {\n            this.token = localStorage.getItem('userToken')\n        }\n        return this.token\n    }\n\n    public getUserDetails(): UserDetails {\n        const token = this.getToken()\n        let payload\n        if(token) {\n            payload = token.split('.')[1]\n            payload = window.atob(payload)\n            return JSON.parse(payload)\n        } else {\n            return null\n        }\n    }\n\n    public isLoggedIn(): boolean {\n        const user = this.getUserDetails()\n        if (user) {\n            return user.exp > Date.now() / 1000\n        } else {\n            return false\n        }\n    }\n\n    public isAdmin(): boolean {\n        const user = this.getUserDetails()\n        if(user){\n            return user.admin \n        }else {\n            return false\n        }\n    }\n\n    public register(user: TokenPayload) : Observable<any> {\n        const base = this.http.post('/server/register', user)\n\n        const request = base.pipe(\n            map((data: TokenResponse) => {\n                if (data.token) {\n                    this.saveToken(data.token)\n                }\n                return data\n            })\n        )\n        return request\n    }\n\n    public login(user: TokenPayload) : Observable<any> {\n        const base = this.http.post('/server/login', user)\n        const request = base.pipe(\n            map((data: TokenResponse) => { //map permet de récupérer des données\n                if (data.token) {\n                    this.saveToken(data.token)\n                }\n                return data\n            })\n        )\n        return request\n    }\n\n    public profile() : Observable<any> {\n        return this.http.get('/server/profile', {\n            headers: { Authorization: `${this.getToken()}` }\n        })\n    }\n\n    public logout(): void {\n        this.token = ''\n        window.localStorage.removeItem('userToken')\n        this.router.navigateByUrl('/')\n    }\n\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n    \n          // TODO: send the error to remote logging infrastructure\n          console.error(error); // log to console instead\n    \n          // Let the app keep running by returning an empty result.\n          return of(result as T);\n        };\n      }\n\n    public updatePassword(user: UserMdp) : Observable<any> {\n        const base = this.http.put(`/server/update-password/${user.pseudo}`, user)\n\n        return base.pipe(\n            map((data: Response) => {\n                return data\n            })\n          );\n    }\n\n    public deleteProfile(pseudo: string): Observable<any> {\n        const url = `/server/delete-profile/${pseudo}`;\n        return this.http.delete<any>(url).pipe(\n          tap(_ => console.log(`deleted ${pseudo}`)),\n          catchError(this.handleError<any>('deleteProfile'))\n        );\n      }\n\n    public updateProfile(user: UserProfile) : Observable<any> {\n        const base = this.http.put(`/server/mon-profile/${user.pseudo}`, user)\n        \n        return base.pipe(\n            tap(_ => console.log(`updated ${user.pseudo}`)),\n            catchError(this.handleError<any>('updateProfile'))\n          );\n    }\n    \n   \n}\n","export * from './admin-auth.service'\nexport * from './auth-guard.service'\nexport * from './authentification.service'\nexport * from './recettes.service'\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { map, tap } from 'rxjs/operators'\nimport { CreateRecipe } from '../views/ajout-recette/ajout-recette.component'\nimport { AuthentificationService } from './authentification.service'\nimport { element } from 'protractor'\n\n\n\nexport interface RecipeDetails {\n    idRecette: number\n    nomRecette: string\n    datePublication: Date\n    nbFavoris: number\n    nbVues: number\n    etapes: Text\n    lienImage?: any\n    idImage?: number\n}\n\nexport interface IngredientDetails {\n    idRecette?: number\n    idIngredient?: string\n    nomIngredient?: string\n    qte?: number\n    libelleUnite?: string\n    idUnite?: number\n}\n\nexport interface UniteDetails {\n    idUnite: number\n    libelleUnite: string\n}\n\nexport interface QuantiteDetails {\n    qte: any,\n    idRecette: number\n    idIngredient: number,\n    idUnite: number\n}\n\nexport interface CategoryDetails {\n    idCategorie: number\n    libelleCategorie: string\n}\n\nexport interface FavorisDetails {\n    pseudo: string\n    idRecette: number\n}\n\nexport interface ListeCoursesDetails {\n    pseudo: string\n    listIngredients: any\n}\n\nexport interface ImageDetails {\n    idImage: number\n    lienImage: string\n}\n\n@Injectable()\nexport class RecettesService {\n\n    constructor(private http: HttpClient, private auth: AuthentificationService) { }\n\n    public getAllRecipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/allRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            console.log(data)\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            \n            return data\n        }))\n    }\n\n    public getRecipeById(id: any): Observable<any> {\n        return this.http.get<any>('/server/recipe/' + id)\n    }\n\n    public getIngredientsByIdRecette(id: any): any {\n        return this.http.get<any>('/server/recipe/' + id + '/ingredients')\n    }\n\n    public getUtiliserIngredientsByIdRecette(id: any): Observable<QuantiteDetails[]> {\n        const base = this.http.get('/server/recipe/' + id + '/utiliserIngredients')\n        const utiliserIngredients = base.pipe(map((data: QuantiteDetails[]) => {\n            return data\n        }))\n        return utiliserIngredients\n    }\n\n    public getIngredientById(idIngredient: any): Observable<IngredientDetails> {\n        const base = this.http.get('/server/recipe/ingredient/' + idIngredient)\n        return base.pipe(map((data: IngredientDetails) => {\n            return data\n        }))\n    }\n\n    public getUniteById(idUnite: any): Observable<UniteDetails> {\n        const base = this.http.get('/server/recipe/unite/' + idUnite)\n        return base.pipe(map((data: UniteDetails) => {\n            return data\n        }))\n    }\n\n    public getLatestReceipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/latestReceipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            console.log(data)\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public getMostPopularRecipes(): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/mostPopularRecipes`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            console.log(data)\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public deleteRecipe(id: any): Observable<any> {\n        const url = `/server/delete-recipe/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public getRecipeByCategory(idCategorie: any): Observable<RecipeDetails[]> {\n        const base = this.http.get(`/server/recipe/category/${idCategorie}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public getAllCategory(): any {\n        return this.http.get<any>(`/server/category`)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n    }\n\n    \n\n    public updateNbView(recette: RecipeDetails): Observable<any> {\n        return this.http.put<any>(`/server/recipe/update-nbView/${recette.idRecette}`, recette)\n    }\n    \n    public deleteCategory(id: any): Observable<any> {\n        const url = `/server/category/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateCategory(categorie: CategoryDetails): Observable<any> {\n        return this.http.put(`/server/category/update`, categorie)\n            .pipe(map((data: CategoryDetails[]) => {\n                return data\n            }))\n\n\n    }\n\n    public updateRecipeIng(recette: RecipeDetails, ingredient: IngredientDetails):Observable<any> {\n        return this.http.put(`/server/recipe/${recette.idRecette}/ingredient/update`, ingredient)\n            .pipe(map((res) => {\n                return res\n            }))\n\n\n    }\n\n    public addCategory(categorie: CategoryDetails): any {\n\n        this.http.post('/server/category/add', categorie).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public getAllIngredients(): any {\n        return this.http.get<any>(`/server/ingredient`)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public getRestIngredients(idRecette: any): any {\n        return this.http.get<any>(`/server/recipe/${idRecette}/ingredient/rest`)\n        .pipe(map((data: IngredientDetails[]) => {\n            return data\n        }))\n    }\n\n    public getRestCategory(idRecette:any): any {\n        return this.http.get<any>(`/server/recipe/${idRecette}/category/rest`)\n        .pipe(map((data: CategoryDetails[]) => {\n            return data\n        }))\n    }\n\n    public deleteIngredient(id: any): Observable<any> {\n        const url = `/server/ingredient/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateIngredient(ingredient: IngredientDetails): Observable<any> {\n        return this.http.put(`/server/ingredient/update`, ingredient)\n            .pipe(map((data: IngredientDetails[]) => {\n                return data\n            }))\n    }\n\n    public addIngredient(ingredient: any): any {\n        this.http.post('/server/ingredient/add', ingredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public createRecipe(recipe: CreateRecipe): Observable<any> {\n        const res = this.http.post('/server/add-recipe', recipe)\n        return res.pipe(map((res) => {\n            return res\n        }))\n    }\n\n    public addIngredientsAndCategoryToNewRecipe(recipe: CreateRecipe): Observable<any> {\n        const res = this.http.post('/server/recipe/addIngredientAndCategorie', recipe)\n        return res.pipe(map((res) => {\n            return res\n        }))\n    }\n\n    public addRecipeCategory(categorie : CategoryDetails, recette: RecipeDetails): Observable<any>{\n        return this.http.post(`/server/recipe/${recette.idRecette}/category/add`,categorie)\n        .pipe(map((res)=> {\n            return res\n        }))\n    }\n\n    public getAllUnite(): any {\n        return this.http.get<any>('/server/unite')\n            .pipe(map((data: UniteDetails[]) => {\n                return data\n            }))\n    }\n\n    public deleteUnite(id: any): Observable<any> {\n        const url = `/server/unite/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public updateUnite(unite: UniteDetails): Observable<any> {\n        return this.http.put(`/server/unite/update`, unite)\n            .pipe(map((data: UniteDetails[]) => {\n                return data\n            }))\n    }\n\n    public addUnite(unite: any): any {\n        this.http.post('/server/unite/add', unite).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n\n    public addFavoris(newFavori: FavorisDetails): any {\n        return this.http.post(`/server/favorites/add`, newFavori).subscribe(res => {\n            {\n                return res\n            }\n\n        })\n    }\n\n  \n    public addListeCourses(newListeCourses: ListeCoursesDetails) {\n        this.http.post(`/server/shoppingList/add`, newListeCourses).subscribe(res => {\n            {\n                return res\n            }\n\n        })\n    }\n    \n\n    public getFavoris(): Observable<RecipeDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/recipe/favorites/${pseudo}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public getFavorisByCategory(idCategorie: number): Observable<RecipeDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/recipe/favorites/${pseudo}/${idCategorie}`)\n        return base.pipe(map((data: RecipeDetails[]) => {\n            data.forEach(element => {\n                console.log(element)\n                console.log(element.idRecette)\n                this.http.get(`/server/image/${element.idRecette}`).subscribe((data: any) => {\n                    element.lienImage = data[0]?.lienImage\n                    console.log(data[0])\n                })\n                console.log(element)\n            });\n            return data\n        }))\n    }\n\n    public deleteFavoris(id: any): Observable<any> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const url = `/server/favorites/${pseudo}/delete/${id}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    \n    public getListeCourses(): Observable<IngredientDetails[]> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const base = this.http.get(`/server/shoppingList/${pseudo}`);\n        return base.pipe(map((data: IngredientDetails[]) => {\n            return data\n        }))\n\n    }\n\n    public deleteListeCourse(id: any): Observable<any> {\n        const pseudo = this.auth.getUserDetails().pseudo;\n        const url = `/server/shoppingList/delete/${id}/${pseudo}`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${id}`)),\n        );\n    }\n\n    public getCategory(id:any): any {\n        return this.http.get<any>(`/server/recipe/${id}/category`)\n            .pipe(map((data: any) => {\n                return data\n            }))\n    }\n\n    public  updateRecipeName(recette: RecipeDetails): Observable<any> {\n       \n        return this.http.put(`/server/recipe/name/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public updateSteps(recette: RecipeDetails): Observable<any> {\n   \n        return this.http.put(`/server/recipe/step/update`, recette)\n            .pipe(map((data: RecipeDetails) => {\n                return data\n            }))\n\n\n    }\n\n    public deleteIngredientRececipe(ingredient: IngredientDetails, recette: RecipeDetails): Observable<any> {\n        const url = `/server/recipe/${recette.idRecette}/ingredient/${ingredient.idIngredient}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${ingredient.idIngredient} from recipe ${recette.idRecette}`)),\n        );\n    }\n\n    public addIngredientRecette(newIngredient: IngredientDetails): any {\n        this.http.post(`/server/recipe/${newIngredient.idRecette}/add/ingredient/${newIngredient.idIngredient}`,newIngredient).subscribe(res => {\n            {\n                return res\n            }\n        })\n\n    }\n\n    public deleteRecipeCategory(categorie: CategoryDetails, recette: RecipeDetails): Observable<any> {\n        const url = `/server/recipe/${recette.idRecette}/category/${categorie.idCategorie}/delete`;\n        return this.http.delete<any>(url).pipe(\n            tap(_ => console.log(`deleted ${categorie.idCategorie} from recipe ${recette.idRecette}`)),\n        );\n    }\n\n    public addImage(file: any) : Observable<any> {\n        console.log(file)\n        return this.http.post(`/server/uploads`, file).pipe(map((data: any) => {\n            return data\n        }))\n    }\n\n    public getImage(id: number) : any {\n        return this.http.get(`/server/image/${id}`).pipe(map((data: any) => {\n            console.log(data[0])\n            return data\n        }))\n    }\n\n}    ","import { Component, OnInit } from '@angular/core';\nimport { RecipeDetails, RecettesService } from '../../service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.css']\n})\nexport class AccueilComponent implements OnInit {\n\n  public latestRecipes: RecipeDetails[]\n  public mostPopularRecipes: RecipeDetails[]\n\n  constructor(private recetteService: RecettesService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getLatestReceipes()\n    this.getMostPopularRecipes()\n  }\n\n  getLatestReceipes() {\n\n    this.recetteService.getLatestReceipes().subscribe(\n      (latestRecipes: RecipeDetails[]) => {\n        this.latestRecipes = latestRecipes\n    },err => {\n      if(err instanceof HttpErrorResponse){\n        if(err.status === 402) {\n          console.log(\"Il n'y a pas encore de recettes.\")\n        }\n      }\n    })\n  }\n\n  getMostPopularRecipes() {\n\n    this.recetteService.getMostPopularRecipes().subscribe(\n      (mostPopularRecipes: RecipeDetails[]) => {\n        this.mostPopularRecipes = mostPopularRecipes\n    },err => {\n      if(err instanceof HttpErrorResponse){\n        if(err.status === 402) {\n          console.log(\"Il n'y a pas encore de recettes.\")\n        }\n      }\n    })\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload()\n        })\n      }, err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 402) {\n          console.log(\"Cette recette n'existe pas !\")\n        }\n      }\n    })\n  }\n\n}\n","<div class=\"media\">\n    <img src=\"../../assets/img/AroundMyWorld.jpeg\" class=\"img-fluid\" alt=\"Image Around my world, eat good feel good\">\n</div>\n\n<h5>Les plus vues</h5>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of this.mostPopularRecipes\"> <!--Pour chaque recette on représente sa carte-->\n            <div class=\"card h-100\">\n                <img class=\"card-img-top img-fluid\" src=\"{{recette.lienImage}}\" alt=\"Photo de la recette\"><!--mettre image ici-->\n                <div class=\"card-body\">\n                    <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                    <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                    <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                </div>\n                <div class=\"card-footer text-center bg-white\">\n                    <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                    \n            </div>\n        </div>\n    </div>\n</div>\n\n\n<h5>Les Nouveautés</h5>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of this.latestRecipes\"> <!--Pour chaque recette on représente sa carte-->\n            <div class=\"card h-100\">\n                <img class=\"card-img-top img-fluid\" src=\"{{recette.lienImage}}\" alt=\"Photo de la recette\"><!--mettre image ici-->\n                <div class=\"card-body\">\n                    <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                    <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                    <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                </div>\n                <div class=\"card-footer text-center bg-white\">\n                    <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                    \n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CategoryDetails, IngredientDetails, UniteDetails, RecettesService } from '../../service';\nimport { FormGroup, FormArray, Validators, FormBuilder } from '@angular/forms';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'; //la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-ajout-recette',\n  templateUrl: './ajout-recette.component.html',\n  styleUrls: ['./ajout-recette.component.css']\n})\nexport class AjoutRecetteComponent implements OnInit {\n\n\n  images;\n\n\n  recipe: CreateRecipe = {\n    idRecette: null,\n    nomRecette: '',\n    categories: null,\n    ingredients: null,\n    idImage: null,\n    etapes: ''\n  }\n  \n  public ingredients: IngredientDetails[]\n  public unites: UniteDetails[]\n  public categories: CategoryDetails[]\n\n  public recipeForm: FormGroup\n  public newIngredientForm: FormGroup\n  public ingredientForm: FormGroup\n  public ingredient: FormArray\n\n  public newIngredient: IngredientDetails = {\n    nomIngredient: ''\n  }\n\n  //pour multiple select\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings: IDropdownSettings;\n  fileToUpload: File = null;\n\n  constructor(private recetteService: RecettesService, private formBuilder: FormBuilder, private router: Router, private modalService: NgbModal,\n    private http: HttpClient) { }\n\n  ngOnInit(): void {\n    //on récupère tous les ingrédients, unités, catégories pour les réponses possibles à notre formulaire\n    this.recetteService.getAllIngredients().subscribe(\n      ingredients => {\n        this.ingredients = ingredients\n      }\n    )\n\n    this.recetteService.getAllUnite().subscribe(\n      unites => {\n        this.unites = unites\n      }\n    )\n\n    this.recetteService.getAllCategory().subscribe(\n      categories => {\n        this.categories = categories\n      }\n    )\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'idCategorie',\n      textField: 'libelleCategorie',\n      enableCheckAll: false,\n      itemsShowLimit: 3,\n      allowSearchFilter: true,\n      searchPlaceholderText: \"Rechercher\"\n    };\n\n    this.initRecipeForm()\n\n    this.createIngredientsForm()\n\n    this.addIngredient()\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.images = file;\n    }\n  }\n\n  onSubmit(){\n    const formData = new FormData();\n    formData.append('file', this.images);\n\n    this.http.post<any>('/server/uploads', formData).subscribe(\n      (res) => console.log(res),\n      (err) => console.log(err)\n    );\n  }\n\n  onFileChange(file: any) {\n\n    console.log(file)\n\n    var reader = new FileReader();\n    var dataURL;\n    reader.onload = function() {\n        dataURL = reader.result;\n        console.log(dataURL)\n    };\n    \n    const fileMetaData = {\n      originalname: file[0].name,\n      type: file[0].type,\n      buffer: file[0]\n    }\n    console.log(fileMetaData)\n    this.recetteService.addImage(fileMetaData).subscribe(data => {\n        console.log(data)\n        this.recipe.idImage = data[0]\n      }, error => {\n        console.log(error);\n      });\n  }\n\n  uploadFileToActivity() {\n    this.recetteService.addImage(this.fileToUpload).subscribe(data => {\n      // do something, if upload success\n      }, error => {\n        console.log(error);\n      });\n  }\n\n  createRecipe() {\n\n    const formValue = this.recipeForm.value;\n    const ingredientFormValue = this.ingredientForm.value;\n    const formData = new FormData();\n    formData.append('file', this.images);\n\n    if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.etapes == '' && formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins une catégorie de la recette, au moins rajouter un ingrédient, et remplir le champ de la Préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.etapes == '' && formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins rajouter un ingrédient, et remplir le champ de la Préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.etapes == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir au moins une catégorie de la recette, au moins rajouter un ingrédient, et remplir le champ de la Préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins une catégorie de la recette, et au moins rajouter un ingrédient.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, au moins une catégorie de la recette et le champ de la Préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\" && formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && this.ingredientForm.value.ingredient[0].idIngredient == \"\") {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\"  && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette, et celui de la préparation.\");\n      return;\n    }\n\n    else if (formValue.nomRecette == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ du nom de la recette, et sélectionner au moins une catégorie.\");\n      return;\n    }\n\n    else if (formValue.etapes == '' && this.selectedItems.length == 0) {\n      alert(\"Vous devez remplir le champ de la préparation, et sélectionner au moins une catégorie.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient[0].idIngredient == \"\") {\n      alert(\"Vous devez choisir au moins un ingrédient pour votre recette.\");\n      return;\n    }\n\n    else if (this.selectedItems.length == 0) {\n      alert(\"Vous devez choisir au moins une catégorie pour votre recette.\");\n      return;\n    }\n\n    else if (formValue.etapes == '') {\n      alert(\"Vous devez choisir le champ de la préparation.\");\n      return;\n    }\n\n    else if (formValue.nomRecette == '') {\n      alert(\"Vous devez remplir le champ du nom de la recette.\");\n      return;\n    }\n\n    else if (this.ingredientForm.value.ingredient.forEach(element => {\n        if (element.qte <= 0) {\n          alert(\"Il faut une quantité positive pour l'ingrédient.\");\n          return;\n        }\n    }))\n\n\n    console.log(ingredientFormValue.ingredient)\n    this.recipe.ingredients = ingredientFormValue.ingredient //je récupère les info sur l'ingrédient\n    this.recipe.categories = this.selectedItems\n    this.recipe.nomRecette = formValue.nomRecette\n    this.recipe.etapes = formValue.etapes\n    this.recetteService.addImage(formData).subscribe(res => {\n      this.recipe.idImage = res[0]\n      console.log(res[0])\n      this.recetteService.createRecipe(this.recipe).subscribe(res => {\n        this.recipe.idRecette = res[0] // je récupère l'id de la recette que je viens de créer\n  \n        this.recetteService.addIngredientsAndCategoryToNewRecipe(this.recipe).subscribe(res => {\n          console.log(\"succès !!!!\")\n        });\n      })\n    })\n    //this.router.navigate(['/recipe/'], { queryParams: { id: this.recipe.idRecette } })\n    this.router.navigateByUrl('allRecipes')\n  }\n\n\n  initRecipeForm() {\n    this.recipeForm = this.formBuilder.group({\n      nomRecette: ['', Validators.required],\n      categories: ['', [Validators.required]],\n      ingredients: ['', Validators.required],\n      etapes: ['', Validators.required]\n    });\n  }\n\n  /******  création formulaire pour ajouter autant de lignes ingrédient (qté, nom, unite) qu'on veut *****/\n  //création initiale formulaire ingredients\n  createIngredientsForm() : FormGroup {\n    return this.ingredientForm = this.formBuilder.group({\n      ingredient: this.formBuilder.array([ this.createIngredientForm() ])\n    })\n  }\n\n  createIngredientForm() : FormGroup {\n    return this.formBuilder.group({\n      idIngredient: ['', Validators.required],\n      qte: ['', [Validators.required, Validators.min(0)]],\n      idUnite: ['', Validators.required]\n    });\n  }\n\n  get formData() { return this.ingredientForm.get('ingredient'); }\n\n  //pour ajouter un ingrédient\n  addIngredient() : void {\n    this.ingredient = this.ingredientForm.get('ingredient') as FormArray;\n    this.ingredient.push(this.createIngredientForm());\n  }\n  /*****************************/\n\n  //récupérer le nom du new ingrédient et l'enregistrer dans la bd\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.nomIngredient = result\n        this.recetteService.addIngredient(this.newIngredient)\n        setTimeout (() => {\n          this.recetteService.getAllIngredients().subscribe(\n            ingredients => {\n              this.ingredients = ingredients\n            }\n          )\n       }, 1000);\n      })\n  }\n\n}\n\nexport interface CreateRecipe {\n  idRecette?: number\n  nomRecette?: string\n  categories?: any[]\n  ingredients?: any[]\n  idImage?: File\n  etapes?: string\n}","<script>\n    $(document).ready(function () {\n        $('select').formSelect();\n        $('select.select_all').siblings('ul').prepend('<li id=sm_select_all><span>Select All</span></li>');\n        $('li#sm_select_all').on('click', function () {\n            var jq_elem = $(this),\n                jq_elem_span = jq_elem.find('span'),\n                select_all = jq_elem_span.text() == 'Select All',\n                set_text = select_all ? 'Select None' : 'Select All';\n            jq_elem_span.text(set_text);\n            jq_elem.siblings('li').filter(function () {\n                return $(this).find('input').prop('checked') != select_all;\n            }).click();\n        });\n    })\n</script>\n\n<div id=\"header\">\n    <h2>Ajout d'une nouvelle recette</h2>\n</div>\n\n\n<form [formGroup]=\"recipeForm\" (ngSubmit)=\"createRecipe()\">\n\n    <div id=\"conteneur\">\n        <div class=\"element 1 text-center col-md-6\">\n            <label for=\"validationTooltip05\">Nom de la recette</label>\n            <input type=\"text\" formControlName=\"nomRecette\" class=\"form-control\" id=\"validationTooltip05\" required>\n            <div class=\"invalid-tooltip\">\n                Rentrez un nom correcte.\n            </div>\n        </div>\n\n        <div style=\"text-align: center\">\n            <form>      \n              <div>\n                <input type=\"file\" name=\"image\" (change)=\"selectImage($event)\" />\n              </div>\n              <br>\n              <div>\n                <button type=\"submit\" (click)=\"onSubmit()\">Upload</button>\n              </div>\n            </form>\n        </div>\n\n    <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\" id=\"inputGroupFileAddon01\">Upload</span>\n        </div>\n        <div class=\"custom-file\">\n            <input type=\"file\" class=\"custom-file-input\" id=\"file\" name=\"file\" enctype=\"multipart/form-data\"\n                aria-describedby=\"inputGroupFileAddon01\" (change)=\"onFileChange($event.target.files)\">\n            <label class=\"custom-file-label\" for=\"file\">Choose file</label>\n        </div>\n    </div>\n\n    <div class=\"element 2 custom-file col-md-6\">\n        <input type=\"file\" class=\"custom-file-input\" id=\"file\" aria-describedby=\"inputGroupFileAddon01\"\n            (change)=\"onFileChange($event.target.files)\">\n        <label class=\"custom-file-label\" for=\"file\">Choisir une image...</label>\n    </div>\n\n    <div class=\"element 3 card border-secondary col-md-6\">\n        <div class=\"card-header\">Catégorie</div>\n        <br>\n        <form>\n            <div id=\"ingrForm\" class=\"form-row\">\n                <div class=\"col-md-4 mb-4\">\n                    <ng-multiselect-dropdown [data]=\"categories\" placeholder=\"sélectionner\"\n                        [settings]=\"dropdownSettings\" [(ngModel)]=\"selectedItems\" [ngModelOptions]=\"{standalone: true}\">\n                    </ng-multiselect-dropdown>\n                    <div class=\"invalid-tooltip\">\n                        Selectionnez une catégorie.\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"element 4 card border-secondary col-md-6\">\n        <div class=\"card-header\">Ingrédients</div>\n        <form [formGroup]=\"ingredientForm\">\n            <!--formulaire ingrédients-->\n            <div formArrayName=\"ingredient\">\n                <div *ngFor=\"let ing of formData['controls']; let idx = index\" [formGroupName]=\"idx\" class=\"ingredient\">\n                    <!--idx = indexe d'une ligne ingrédient du formulaire-->\n                    <div id=\"ingrForm\" class=\"form-row\">\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"validationTooltip04\">Ingrédient</label>\n                            <select class=\"custom-select\" id=\"validationTooltip04\" formControlName=\"idIngredient\"\n                                required>\n                                <option *ngFor=\"let ingredient of ingredients\" [ngValue]=\"ingredient.idIngredient\">\n                                    {{ingredient.nomIngredient}}</option>\n                            </select>\n                            <div class=\"invalid-tooltip\">\n                                Selectionnez un ingrédient.\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"validationTooltip05\">Quantité</label>\n                            <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\" formControlName=\"qte\"\n                                required>\n                            <div class=\"invalid-tooltip\">\n                                Rentrez une quantité correcte.\n                                <!--Vérifier que c'est pas négatif ou nulle-->\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"validationTooltip04\">Unité</label>\n                            <select class=\"custom-select\" id=\"validationTooltip04\" formControlName=\"idUnite\" required>\n                                <option *ngFor=\"let unite of unites\" [ngValue]=\"unite.idUnite\">\n                                    {{unite.libelleUnite}}\n                                </option>\n                            </select>\n                            <div class=\"invalid-tooltip\">\n                                Selectionnez une unité.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div id=\"buttonIngredient\" class=\"form-row\">\n                <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"addIngredient()\">Ajouter un nouvel\n                    ingrédient</button>\n                <ng-template #content let-modal>\n                    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\"></h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form>\n                            <div class=\"form-group\">\n                                <label for=\"nomIngredient\"> Nom de l'ingrédient </label>\n                                <div class=\"input-group\">\n                                    <input id=\"nomIngredient\" class=\"form-control\" placeholder=\"Cacahuète\"\n                                        #nomIngredient=\"ngModel\" [(ngModel)]=\"newIngredient.nomIngredient\"\n                                        [ngModelOptions]=\"{standalone: true}\">\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button tyoe=\"button\" class=\"btn btn-outline-dark\"\n                            (click)=\"modal.close(newIngredient.nomIngredient)\">Ajouter</button>\n                    </div>\n                </ng-template>\n\n                <button class=\"btn btn-outline-primary\" (click)=\"open(content)\">Créer un nouvel ingrédient</button>\n                <!--on appelle le modal-->\n            </div>\n\n        </form>\n        <!--fin du formulaire ingrédients-->\n\n    </div>\n    <div class=\"element 5 card border-secondary col-md-6\">\n        <div class=\"card-header\">Préparation</div>\n        <div class=\"card-body\">\n            <textarea class=\"form-control\" formControlName=\"etapes\" id=\"exampleFormControlTextarea1\" rows=\"8\"\n                required></textarea>\n        </div>\n    </div>\n    </div>\n    <div class=\"col text-center\">\n        <button id=\"validateButton\" type=\"submit\" [disabled]=\"ingredientForm.invalid\"\n            class=\"col-ld-6 btn btn-outline-success\">Valider</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-apropos',\n  templateUrl: './apropos.component.html',\n  styleUrls: ['./apropos.component.css']\n})\nexport class AProposComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"mt-5\">A propos</h1>\n<div id=\"conteneur\">\n  <div class=\"element 1 mb-3 col-lg-6 col-md-6 col-sm-6 p-3\">\n    <img src=\"../../assets/img/me.jpeg\" class=\"img-fluid\" width=\"auto\" height=\"auto\" alt=\"photo de l'auteur du site.\">\n  </div>\n  <div class=\"element 2 mb-3 col-lg-6 col-md-6 col-sm-6\">\n    <div id=\"conteneur1\">\n      <p id=\"c1\" class=\"mb-0\">\n        <ul>\n          <li> Je m'appelle Marine.</li>\n          <li> J'ai 21 printemps, et j'étudie dans une école d'ingénieur. </li>\n          <li> Depuis mon plus jeune âge, j'adore cuisiner. </li>\n          <li>J'ai créé ce site afin de partager les recettes que j'aime réaliser au quotidien.</li>\n        </ul>\n    \n      <p id=\"c2\" class=\"mb-0\">\n        <ul>\n          <li> Vous avez accès à toutes les recettes sans être connecté !</li>\n       <li>Créer un compte vous permettra de mettre des recettes en favoris et de les retrouver plus facilement.\n        Vous pourrez aussi créer une liste de course directement à partir des recettes.\n        Si vous le souhaitez, des notifications par mail peuvent vous avertir de l'arrivée d'une nouvelle recette afin\n        de ne rien rater.</li>\n      </ul>\n      \n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CategoryDetails, RecettesService} from '../../service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  public categories: CategoryDetails[] \n\n  public categorie: CategoryDetails = {\n    idCategorie: null,\n    libelleCategorie: ''\n  }\n   \n\n  constructor(private recettesService: RecettesService, private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.recettesService.getAllCategory().subscribe(\n      categories => {\n        this.categories = categories\n      }\n    )\n  }\n\n  deleteCategory(idCategorie: any) {\n    this.recettesService.deleteCategory(idCategorie)\n      .subscribe(res => {\n        this.router.navigate(['/category'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateCategory(categorie: CategoryDetails){\n    this.recettesService.updateCategory(categorie).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addCategory(){\n    this.recettesService.addCategory(this.categorie)\n    window.location.reload()\n  }\n}\n\n","\n<div id=\"header\">\n    <h1>Catégories</h1>\n</div>  \n\n\n<div class='flex-container'>\n  <div>\n    <table class=\"table col-md-12 mx-auto\" *ngFor=\"let categorie of categories\">\n    \n        <tr>\n            <td>\n              <form (submit)=\"updateCategory(categorie)\">\n                <div class=\"form-row align-items-center\">\n                  <div class=\"col-auto\">\n              <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\"  value= {{categorie.libelleCategorie}}\n                  [(ngModel)]=\"categorie.libelleCategorie\">\n            </div>\n            <div class=\"col-auto\">\n              <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n            </div>\n            <div class=\"col-auto\">\n              <button id=\"btn\" type=\"submit\" class=\"btn btn-outline-danger \" (click)=\"deleteCategory(categorie.idCategorie)\" >Supprimer</button>\n              </div>\n              </div>\n              </form>\n            </td>\n          </tr> \n    </table>\n  </div>\n  <div >\n    <h6 id=\"question\" > Ajouter une nouvelle catégorie </h6>\n    <form (submit)=\"addCategory()\">\n      <input type=\"text\" class=\"form-control\" name=\"libelleCategorie\"  placeholder=\"nom catégorie\"\n                        [(ngModel)]=\"categorie.libelleCategorie\">\n\n      <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n      \n      </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1> Cette fonctionnalité n'est pas encore disponible</h1>\n<!-- test ajout photo\n<div class=\"container col-lg-4 col-md-4 col-sm-12 col-xs-12\">\n    <form method=\"post\" [routerLink]=\"['/recipe', recette.idRecette]\"action=\"/upload\" enctype=\"multipart/form-data\">\n\n        <div class=\"form-group\">\n            <label for=\"photo_produit\">Photo</label> :\n            <input type=\"file\" name=\"photo_produit\" multiple>\n        </div>\n\n        <div class=\"form-group text-center\">\n            <input type=\"submit\" class=\"btn btn-primary btn-dr\" value=\"Créer le produit\">\n        </div>\n    </form>\n</div>\n<br>\n-->","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecipeDetails, RecettesService } from '../../service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-gerer-les-recettes',\n  templateUrl: './gerer-les-recettes.component.html',\n  styleUrls: ['./gerer-les-recettes.component.css']\n})\nexport class GererLesRecettesComponent implements OnInit {\n\n  public recette: RecipeDetails\n  public recettes$: Observable<RecipeDetails[]>\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recettesService: RecettesService, private router: Router) { \n    //pour la recherche dynamique\n    this.recettes$ = this.recettesService.getAllRecipes()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n    \n  }\n  \n  deleteRecipe(idRecette: any) {\n    this.recettesService.deleteRecipe(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/handleRecipes']).then(() => {\n          window.location.reload()\n        })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n  \n\n}\n\n","<div id=\"titre\">\n\t<h1>Gerer les recettes</h1>\n</div>\n\n\n<ul id=\"menu\" class=\"nav justify-content-center\">\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/ingredient']\">Gérer les ingrédients</a>\n\t</li>\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/category']\">Gérer les catégories</a>\n\t</li>\n\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/unite']\">Gérer les unités</a>\n\t</li>\n\n\t<li class=\"nav-item\">\n\t\t<a class=\"nav-link\" [routerLink]=\"['/add-recipe']\">Créer une nouvelle recette</a>\n\t</li>\n\n\t<li>\n\t\t<form class=\"form-inline my-2 my-lg-0\">\n\t\t\t<input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\"\n\t\t\t\t[formControl]=\"filter\">\n\t\t</form>\n\t</li>\n</ul>\n\n\n<div id=\"titre\">\n\t<h3>Recettes publiées</h3>\n</div>\n\n\n\n<div id=\"container\" class=\"container\">\n\t<div class=\"row mb-3\" *ngFor=\"let recette of filteredRecipe$ | async\">\n\t\t<div class=\"col-sm-3\"></div>\n\t\t<div class=\"col-md-6 col-sm-6\">\n\t\t\t<div class=\"d-flex flex-row border rounded\">\n\t\t\t\t<div class=\"p-0 w-25\">\n\t\t\t\t\t<img src=\"{{recette.lienImage}}\"\n\t\t\t\t\t\tclass=\"img-thumbnail border-0\" alt=\"photo de la recette\" />\n\n\t\t\t\t</div>\n\t\t\t\t<div class=\"pl-3 pt-2 pr-2 pb-2 w-75 border-left\">\n\n\t\t\t\t\t<h5 class=\"text\">{{recette.nomRecette}}</h5>\n\t\t\t\t\t<ul class=\"m-0 float-left\" style=\"list-style: none; margin:0; padding: 0\">\n\t\t\t\t\t\t<li><i class=\"badge badge-light\"></i>{{recette.nbFavoris}} ♥</li>\n\t\t\t\t\t\t<li><i class=\"badge badge-light\"></i> {{recette.nbVues}} 👁</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-outline-warning\" [routerLink]=\"['/updateRecipe', recette.idRecette]\">Modifier </button>\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-outline-danger\"\n\t\t\t\t\t\t(click)=\"deleteRecipe(recette.idRecette)\">Supprimer</button>\n\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-sm-3\"></div>\n\t</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { IngredientDetails, RecettesService} from '../../service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ingredients',\n  templateUrl: './ingredients.component.html',\n  styleUrls: ['./ingredients.component.css']\n})\nexport class IngredientsComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>\n  public ingredients: IngredientDetails[]\n\n  public ingredient: IngredientDetails = {\n    idIngredient: null,\n    nomIngredient: '',\n    qte: null,\n    libelleUnite: '',\n  }\n  \n  public filteredIngredient$: Observable<IngredientDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n  \n\n  constructor(private recettesService: RecettesService, private router: Router) { \n     //pour la recherche dynamique\n     this.ingredients$ = this.recettesService.getAllIngredients()\n     this.filter = new FormControl('')\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n     this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n       .pipe(map(([ingredients, filterString]) =>\n         ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllIngredients() {\n\n    this.ingredients$ = this.recettesService.getAllIngredients()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteIngredient(idIngredient: any) {\n    this.recettesService.deleteIngredient(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/ingredient'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateIngredient(ingredient: IngredientDetails){\n    this.recettesService.updateIngredient(ingredient).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addIngredient(){\n    this.recettesService.addIngredient(this.ingredient)\n    window.location.reload()\n  }\n\n}\n","<div id=\"titre\">\n  <h1>Ingrédients</h1>\n\n</div>\n\n\n\n\n<div class='flex-container'>\n\n  <div>\n    <form>\n      <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher un ingrédient\"\n        aria-label=\"Search\" [formControl]=\"filter\">\n    </form>\n    <table class=\"table col-md-12 mx-auto\" *ngFor=\"let ingredient of filteredIngredient$ | async\">\n\n      <tr>\n        <td>\n\n          \n            <form (submit)=\"updateIngredient(ingredient)\">\n              <div class=\"form-row align-items-center\">\n                <div class=\"col-auto\">\n          \n                  <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"nomIngredient\" value={{ingredient.nomIngredient}}\n                    [(ngModel)]=\"ingredient.nomIngredient\">\n                </div>\n                <div class=\"col-auto\">\n                  <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n          \n                </div>\n                <div class=\"col-auto\">\n                  <button id=\"btn\" class=\"btn btn-outline-danger \"\n                    (click)=\"deleteIngredient(ingredient.idIngredient)\">Supprimer</button>\n                </div>\n              </div>\n            </form>\n        \n        </td>\n      </tr>\n    </table>\n  </div>\n  <div>\n    <h6 id=\"question\"> Ajouter un nouvel ingredient </h6>\n    <form (submit)=\"addIngredient()\">\n      <input type=\"text\" class=\"form-control\" name=\"nomIngredient\" placeholder=\"nom ingredient\"\n        [(ngModel)]=\"ingredient.nomIngredient\">\n\n      <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n\n    </form>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, TokenPayload } from '../../service/';\nimport { Router } from '@angular/router';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-inscrire',\n  templateUrl: './inscrire.component.html',\n  styleUrls: ['./inscrire.component.css']\n})\nexport class InscrireComponent implements OnInit {\n\n  credentials: TokenPayload = {\n    pseudo: '',\n    email: '',\n    mdp: '',\n    mdp2: '',\n    admin: false,\n    abonneNews: false,\n    error: ''\n  }\n\n  userForm: FormGroup;\n\n  constructor(private auth: AuthentificationService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm()\n  }\n  \n  // We Init the form with the validators\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      mdp: ['', Validators.required],\n      mdp2: ['', Validators.required],\n      abonneNews: ['', Validators.required]\n\n    });\n  }\n\n  register() {\n\n    const formValue = this.userForm.value;\n\n    if (formValue.mdp != formValue.mdp2) {\n      alert(\"Les mots de passe ne sont pas identiques.\");\n      return;\n    }\n\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.email = formValue.email;\n    this.credentials.mdp = formValue.mdp;\n    this.credentials.mdp2 = formValue.mdp2;\n    this.credentials.abonneNews = formValue.abonneNews;\n\n    \n    this.auth.register(this.credentials).subscribe(\n      (res) => {\n        if (res.error == \"L'utilisateur existe déjà\") {\n          alert(\"L'utilisateur existe déjà\");\n          return;\n        } else {\n          this.router.navigate(['profile']);\n        }\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form class=\"example-form\" [formGroup]=\"userForm\" (ngSubmit)=\"register()\" data-toggle=\"validator\" role=\"form\">\n                <!-- Submitting will start this method -->\n                <div class=\"form-group\">\n                    <label>Pseudo *</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"pseudo\" placeholder=\"pseudo\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"inputEmail\" class=\"control-label\">Email *</label>\n                    <input type=\"email\" class=\"form-control\" formControlName=\"email\"\n                        placeholder=\"nom.prenom@exemple.com\" id=\"inputEmail\"\n                        required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                        data-error=\"Bruh, that email address is invalid\">\n                    <div class=\"help-block with-errors\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <label>Mot de passe *</label>\n                    <input type=\"password\" class=\"form-control\" formControlName=\"mdp\" placeholder=\"****\" required>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Confirmer le mot de passe *</label>\n                    <input type=\"password\" class=\"form-control\" formControlName=\"mdp2\" placeholder=\"****\" required>\n                </div>\n\n\n                <div class=\"form-group\">\n                    <label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label>\n                    <br>\n                    <input type=\"radio\" formControlName=\"abonneNews\" value=\"true\" checked> Oui\n                    <input type=\"radio\" formControlName=\"abonneNews\" value=\"false\"> Non\n                </div>\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" [disabled]=\"userForm.invalid\">Créer mon compte</button>\n                <br>\n                <p>* Champs obligatoires.</p>\n\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecettesService, IngredientDetails, AuthentificationService } from '../../service';\nimport { Router } from '@angular/router'\n\n\n@Component({\n  selector: 'app-ma-liste-de-courses',\n  templateUrl: './ma-liste-de-courses.component.html',\n  styleUrls: ['./ma-liste-de-courses.component.css']\n})\nexport class MaListeDeCoursesComponent implements OnInit {\n  public ingredients$: Observable<IngredientDetails[]>\n  public ingredients: IngredientDetails[]\n\n  public ingredient: IngredientDetails\n\n  public filteredIngredient$: Observable<IngredientDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  public ingredientToDelete: IngredientToDelete = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    idIngredient: null\n  }\n\n\n  constructor(private recetteService: RecettesService, private router: Router, private auth: AuthentificationService) {\n    this.ingredients$ = this.recetteService.getListeCourses()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n  }\n\n  getListeCourses() {\n    this.ingredients$ = this.recetteService.getListeCourses()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredIngredient$ = combineLatest(this.ingredients$, this.filter$)\n      .pipe(map(([ingredients, filterString]) =>\n        ingredients.filter(ingredient => ingredient.nomIngredient.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n  \n  deleteListeCourse(idIngredient: any) {\n    this.ingredientToDelete.idIngredient = idIngredient\n    this.recetteService.deleteListeCourse(idIngredient)\n      .subscribe(res => {\n        this.router.navigate(['/shoppingList'], {\n          queryParams: { refresh: new Date().getTime() }\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n    window.location.reload() /* rafraichit la page */\n  }\n}\n\nexport interface IngredientToDelete {\n  pseudo: string\n  idIngredient: number\n}","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<section class=\"jumbotron text-center\">\n    <div class=\"container\">\n        <h1 class=\"jumbotron-heading\">Ma liste de courses</h1>\n    </div>\n</section>\n<div class=\"container mb-4\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"table-responsive\">\n                <table class=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\"> </th>\n                            <th scope=\"col\">Ingrédient</th>\n                           \n                            <th scope=\"col\"><form class=\"form-inline my-2 my-lg-0\">\n                                <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n                              </form>\n                            </th>\n\n                        </tr>\n                    </thead>\n                    <tbody *ngFor=\"let ingredient of filteredIngredient$ | async\">\n                        <tr>\n                            <td><img id=\"image\" src=\"../../assets/img/shoppingList.jpeg\" /> </td>\n                            <td> {{ingredient.nomIngredient}}</td> \n                           \n                            <td class=\"text-right\"> \n                              \n                                <button class=\"btn btn-sm btn-danger\" (click)=deleteListeCourse(ingredient.idIngredient)><i class=\"fa fa-trash\"></i></button>\n                             </td>\n                        </tr>\n\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mes-commentaires',\n  templateUrl: './mes-commentaires.component.html',\n  styleUrls: ['./mes-commentaires.component.css']\n})\nexport class MesCommentairesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Cette fonctionnalité n'est pas disponnible pour le moment </h1>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails } from '../../service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-mes-recettes',\n  templateUrl: './mes-recettes.component.html',\n  styleUrls: ['./mes-recettes.component.css']\n})\nexport class MesRecettesComponent implements OnInit {\n\n  public recettes$: Observable<RecipeDetails[]>\n  public categories: CategoryDetails[]\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recetteService: RecettesService, private router: Router) {\n    //pour la recherche dynamique\n    this.recettes$ = this.recetteService.getFavoris()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  } \n\n  ngOnInit(): void {\n    this.recetteService.getAllCategory().subscribe(\n      res => {\n        this.categories = res\n      }\n    )\n  }\n\n  getFavoris() {\n    this.recettes$ = this.recetteService.getFavoris()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  getFavorisByCategory(idCategorie: any){\n   \n    this.recettes$ = this.recetteService.getFavorisByCategory(idCategorie)\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n  //voir si on peut la récupérer au lieu de la recopier!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload()\n        })\n      }, err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 402) {\n          console.log(\"Cette recette n'existe pas !\")\n        }\n      }\n    })\n  }\n\n  \n  deleteFavoris(idRecette: any) {\n    this.recetteService.deleteFavoris(idRecette)\n      .subscribe(res => {\n        this.router.navigate(['/favorites'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n}\n","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<div id=\"titre\">\n    <h1>Mes recettes ♥</h1>  \n</div>\n\n<ul id=\"menu\" class=\"nav justify-content-center\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" routerLink=\"/favorites\" (click)=\"getFavoris()\">Tous mes favoris</a>\n  </li>\n  <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n    <a class=\"nav-link\" routerLink=\"/favorites\" (click)=\"getFavorisByCategory(categ.idCategorie)\">{{categ.libelleCategorie}}</a>\n  </li> \n  <li>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n    </form>\n</ul>\n\n\n\n<div class=\"container\">\n  <div class=\"row\">\n      <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of filteredRecipe$ | async\"> \n          <div class=\"card h-100\">\n              <img class=\"card-img-top img-fluid\" src=\"{{recette.lienImage}}\" alt=\"Photo de la recette\"> \n              <div class=\"card-body\">\n                  <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                  <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                  <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                  <button id=\"poubelle\" class=\"btn btn-sm btn-danger\" (click)=deleteFavoris(recette.idRecette)><i class=\"fa fa-trash\"></i></button> \n                \n              </div>\n              <div class=\"card-footer text-center bg-white\">\n                  <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                 \n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails, IngredientDetails, QuantiteDetails, UniteDetails } from '../../service';\nimport { HttpResponse, HttpClient } from '@angular/common/http'\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'; //la fenetre qui pop pour ajouter l'ingrédient pendant création d'une recette = modal\n\n@Component({\n  selector: 'app-modifier-recette',\n  templateUrl: './modifier-recette.component.html',\n  styleUrls: ['./modifier-recette.component.css']\n})\nexport class ModifierRecetteComponent implements OnInit {\n\n  public newIngredient: IngredientDetails = {\n    qte: null,\n    idRecette: parseInt(this.route.snapshot.paramMap.get('id')),\n    idIngredient: null,\n    idUnite: null\n  }\n\n  public recette: RecipeDetails = {\n    idRecette: null,\n    nomRecette: 'string',\n    datePublication: null,\n    nbFavoris: null,\n    nbVues: null,\n    idImage: null,\n    lienImage: null,\n    etapes: null\n  }\n  public ingredients: IngredientDetails\n  public unite: UniteDetails\n  public qtes: QuantiteDetails[]\n  public categories: CategoryDetails[]\n  \n  public image\n  public allIngredients: IngredientDetails[] //ingredients disponibles\n  public allUnites: UniteDetails[]\n  public allCategories: CategoryDetails[] //catégories disponibles\n\n \n\n  constructor(private recetteService: RecettesService, private router: Router, private route: ActivatedRoute, private formBuilder: FormBuilder, private modalService: NgbModal,\n    private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      recette => {\n        this.recette = recette\n      }\n    );\n\n    this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredient => {\n        this.ingredients = ingredient\n      }\n    );\n\n    this.recetteService.getImage(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      res => {\n        console.log(res)\n        this.recette.idImage = res[0].idImage\n        console.log(this.recette)\n        this.image = res\n      }\n    );\n\n    this.recetteService.getRestIngredients(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredients => {\n        this.allIngredients = ingredients\n      }\n    )\n\n    this.recetteService.getAllUnite().subscribe(\n      unites => {\n        this.allUnites = unites\n      }\n    )\n\n    this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      categories => {\n        this.allCategories = categories\n      }\n    )\n\n   \n    this.getCategory(parseInt(this.route.snapshot.paramMap.get('id')))\n\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.image = file;\n    }\n  }\n\n  onSubmit(){\n    const formData = new FormData();\n    formData.append('file', this.image);\n    console.log(this.recette)\n\n    this.http.post<any>(`/server/update/${this.recette.idImage}/${this.recette.idRecette}`, formData).subscribe(\n      (res) => {\n        console.log(\"ok\")\n        window.location.reload()\n      }\n    );\n\n\n\n    \n  }\n\n  getCategory(id: any): any {\n    this.recetteService.getCategory(id).subscribe(\n      (categories: CategoryDetails[]) => {\n        this.categories = categories\n      }, err => {\n        if (err instanceof HttpResponse) {\n          if (err.status === 402) {\n            console.log(\"cette recette n'a pas de catégorie!\")\n          }\n        }\n      }\n    )\n    return this.categories\n  }\n\n\n\n  updateRecipeName(recette: RecipeDetails) {\n    this.recetteService. updateRecipeName(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n  updateSteps(recette: RecipeDetails) {\n    this.recetteService.updateSteps(recette).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  updateRecipeIng(recette: RecipeDetails,ingredient: IngredientDetails) {\n    this.recetteService.updateRecipeIng(recette, ingredient).subscribe((res: any) => {\n      window.location.reload()\n    }, (err: any) => {\n      console.error(err)\n    }\n    );\n  }\n\n  deleteIngredientRececipe(ingredient: IngredientDetails, recette: RecipeDetails) {\n    this.recetteService.deleteIngredientRececipe(ingredient, recette)\n      .subscribe(res => {\n        this.router.navigate(['updateRecipe/:id']).then(() => {\n          window.location.reload()\n        })\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  \n  }\n\n  deleteRecipeCategory(categorie: CategoryDetails,recette: RecipeDetails){\n  \n    this.recetteService.deleteRecipeCategory(categorie, recette)\n    .subscribe(res => {\n      setTimeout(() => {\n        this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n          categories => {\n            this.allCategories = categories\n          }\n        )\n        this.recetteService.getCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n          categories => {\n            this.categories = categories\n          }\n        )\n      }, 1000)\n    }, (err) => {\n      console.log(err);\n    }\n    );\n  }\n\n  addRecipeCategory(categorie: CategoryDetails,recette: RecipeDetails){\n    this.recetteService.addRecipeCategory(categorie,recette)\n    .subscribe(res => {\n      setTimeout(() => {\n        this.recetteService.getRestCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n          categories => {\n            this.allCategories = categories\n          }\n        )\n        this.recetteService.getCategory(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n          categories => {\n            this.categories = categories\n          }\n        )\n      }, 1000)\n\n    }, (err) => {\n      console.log(err);\n    }\n    );\n  }\n\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result\n      .then((result) => {\n        this.newIngredient.idIngredient = result.idIngredient\n        this.newIngredient.qte = result.qte\n        this.newIngredient.idUnite = result.idUnite\n        this.recetteService.addIngredientRecette(this.newIngredient)\n        setTimeout (() => {\n          this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n            ingredient => {\n              this.ingredients = ingredient\n            }\n          )\n       }, 1000);\n      })\n  }\n\n}\nexport class Ingredient {\n  idIngredient = '';\n  quantite = '';\n  idUnite = '';\n}\n\n","<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<!--lien pour avoir le petit logo de poubelle-->\n\n<form class=\"form-inline\" id=\"titre\" (submit)=\"updateRecipeName(recette)\">\n\n\n    <div class=\"form-group mb-2\">\n        <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"nomRecette\" value=\"{{recette?.nomRecette}}\"\n            #nomRecette=\"ngModel\" [(ngModel)]=\"recette.nomRecette\">\n    </div>\n\n    <button id=\"btnTitre\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n\n</form>\n\n<form>\n    <div id=\"photo\">\n        <figure class=\"figure\" *ngFor=\"let img of image\">\n            <img src=\"{{img.lienImage}}\" class=\"rounded mx-auto d-block\" alt=\"Responsive image\" id=\"resp\">\n            <hr>\n            <!-- Button trigger modal -->\n            <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                Modifier l'image de la recette\n            </button>\n\n            <!-- Modal -->\n            <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n                aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modification de l'image de la recette</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <figcaption class=\"figure-caption\">\n                                <!--bouton modifier photo à faire-->\n                                <div style=\"text-align: center\">\n                                    <form>\n                                        <div>\n                                            <input type=\"file\" name=\"image\" (change)=\"selectImage($event)\" />\n                                        </div>\n                                    </form>\n                                </div>\n                            </figcaption>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">Modifier</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr>\n        </figure>\n    </div>\n</form>\n\n<!--afficher la/ les catégorie-->\n<div id=\"conteneur1\">\n    <!--afficher la/ les catégorie-->\n    <div id=\"cat\">Catégories</div>\n    <!--catégories de la recette-->\n    <div *ngFor=\"let categ of categories\">\n        <button id=\"poubelle\" class=\"btn btn-sm btn-danger\" (click)=\"deleteRecipeCategory(categ,recette)\"><i\n                class=\"fa fa-trash\"></i></button>\n        {{categ.libelleCategorie}}\n    </div>\n    <!--catégorie dont la recette ne fait pas partie-->\n    <div *ngFor=\"let cat of allCategories\">\n        <button id=\"add\" class=\"btn btn-sm btn-success\" (click)=\"addRecipeCategory(cat,recette)\"><i\n                class=\"fa fa-plus-circle\"></i></button>\n\n        {{cat.libelleCategorie}}\n    </div>\n</div>\n\n\n<br>\n\n<!--ingrédients-->\n<div id=\"conteneur\">\n    <div class=\"element 1\">\n        <div id=\"card\" class=\"element 1 card border-secondary mb-3 col-lg-6 col-md-9 col-sm-6 p-3\">\n            <div class=\"card-header\">Ingrédients</div>\n            <ul>\n                <div class=\"card-body text-secondary\" id=\"ing\">\n                    <div *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n\n                        <form (submit)=\"updateRecipeIng(recette,ingredient)\">\n\n                            <h3>{{ingredient.nomIngredient}}</h3>\n\n\n\n                            <div class=\"form-row\">\n\n                                <div class=\"col-md-3 mb-3\">\n                                    <input id=\"qte\" type=\"text\" class=\"form-control\" name=\"qte\"\n                                        value=\"{{ingredient.qte}}\" #qte=\"ngModel\" [(ngModel)]=\"ingredient.qte\">\n                                </div>\n\n                                <div class=\"col-md-3 mb-3\">\n                                    <select class=\"custom-select\" id=\"unit\" #idUnite=\"ngModel\"\n                                        [(ngModel)]=\"ingredient.idUnite\" [ngModelOptions]=\"{standalone: true}\" required>\n                                        <option [ngValue]=\"ingredient.idUnite\" selected>{{ingredient.libelleUnite}}\n                                        </option>\n                                        <option *ngFor=\"let unite of allUnites\" [ngValue]=\"unite.idUnite\">\n                                            {{unite.libelleUnite}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n\n                            <button id=\"crayon\" class=\"btn btn-sm btn-warning\">Modifier</button>\n\n                            <button id=\"poubelle\" class=\"btn btn-sm btn-danger\"\n                                (click)=deleteIngredientRececipe(ingredient,recette)><i\n                                    class=\"fa fa-trash\"></i></button>\n\n\n\n\n                        </form>\n\n                    </div>\n                </div>\n                <ng-template #content let-modal>\n                    <!--ce qui s'ouvre quand on clique sur créer un nouvel ingrédient-->\n                    <div class=\"modal-header\">\n                        <h4 class=\"modal-title\"></h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form>\n                            <div class=\"form-row\">\n                                <div class=\"col-md-3 mb-3\">\n                                    <label for=\"validationTooltip04\">Ingrédient</label>\n                                    <select class=\"custom-select\" id=\"validationTooltip04\" #idIngredient=\"ngModel\"\n                                        [(ngModel)]=\"newIngredient.idIngredient\" [ngModelOptions]=\"{standalone: true}\"\n                                        required>\n                                        <option *ngFor=\"let ingredient of allIngredients\"\n                                            [ngValue]=\"ingredient.idIngredient\">\n                                            {{ingredient.nomIngredient}}</option>\n                                    </select>\n                                    <div class=\"invalid-tooltip\">\n                                        Selectionnez un ingrédient.\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3 mb-3\">\n                                    <label for=\"validationTooltip05\">Quantité</label>\n                                    <input type=\"number\" class=\"form-control\" id=\"validationTooltip05\" #qte=\"ngModel\"\n                                        [(ngModel)]=\"newIngredient.qte\" [ngModelOptions]=\"{standalone: true}\" required>\n                                    <div class=\"invalid-tooltip\">\n                                        Rentrez une quantité correcte.\n                                        <!--Vérifier que c'est pas négatif ou nulle-->\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3 mb-3\">\n                                    <label for=\"validationTooltip04\">Unité</label>\n                                    <select class=\"custom-select\" id=\"validationTooltip04\" #idUnite=\"ngModel\"\n                                        [(ngModel)]=\"newIngredient.idUnite\" [ngModelOptions]=\"{standalone: true}\"\n                                        required>\n                                        <option *ngFor=\"let unite of allUnites\" [ngValue]=\"unite.idUnite\">\n                                            {{unite.libelleUnite}}\n                                        </option>\n                                    </select>\n                                    <div class=\"invalid-tooltip\">\n                                        Selectionnez une unité.\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button tyoe=\"button\" class=\"btn btn-outline-dark\"\n                            (click)=\"modal.close(newIngredient)\">Ajouter</button>\n                    </div>\n                </ng-template>\n\n                <button class=\"btn btn-outline-primary\" (click)=\"open(content)\">Ajouter un nouvel ingrédient</button>\n\n\n                <!--on appelle le modal-->\n\n\n            </ul>\n        </div>\n\n\n    </div>\n    <div class=\"element 2 card border-secondary mb-3 col-lg-6 col-md-6 col-sm-6\">\n        <div class=\"card-header\">Préparation</div>\n        <div class=\"card-body text-secondary center\">\n\n            <form (submit)=\"updateSteps(recette)\">\n                <textarea class=\"form-control\" #etapes=\"ngModel\" rows=\"15em\" name=\"etapes\" [(ngModel)]=\"recette.etapes\"\n                    value=\" {{recette?.etapes}}\"></textarea>\n\n                <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n            </form>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserProfile } from '../../service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { __param } from 'tslib';\n@Component({\n  selector: 'app-mon-profile',\n  templateUrl: './mon-profile.component.html',\n  styleUrls: ['./mon-profile.component.css']\n})\nexport class MonProfileComponent implements OnInit {\n\n  credentials: UserProfile = {\n    pseudo: '',\n    email: '',\n    abonneNews: true,\n    success: ''\n  }\n\n  constructor(private auth: AuthentificationService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    \n    this.auth.profile().subscribe(\n      user => {\n        this.credentials = user\n      },\n      err => {\n        console.error(err)\n      }\n    )\n    if(this.route.queryParams) {\n      this.route.queryParams\n      .subscribe(params => {\n        this.credentials.success = params.success;\n      })\n    }   \n  }\n\n  updateProfile(){\n    this.auth.updateProfile(this.credentials).subscribe((res: any) => {\n      this.credentials.success = res.success\n        this.router.navigateByUrl('/profile').then(() => {\n          setTimeout(window.location.reload.bind(window.location), 2500);\n        })\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n\n  deleteProfile(pseudo: any) {\n    this.auth.logout();\n    this.auth.deleteProfile(pseudo)\n      .subscribe(res => {\n          this.router.navigate(['/']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","\n<div class=\"container\">\n    <div class=\"jumbotron mt-5\">\n        <div class=\"col-sm-10 mx-auto\" ng-controller=\"formCtrl\" ng-app=\"myApp\">\n            <form (submit)=\"updateProfile()\">\n            <h1 class=\"text-center\">Mes informations personnelles</h1>\n\n            <div *ngIf=\"credentials.success\" class=\"alert alert-success\" role=\"alert\">\n                <label>{{credentials.success}}</label>\n            </div>\n\n            <table class=\"table col-md-8 mx-auto\">\n                <tr>\n                    <td>Pseudo</td>\n                    <td>{{credentials?.pseudo}}</td>\n                </tr>\n    \n               \n                \n                <tr>  \n                    <td><label>Email </label>\n                        <div *ngIf=\"email.errors && (email.invalid || email.touched)\">\n                        <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Entrez une adresse mail valide !</small>\n                    </div>\n                    </td>\n                    <td><input type=\"email\" #email=\"ngModel\" class=\"form-control\" name=\"email\" value= {{credentials?.email}}\n                        [class.is-invalid]=\"email.invalid && email.touched\" required\n                        pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" \n                        [(ngModel)]=\"credentials.email\"></td>\n                       \n                </tr>\n            \n                <tr>\n                    <td>Mot de passe</td>\n                    <td><button class=\"btn btn-outline-dark\" routerLink='/update-password'>Modifier</button></td> \n                </tr>\n                <tr>\n                    <td><label>Voulez vous recevoir un email lorsqu'une nouvelle recette est publiée ?</label></td> \n                    <div *ngIf=\"credentials?.abonneNews\">\n                        <td>\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                checked [(ngModel)]=\"credentials.abonneNews\"> Oui\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                [(ngModel)]=\"credentials.abonneNews\"> Non\n                        </td>\n                    </div>\n                    <div *ngIf=\"!credentials?.abonneNews\">\n                        <td>\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"true\"\n                                [(ngModel)]=\"credentials.abonneNews\"> Oui\n                            <input type=\"radio\" name=\"abonneNews\" [value]=\"false\" \n                                checked [(ngModel)]=\"credentials.abonneNews\"> Non\n                        </td>\n                    </div>\n                    \n                    \n                </tr>\n            </table>\n            <button class=\"btn btn-outline-info btn-block col-sm-8 mx-auto\" *ngIf=\"!email.errors\" type=\"submit\">Enregistrer les modifications</button>\n            <button class=\"btn btn-outline-info btn-block col-sm-8 mx-auto\"  *ngIf=\"email.errors\" type=\"submit\" disabled>Enregistrer les modifications</button>\n            \n            <button class=\"btn btn-outline-danger btn-block col-sm-8 mx-auto\" (click)=\"deleteProfile(credentials?.pseudo)\" \n                type=\"submit\">Supprimer mon compte</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RecipeDetails, RecettesService, IngredientDetails, UniteDetails, QuantiteDetails, FavorisDetails, ListeCoursesDetails, AuthentificationService } from '../../service';\nimport { HttpResponse} from '@angular/common/http'\nimport {Router, ActivatedRoute} from '@angular/router'\nimport {Observable} from 'rxjs'\n\n@Component({\n  selector: 'app-recette',\n  templateUrl: './recette.component.html',\n  styleUrls: ['./recette.component.css']\n})\nexport class RecetteComponent implements OnInit {\n\n  public image\n  public recette: RecipeDetails\n  public ingredients: Observable<IngredientDetails[]>\n  public unite: UniteDetails\n  public qtes: QuantiteDetails[]\n  public newFavori: FavorisDetails = {\n    pseudo : this.auth.getUserDetails().pseudo,\n    idRecette : parseInt(this.route.snapshot.paramMap.get('id'))\n  }\n\n  public newListeCourses: ListeCoursesDetails = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    listIngredients : null\n  }\n\n  constructor(public auth: AuthentificationService ,private recetteService: RecettesService, private router: Router, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.recetteService.getRecipeById(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      recette => {\n        this.recette = recette\n      }\n    );\n\n    this.recetteService.getImage(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      res => {\n        console.log(res)\n        this.image = res\n      }\n    );\n\n    this.recetteService.getIngredientsByIdRecette(parseInt(this.route.snapshot.paramMap.get('id'))).subscribe(\n      ingredient => {\n        this.ingredients = ingredient\n       \n      }\n    );\n  }\n\n  getUtiliserIngredientsByIdRecette(id: any) : QuantiteDetails[] {\n    this.recetteService.getUtiliserIngredientsByIdRecette(id).subscribe(\n      (qtes: QuantiteDetails[]) => {\n        this.qtes = qtes\n      }, err => {\n        if(err instanceof HttpResponse) {\n          if(err.status === 402) {\n            console.log(\"Il n'y a pas d'ingrédients !\")\n          }\n        }\n      }\n    )\n    return this.qtes\n  }\n\n  getUniteByIdUnite(id: any) : UniteDetails {\n    this.recetteService.getUniteById(id).subscribe(\n      (unite: UniteDetails) => {\n        this.unite = unite\n      }, err => {\n        if(err instanceof HttpResponse) {\n          if(err.status === 402) {\n            console.log(\"Il n'y a pas d'ingrédients !\")\n          }\n        }\n      }\n    )\n    return this.unite\n  }\n\n  addFavoris() {\n    this.recetteService.addFavoris(this.newFavori)\n    this.router.navigateByUrl('/favorites').then(() => {\n      window.location.reload()\n    })\n  }\n\n  addListeCourses(){\n    this.newListeCourses.listIngredients = this.ingredients\n    this.recetteService.addListeCourses(this.newListeCourses)\n    \n    this.router.navigate(['/shoppingList']).then(() => {\n      window.location.reload()\n    })\n\n   \n  }\n\n}\n","<div id=\"titre\">\n    <h2>{{recette?.nomRecette}}</h2>\n  \n    <figure class=\"figure\" *ngFor=\"let img of image\">\n        <img src=\"{{img.lienImage}}\" class=\"rounded mx-auto d-block\"  alt=\"Responsive image\" id=\"resp\">\n       <figcaption class=\"figure-caption\">\n            <span class=\"badge badge-light\" id=\"vew\">{{recette?.nbVues}} 👁</span>\n            \n            <span class=\"badge badge-light\" id=\"fav\">{{recette?.nbFavoris}} ♥</span>\n        </figcaption>\n      \n    </figure>\n</div>\n\n<div id=\"conteneur\">\n    <div class=\"element 1\">\n        <div id=\"card\" class=\"element 1 card border-secondary mb-3 col-lg-4 col-md-4 col-sm-4 p-3\">\n            <div class=\"card-header\">Ingrédients</div>\n            <ul> <!--liste points-->\n                <div class=\"card-body text-secondary\" id=\"ing\">\n                    <li *ngFor=\"let ingredient of ingredients\" class=\"card-text\">\n                        {{ingredient.qte}}\n                        {{ingredient.libelleUnite}}\n                        {{ingredient.nomIngredient}}\n                    </li>\n                </div>\n            </ul>\n        </div>\n        <!--bouttons visibles que si on est inscrit-->\n    <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-info\" (click)=\"addListeCourses()\">Ajouter les ingrédients à ma liste de course</button>\n    <button *ngIf=\"this.auth.isLoggedIn()\" id=\"btn\" type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addFavoris()\">♥ Ajouter le recettes à mes favoris</button>\n    </div>\n    <div class=\"element 2 card border-secondary mb-3 col-lg-8 col-md-8 col-sm-8\">\n        <div class=\"card-header\">Préparation</div>\n        <div class=\"card-body text-secondary center\">\n            <pre style=\"line-height: 2.5\" class=\"card-text\"> {{recette?.etapes}}</pre>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { RecipeDetails, RecettesService, CategoryDetails } from '../../service';\nimport {HttpErrorResponse} from '@angular/common/http'\nimport { Router } from '@angular/router';\nimport { async } from '@angular/core/testing';\n \n\n@Component({\n  selector: 'app-recettes',\n  templateUrl: './recettes.component.html',\n  styleUrls: ['./recettes.component.css']\n})\nexport class RecettesComponent implements OnInit {\n\n  public recettes$: Observable<RecipeDetails[]>\n  public categories: CategoryDetails[]\n  public filteredRecipe$: Observable<RecipeDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recetteService: RecettesService, private router: Router) {\n    //pour la recherche dynamique\n    this.recettes$ = this.recetteService.getAllRecipes()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  } \n\n  //dans ngOnInit on récupère les données à afficher au lancement de la page\n  ngOnInit(): void {\n    this.getAllCategory()\n  }\n\n  getAllRecipes() {\n\n    this.recettes$ = this.recetteService.getAllRecipes()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  getImageByIdRecipe(id: number) : any {\n    this.recetteService.getImage(id).subscribe(\n      res => {\n        console.log(res)\n        return res.lienImage\n      })\n  }\n\n  getAllCategory(){\n    this.recetteService.getAllCategory().subscribe(\n      (categorie: CategoryDetails[]) => {\n        \n        this.categories = categorie\n      }, err => {\n        if(err instanceof HttpErrorResponse) {\n          if(err.status === 402){\n            console.log(\"Il n'y a pas de catégorie.\")\n\n          \n          }\n\n        }\n      }\n    )\n  }\n\n  getRecipeByCategory(idCategorie: any){\n   \n    this.recettes$ = this.recetteService.getRecipeByCategory(idCategorie)\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredRecipe$ = combineLatest(this.recettes$, this.filter$)\n      .pipe(map(([recipes, filterString]) =>\n        recipes.filter(recipe => recipe.nomRecette.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  updateNbView(recette: any) {\n    this.recetteService.updateNbView(recette).subscribe(\n      (res) => {\n        this.router.navigate(['/recipe', recette.idRecette]).then(() => {\n          window.location.reload()\n        })\n      }, err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 402) {\n          console.log(\"Cette recette n'existe pas !\")\n        }\n      }\n    })\n    console.log(\"cocuouc\")\n  }\n}\n","<ul id=\"menu\" class=\"nav justify-content-center\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link active\" routerLink=\"/allRecipes\" (click)=\"getAllRecipes()\">Toutes les recettes</a>\n    </li>\n    <li class=\"nav-item\" *ngFor=\"let categ of categories\">\n      <a class=\"nav-link\" routerLink=\"/allRecipes\" (click)=\"getRecipeByCategory(categ.idCategorie)\">{{categ.libelleCategorie}}</a>\n    </li>\n    <li>\n      <form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\" [formControl]=\"filter\">\n      </form>\n    </li>\n  </ul>\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-4 col-md-6 col-sm-12 p-3\"  *ngFor=\"let recette of filteredRecipe$ | async\"> <!--Pour chaque recette on représente sa carte-->\n                <div class=\"card h-100\">\n                    <img class=\"card-img-top img-fluid\" src=\"{{recette.lienImage}}\" alt=\"Photo de la recette\"> \n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{recette.nomRecette}}</h4>\n                        <span class=\"badge badge-light\">{{recette.nbFavoris}} ♥</span>\n                        <span class=\"badge badge-light\">{{recette.nbVues}} 👁</span>\n                    </div>\n                    <div class=\"card-footer text-center bg-white\">\n                        <button class=\"btn btn-outline-secondary\" (click)=\"updateNbView(recette)\" [routerLink]=\"['/recipe', recette.idRecette]\">Voir la recette</button> \n                        \n                </div>\n            </div>\n        </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, TokenPayload } from '../../service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-se-connecter',\n  templateUrl: './se-connecter.component.html',\n  styleUrls: ['./se-connecter.component.css']\n})\nexport class SeConnecterComponent implements OnInit {\n\n  loginForm: FormGroup\n\n  credentials: TokenPayload = {\n    pseudo: '',\n    email: '',\n    mdp: '',\n    mdp2: '',\n    admin: false,\n    abonneNews: true,\n    error: ''\n  }\n\n  constructor(private auth: AuthentificationService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm()\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      pseudo: ['', Validators.required],\n      mdp: ['', Validators.required],\n    });\n  }\n\n  login() {\n\n    const formValue = this.loginForm.value;\n    this.credentials.pseudo = formValue.pseudo;\n    this.credentials.mdp = formValue.mdp;\n\n    this.auth.login(this.credentials).subscribe(\n      (res) => {\n        if (res.error == \"Mot de passe et/ou pseudo incorrect\") {\n          alert(res.error);\n        } else {\n          this.router.navigateByUrl('/profile')\n          alert(\"Bienvenue sur Marine's Recipe\")\n        }\n      },\n      err => {\n        console.error(err)\n      }\n    )\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                <h1 class=\"h3 mb-3 font-weight-normal\">Se connecter</h1>\n                <div class=\"form-group\">\n                    <label>Pseudo</label>\n                    <input type=\"text\" class=\"form-control\" required name=\"pseudo\" placeholder=\"pseudo\" formControlName=\"pseudo\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" required name=\"mdp\" placeholder=\"****\" formControlName=\"mdp\">\n                </div>\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Se connecter</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, from } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { UniteDetails, RecettesService} from '../../service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-unite',\n  templateUrl: './unite.component.html',\n  styleUrls: ['./unite.component.css']\n})\nexport class UniteComponent implements OnInit {\n\n  public unites$: Observable<UniteDetails[]>\n  public unites: UniteDetails[]\n\n  public unite: UniteDetails = {\n    idUnite: null,\n    libelleUnite: ''\n  }\n  \n  public filteredUnite$: Observable<UniteDetails[]>\n  public filter: FormControl\n  public filter$: Observable<string>\n\n  constructor(private recettesService: RecettesService, private router: Router) { \n     //pour la recherche dynamique\n     this.unites$ = this.recettesService.getAllUnite()\n     this.filter = new FormControl('')\n     this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n     this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n       .pipe(map(([unites, filterString]) =>\n         unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllUnite() {\n\n    this.unites$ = this.recettesService.getAllUnite()\n    this.filter = new FormControl('')\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''))\n    this.filteredUnite$ = combineLatest(this.unites$, this.filter$)\n      .pipe(map(([unites, filterString]) =>\n        unites.filter(unite => unite.libelleUnite.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)))\n\n  }\n\n  deleteUnite(idUnite: any) {\n    this.recettesService.deleteUnite(idUnite)\n      .subscribe(res => {\n        this.router.navigate(['/unite'], {\n          queryParams: {refresh: new Date().getTime()}\n       })\n        }, (err) => {\n          console.log(err);\n        }\n      );\n      window.location.reload() /* rafraichit la page */\n  }\n\n\n  updateUnite(unite: UniteDetails){\n    this.recettesService.updateUnite(unite).subscribe((res: any) => {\n        window.location.reload()\n      },(err: any) => {\n        console.error(err)\n      }\n    );\n  }\n\n  addUnite(){\n    this.recettesService.addUnite(this.unite)\n    window.location.reload()\n  }\n \n\n}\n","<div id=\"header\">\n  <h1>Unités</h1>\n\n</div>\n\n\n<div class='flex-container'>\n\n  <div>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <input id=\"rech\" class=\"form-control mr-sm-\" type=\"search\" placeholder=\"Rechercher une unité\" aria-label=\"Search\"\n        [formControl]=\"filter\">\n    </form>\n    <table class=\"table col-md-12 mx-auto\" *ngFor=\"let unite of filteredUnite$ | async\">\n\n      <tr>\n        <td>\n\n          <form (submit)=\"updateUnite(unite)\">\n            <div class=\"form-row align-items-center\">\n              <div class=\"col-auto\">\n                <input id=\"zone\" type=\"text\" class=\"form-control\" name=\"libelleUnite\" value={{unite.libelleUnite}}\n                  [(ngModel)]=\"unite.libelleUnite\">\n              </div>\n              <div class=\"col-auto\">\n                <button id=\"btn\" class=\"btn btn-outline-warning\" type=\"submit\">Modifier</button>\n              </div>\n              <div class=\"col-auto\">\n                <button id=\"btn\" class=\"btn btn-outline-danger \" (click)=\"deleteUnite(unite.idUnite)\">Supprimer</button>\n              </div>\n            </div>\n          </form>\n        </td>\n      </tr>\n    </table>\n  </div>\n  <div>\n    <h6 id=\"question\"> Ajouter une nouvelle unité </h6>\n    <form (submit)=\"addUnite()\">\n      <input type=\"text\" class=\"form-control\" name=\"libelleUnite\" placeholder=\"libelle unité\"\n        [(ngModel)]=\"unite.libelleUnite\">\n\n      <button id=\"btn\" class=\"btn btn-outline-info\" type=\"submit\">Valider</button>\n\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthentificationService, UserMdp } from '../../service';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-update-password',\n  templateUrl: './update-password.component.html',\n  styleUrls: ['./update-password.component.css']\n})\nexport class UpdatePasswordComponent implements OnInit {\n\n  credentials: UserMdp = {\n    pseudo: this.auth.getUserDetails().pseudo,\n    mdp: '',\n    newmdp: '',\n    mdp2: '',\n    error: '',\n    success: ''\n  }\n\n  public updatePasswordForm: FormGroup\n\n  constructor(private auth: AuthentificationService, private router: Router, private modalService: NgbModal, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initUpdatePasswordForm()\n  }\n\n  initUpdatePasswordForm() {\n    this.updatePasswordForm = this.formBuilder.group({\n      mdp: ['', Validators.required],\n      newmdp: ['', [Validators.required]],\n      mdp2: ['', Validators.required]\n    });\n  }\n\n  updatePassword() {\n\n    const formValue = this.updatePasswordForm.value;\n\n    this.credentials.mdp = formValue.mdp\n    this.credentials.newmdp = formValue.newmdp\n    this.credentials.mdp2 = formValue.mdp2\n\n    this.initUpdatePasswordForm()\n\n    if (formValue.newmdp != formValue.mdp2) {\n      alert(\"Les nouveaux mots de passe ne sont pas identiques.\");\n      return;\n    }\n\n    this.auth.updatePassword(this.credentials).subscribe((res: any) => {\n      if (res.error == \"Mot de passe incorrect!\") {\n        alert(\"L'ancien mot de passe n'est pas correct.\");\n        return;\n      } else {\n        this.router.navigateByUrl('/profile')\n      }\n    }, (err: any) => {\n      console.log(err);\n    }\n    );\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mt-5 mx-auto\">\n            <form [formGroup]=\"updatePasswordForm\" (ngSubmit)=\"updatePassword()\">\n                <h1 class=\"h3 mb-3 font-weight-normal\">Modifier mon mot de passe</h1>\n                \n                <div class=\"form-group\">\n                    <label>Ancien mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp\" placeholder=\"****\" formControlName=\"mdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Nouveau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"newmdp\" placeholder=\"****\" formControlName=\"newmdp\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Confirmer le nouveaau mot de passe</label>\n                    <input type=\"password\" class=\"form-control\" name=\"mdp2\" placeholder=\"****\" formControlName=\"mdp2\">\n                </div>\n\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Enregistrer</button>\n            </form>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}